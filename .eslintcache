[{"E:\\MY PROJECT\\BTP-4\\Frontend\\src\\index.js":"1","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\reportWebVitals.js":"2","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\App.js":"3","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\ProductDescription\\productdescription.jsx":"4","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\Notification\\Bes.jsx":"5","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SiteFeedback\\Feedback.jsx":"6","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\NotFound\\NotFound.js":"7","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\Category\\SubCategory\\SubCategories.js":"8","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SearchProduct\\SearchProduct.js":"9","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\PlaceOrder\\PlaceOrder.js":"10","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerSignUp\\SellerRegisterScreen.js":"11","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SignUp\\CustomerRegisterScreen.js":"12","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerProfile\\SellerProfile.js":"13","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\UserProfile\\UserProfile.js":"14","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\Category\\Category.js":"15","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\ProductDescription\\otherSellerProductDiscription.js":"16","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\AllSellers\\AllSellers.js":"17","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\AddProduct\\AddProduct.js":"18","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerProducts\\SellerProducts.js":"19","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\HomeScreen\\HomeScreen.js":"20","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Header\\Header.js":"21","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerSignIn\\SellerSigninScreen.js":"22","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\CustomerOTP\\CustomerOTP.js":"23","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SignIn\\CustomerSigninScreen.js":"24","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerOTP\\SellerOTP.js":"25","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\Cart\\CartScreen.js":"26","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\AllActiveBids\\AllActiveBids.js":"27","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerEditProfile\\SellerEditProfile.js":"28","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\BiddingScreenSeller\\BiddingScreenSeller.js":"29","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\CustomerForgotPassword\\ForgotPassword.js":"30","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\CustomerAllBids\\CustomerAllBids.js":"31","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\EditProfile\\EditProfile.js":"32","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\CustomerBiddingScreen\\CustomerBiddingScreen.js":"33","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Footers\\footer.jsx":"34","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\AboutUs\\aboutus.jsx":"35","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\Category\\Data.js":"36"},{"size":529,"mtime":1613740596970,"results":"37","hashOfConfig":"38"},{"size":375,"mtime":1612198516926,"results":"39","hashOfConfig":"38"},{"size":5055,"mtime":1615791576221,"results":"40","hashOfConfig":"38"},{"size":19609,"mtime":1615815144487,"results":"41","hashOfConfig":"38"},{"size":3630,"mtime":1615815102578,"results":"42","hashOfConfig":"38"},{"size":3228,"mtime":1615815102568,"results":"43","hashOfConfig":"38"},{"size":621,"mtime":1612198516894,"results":"44","hashOfConfig":"38"},{"size":8299,"mtime":1615815144487,"results":"45","hashOfConfig":"38"},{"size":8346,"mtime":1615815144487,"results":"46","hashOfConfig":"38"},{"size":25429,"mtime":1615815117040,"results":"47","hashOfConfig":"38"},{"size":13962,"mtime":1615815144487,"results":"48","hashOfConfig":"38"},{"size":13003,"mtime":1615815144487,"results":"49","hashOfConfig":"38"},{"size":11777,"mtime":1615815144487,"results":"50","hashOfConfig":"38"},{"size":10285,"mtime":1615815144487,"results":"51","hashOfConfig":"38"},{"size":3280,"mtime":1612198516910,"results":"52","hashOfConfig":"38"},{"size":19626,"mtime":1615815144487,"results":"53","hashOfConfig":"38"},{"size":4305,"mtime":1615815144487,"results":"54","hashOfConfig":"38"},{"size":24051,"mtime":1615815144487,"results":"55","hashOfConfig":"38"},{"size":4158,"mtime":1615815102578,"results":"56","hashOfConfig":"38"},{"size":19043,"mtime":1615815144487,"results":"57","hashOfConfig":"38"},{"size":23700,"mtime":1615815144535,"results":"58","hashOfConfig":"38"},{"size":5816,"mtime":1615815144487,"results":"59","hashOfConfig":"38"},{"size":5938,"mtime":1615815144487,"results":"60","hashOfConfig":"38"},{"size":6007,"mtime":1615815144487,"results":"61","hashOfConfig":"38"},{"size":5315,"mtime":1615815144487,"results":"62","hashOfConfig":"38"},{"size":5036,"mtime":1615815102578,"results":"63","hashOfConfig":"38"},{"size":8171,"mtime":1615815117040,"results":"64","hashOfConfig":"38"},{"size":9526,"mtime":1615815102578,"results":"65","hashOfConfig":"38"},{"size":11197,"mtime":1615815117040,"results":"66","hashOfConfig":"38"},{"size":5205,"mtime":1615815144487,"results":"67","hashOfConfig":"38"},{"size":8267,"mtime":1615815117040,"results":"68","hashOfConfig":"38"},{"size":10980,"mtime":1615815102568,"results":"69","hashOfConfig":"38"},{"size":8519,"mtime":1615815117040,"results":"70","hashOfConfig":"38"},{"size":2778,"mtime":1614952387754,"results":"71","hashOfConfig":"38"},{"size":8408,"mtime":1614952387770,"results":"72","hashOfConfig":"38"},{"size":1851,"mtime":1612198516910,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"ca323x",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"77"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"77"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"77"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"77"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"77"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"77"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"77"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"77"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"77"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"77"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"77"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"77"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"77"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"77"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"E:\\MY PROJECT\\BTP-4\\Frontend\\src\\index.js",["175"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["176","177"],"E:\\MY PROJECT\\BTP-4\\Frontend\\src\\reportWebVitals.js",[],"E:\\MY PROJECT\\BTP-4\\Frontend\\src\\App.js",["178"],"import \"./App.css\";\r\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport SellerSigninScreen from \"./components/Screens/SellerSignIn/SellerSigninScreen\";\r\nimport SellerRegisterScreen from \"./components/Screens/SellerSignUp/SellerRegisterScreen\";\r\nimport CustomerSigninScreen from \"./components/Screens/SignIn/CustomerSigninScreen\";\r\nimport CustomerRegisterScreen from \"./components/Screens/SignUp/CustomerRegisterScreen\";\r\nimport { Categories } from \"./components/Screens/Category/Category\";\r\nimport { SubCategories } from \"./components/Screens/Category/SubCategory/SubCategories\";\r\nimport { SearchProduct } from \"./components/Screens/SearchProduct/SearchProduct\";\r\nimport SellerProfile from \"./components/Screens/SellerProfile/SellerProfile\";\r\nimport UserProfile from \"./components/Screens/UserProfile/UserProfile\";\r\nimport CustomerOTP from \"./components/Screens/CustomerOTP/CustomerOTP\";\r\nimport SellerOTP from \"./components/Screens/SellerOTP/SellerOTP\";\r\nimport NotFound from \"./components/NotFound/NotFound\";\r\nimport Footer from \"./components/Footers/footer\";\r\nimport HomeScreen from \"./components/Screens/HomeScreen/HomeScreen\";\r\nimport CartScreen from \"./components/Screens/Cart/CartScreen\";\r\nimport PlaceOrder from \"./components/Screens/PlaceOrder/PlaceOrder\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Productdesc from \"./components/Screens/ProductDescription/productdescription.jsx\";\r\nimport Productdesc2 from \"./components/Screens/ProductDescription/otherSellerProductDiscription\";\r\nimport AboutUs from \"./components/Screens/AboutUs/aboutus\";\r\nimport AddProduct from \"./components/Screens/AddProduct/AddProduct\";\r\nimport Feedback from \"./components/Screens/SiteFeedback/Feedback.jsx\";\r\nimport Notifications from \"./components/Screens/Notification/Bes.jsx\";\r\nimport AllActiveBids from \"./components/Screens/AllActiveBids/AllActiveBids\";\r\nimport AllSellers from \"./components/Screens/AllSellers/AllSellers\";\r\nimport SellerProducts from \"./components/Screens/SellerProducts/SellerProducts\";\r\nimport EditProfile from \"./components/Screens/EditProfile/EditProfile\";\r\nimport SellerEditProfile from \"./components/Screens/SellerEditProfile/SellerEditProfile\";\r\nimport BiddingScreenSeller from './components/Screens/BiddingScreenSeller/BiddingScreenSeller';\r\nimport ForgotPassword from \"./components/Screens/CustomerForgotPassword/ForgotPassword\";\r\nimport CustomerAllBids from './components/Screens/CustomerAllBids/CustomerAllBids';\r\nimport CustomerBiddingScreen from './components/Screens/CustomerBiddingScreen/CustomerBiddingScreen';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"grid-container\">\r\n        <header>\r\n          <Header />\r\n        </header>\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/\" component={HomeScreen} exact />\r\n            <Route path=\"/sellersignin\" component={SellerSigninScreen} />\r\n            <Route\r\n              path=\"/sellersignup\"\r\n              component={SellerRegisterScreen}\r\n              exact\r\n            />\r\n            <Route path=\"/signin\" component={CustomerSigninScreen} exact />\r\n            <Route path=\"/signup\" component={CustomerRegisterScreen} exact />\r\n            <Route path=\"/cart\" component={CartScreen} />\r\n            <Route path=\"/category\" exact component={Categories} />\r\n            <Route path=\"/category/:id\" component={SubCategories} />\r\n            <Route path=\"/sellerprofile\" component={SellerProfile} />\r\n            <Route path=\"/userprofile\" component={UserProfile} />\r\n            <Route path=\"/customerotp\" component={CustomerOTP} />\r\n            <Route path=\"/sellerotp\" component={SellerOTP} />\r\n            <Route path=\"/placeorder\" component={PlaceOrder} />\r\n            <Route path=\"/search/:id\" component={SearchProduct} />\r\n            <Route path=\"/product/:id\" component={Productdesc} />\r\n            <Route path=\"/sellerproduct/:id\" component={Productdesc2} />\r\n            <Route path=\"/aboutus\" component={AboutUs} />\r\n            <Route path=\"/addproduct\" component={AddProduct} />\r\n            <Route path=\"/feedback\" component={Feedback} />\r\n            <Route path=\"/notifications\" component={Notifications} />\r\n            <Route path=\"/allactivebids\" component={AllActiveBids} />\r\n            <Route path=\"/allsellers/:id\" component={AllSellers} />\r\n            <Route path=\"/sellerproducts\" component={SellerProducts} />\r\n            <Route path=\"/editprofile\" component={EditProfile} />\r\n            <Route path=\"/sellereditprofile\" component={SellerEditProfile} />\r\n            <Route path=\"/forgotpassword\" component={ForgotPassword}/>\r\n            <Route path=\"/bids/:id\" component={BiddingScreenSeller} />\r\n            <Route path=\"/mybids\" exact component={CustomerAllBids}/>\r\n            <Route path=\"/mybids/:id\" component={CustomerBiddingScreen}/>\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </main>\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\ProductDescription\\productdescription.jsx",["179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React, { useEffect } from \"react\";\r\nimport \"./productdescription.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CompanyLogo from \"./../../../images/LocoCart.PNG\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { FaCommentsDollar } from \"react-icons/fa\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor:\r\n      theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#1a90ff\",\r\n  },\r\n}))(LinearProgress);\r\nconst jwt = require(\"jsonwebtoken\");\r\ntoast.configure();\r\n\r\nfunction sleep(time) {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\n\r\nconst categories = [\"5\", \"4\", \"3\", \"2\", \"1\"];\r\nlet one = new Set();\r\nlet two = new Set();\r\nlet three = new Set();\r\nlet four = new Set();\r\nlet five = new Set();\r\nlet total = new Set();\r\n\r\nconst baseYear = 2000;\r\nconst generateData = () => {\r\n  const data = {\r\n    categories: [],\r\n    series: {\r\n      name: \"My data over time\",\r\n      data: [],\r\n    },\r\n  };\r\n\r\n  for (let i = 0; i < 200; i++) {\r\n    data.categories.push(baseYear + i);\r\n    data.series.data.push(Math.floor(Math.random() * 200));\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst Productdesc = (props) => {\r\n  const [miniiPrice, setminiiPrice] = React.useState(10000000);\r\n  const [discription, setdiscription] = React.useState(\"Loading\");\r\n  const [IImage, setIImage] = React.useState(\"Loading...\");\r\n  const [name, setname] = React.useState(\"Loading...\");\r\n  const [category, setcategory] = React.useState(\"Loading...\");\r\n  const [sellerId, setsellerId] = React.useState(\"Loading...\");\r\n  const [rating, setRating] = React.useState(1.1);\r\n  const [product, setProduct] = React.useState(\"\");\r\n  const [comments, setComments] = React.useState([]);\r\n  const [objectKey, setObjectKey] = React.useState();\r\n  const history = useHistory();\r\n  const [comment, setComment] = React.useState(\"\");\r\n  const [value, setValue] = React.useState(0);\r\n  const [hover, setHover] = React.useState(0);\r\n\r\n  const [isLoaging, setIsLoaging] = React.useState(true);\r\n  const [userId, setUserId] = React.useState(\"\");\r\n  const [UserName, setUserName] = React.useState(\"\");\r\n  const [oneCount, setOneCount] = React.useState(new Set());\r\n  const [twoCount, setTwoCount] = React.useState(new Set());\r\n  const [threeCount, setThreeCount] = React.useState(new Set());\r\n  const [fourCount, setFourCount] = React.useState(new Set());\r\n  const [fiveCount, setFiveCount] = React.useState(new Set());\r\n  const [totalCount, setTotalCount] = React.useState(new Set());\r\n  const [quantity, setQuantity] = React.useState(1);\r\n\r\n  if (hover < 0 && value === 0) {\r\n    setHover(0);\r\n  }\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: 200,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const ChartContainer = () => (\r\n    <div class=\"reviews-container\">\r\n      <h2>Reviews</h2>\r\n      <div class=\"rreview\">\r\n        <span class=\"icon-container\">\r\n          5 <i class=\"fas fa-star\" style={{ color: \"orange\" }}></i>\r\n        </span>\r\n        <div class=\"progress\">\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(fiveCount.size / totalCount.size) * 100}\r\n          />\r\n        </div>\r\n        <span class=\"percent\">{fiveCount.size}</span>\r\n      </div>\r\n  \r\n      <div class=\"rreview\">\r\n        <span class=\"icon-container\">\r\n          4 <i class=\"fas fa-star\" style={{ color: \"orange\" }}></i>\r\n        </span>\r\n        <div class=\"progress\">\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(fourCount.size / totalCount.size) * 100}\r\n          />\r\n        </div>\r\n        <span class=\"percent\">{fourCount.size}</span>\r\n      </div>\r\n      <div class=\"rreview\">\r\n        <span class=\"icon-container\">\r\n          3 <i class=\"fas fa-star\" style={{ color: \"orange\" }}></i>\r\n        </span>\r\n        <div class=\"progress\">\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(threeCount.size / totalCount.size) * 100}\r\n          />\r\n        </div>\r\n        <span class=\"percent\">{threeCount.size}</span>\r\n      </div>\r\n      <div class=\"rreview\">\r\n        <span class=\"icon-container\">\r\n          2 <i class=\"fas fa-star\" style={{ color: \"orange\" }}></i>\r\n        </span>\r\n        <div class=\"progress\">\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(twoCount.size / totalCount.size) * 100}\r\n          />\r\n        </div>\r\n        <span class=\"percent\">{twoCount.size}</span>\r\n      </div>\r\n      <div class=\"rreview\">\r\n        <span class=\"icon-container\">\r\n          1 <i class=\"fas fa-star\" style={{ color: \"orange\" }}></i>\r\n        </span>\r\n        <div class=\"progress\">\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(oneCount.size / totalCount.size) * 100}\r\n          />\r\n        </div>\r\n        <span class=\"percent\">{oneCount.size}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const jwtToken = localStorage.getItem(\"CustomerJwt\");\r\n      const user = jwt.verify(jwtToken, process.env.REACT_APP_JWT_SECRET);\r\n      // console.log(user);\r\n      setUserId(user._id);\r\n      Axios.get(`http://localhost:3001/api/customer/${user._id}`)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        const customerName =\r\n          response.data.customer.firstName +\r\n          \" \" +\r\n          response.data.customer.lastName;\r\n        setUserName(customerName);\r\n        console.log(\"CustomerName: \" + customerName);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n      Axios.post(\"http://localhost:3001/api/product/searchbyid\", {\r\n        id: props.match.params.id,\r\n      }).then((result) => {\r\n        console.log(result.data.products.Sellers)\r\n        if (result) setIsLoaging(false);\r\n        var minprice = 10000000;\r\n        var minindex = -1;\r\n        for (var key in result.data.products.Sellers) {\r\n          var obj = result.data.products.Sellers[key];\r\n          console.log(obj.SellerPrice)\r\n          if (minprice > obj.SellerPrice) {\r\n            minprice = obj.SellerPrice;\r\n            minindex = key;\r\n          }\r\n        }\r\n        const minSeller = result.data.products.Sellers[minindex];\r\n        setminiiPrice(minprice);\r\n        setdiscription(minSeller.Description);\r\n        setIImage(minSeller.Image);\r\n        setname(result.data.products.Name);\r\n        setcategory(result.data.products.Category);\r\n        setsellerId(minSeller.SellerId);\r\n        setRating(minSeller.Rating.$numberDecimal);\r\n        setComments(minSeller.Comments);\r\n        setObjectKey(minindex);\r\n        for (var key in minSeller.Comments) {\r\n          var obj = minSeller.Comments[key];\r\n          if (obj.Rating.$numberDecimal <= 1) {\r\n            one.add(obj._id);\r\n            total.add(obj._id);\r\n          } else if (\r\n            obj.Rating.$numberDecimal <= 2 &&\r\n            obj.Rating.$numberDecimal > 1\r\n          ) {\r\n            two.add(obj._id);\r\n            total.add(obj._id);\r\n          } else if (\r\n            obj.Rating.$numberDecimal <= 3 &&\r\n            obj.Rating.$numberDecimal > 2\r\n          ) {\r\n            three.add(obj._id);\r\n            total.add(obj._id);\r\n          } else if (\r\n            obj.Rating.$numberDecimal <= 4 &&\r\n            obj.Rating.$numberDecimal > 3\r\n          ) {\r\n            four.add(obj._id);\r\n            total.add(obj._id);\r\n          } else if (\r\n            obj.Rating.$numberDecimal <= 5 &&\r\n            obj.Rating.$numberDecimal > 4\r\n          ) {\r\n            five.add(obj._id);\r\n            total.add(obj._id);\r\n          }\r\n        }\r\n        setOneCount(one);\r\n        setTwoCount(two);\r\n        setThreeCount(three);\r\n        setFourCount(four);\r\n        setFiveCount(five);\r\n        setTotalCount(total);\r\n      });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n      history.push('/signin');\r\n    }\r\n\r\n    \r\n\r\n  }, []);\r\n\r\n  const addToCartHandler = ()=>{\r\n    if(quantity!==\"\"){\r\n      fetch(\r\n        \"http://localhost:3001/api/customer/addtocart\",\r\n        {\r\n          method:\"post\",\r\n          headers:{\r\n            \"Content-Type\":\"application/json\"\r\n          },\r\n          body:JSON.stringify({\r\n            customerId: userId,\r\n            productId: props.match.params.id,\r\n            productName: name,\r\n            quantity: quantity\r\n          })\r\n        }\r\n      ).then(res=>res.json())\r\n      .then(result=>{\r\n        if(result.message===\"Success\"){\r\n          toast.success(\"Successfully added to cart !\",{\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }else{\r\n          toast.error(\"Some error occured !\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }\r\n      })\r\n    }else{\r\n      toast.error(\"Please enter a quantity !\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  const onCommentHandler = (e) => {\r\n    e.preventDefault();\r\n    const url = `http://localhost:3001/api/reviewandcomment/${props.match.params.id}`;\r\n    console.log(\"onCommentHandler\");\r\n    if (userId) {\r\n      Axios.post(\r\n        `http://localhost:3001/api/reviewandcomment/${props.match.params.id}`,\r\n        {\r\n          id: objectKey,\r\n          name: UserName,\r\n          rating: value,\r\n          comment: comment,\r\n          userId: userId,\r\n        }\r\n      )\r\n        .then((result) => {\r\n          console.log(result);\r\n          if (result.data.message === \"Success\") {\r\n            toast.success(\"Thank you for your valueable comment :)\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n              autoClose: 1500,\r\n            });\r\n            window.location.reload(false);\r\n          } else {\r\n            toast.error(\"Something went wrong!!!\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      toast.warning(\"You need to signin to give comment and review !!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n        autoClose: 2000,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100%\", width: \"100%\" }}>\r\n      {isLoaging && (\r\n        <div style={{ height: \"100%\", width: \"100%\" }}>\r\n          <div style={{ marginBottom: \"25%\" }}>\r\n            <div\r\n              className=\"LOGO\"\r\n              style={{ marginLeft: \"40%\", marginTop: \"10%\" }}\r\n            >\r\n              <img src={CompanyLogo} style={{ width: \"30%\", height: \"30%\" }} />\r\n            </div>\r\n            <div style={{ marginLeft: \"48%\" }}>\r\n              <CircularProgress />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!isLoaging && (\r\n        <div>\r\n          <meta charSet=\"UTF-8\" />\r\n          <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0\"\r\n          />\r\n          <link href=\"productdescription.css\" rel=\"stylesheet\" />\r\n          <br />\r\n          <p className=\"ProductDiscContent\">\r\n            <a href=\"/\">Home</a> {\" > \"}\r\n            <a href={`/Category/${category}`}>{category}</a>\r\n            {\" >\"} {name}\r\n          </p>\r\n          <section id=\"product-info\">\r\n            <div className=\"item-image-parent\">\r\n              <ul style={{ width: \"100%\", padding: \"20px\" }}>\r\n                <li style={{ width: \"100%\" }}>\r\n                  <div style={{ width: \"100%\" }}>\r\n                    <img\r\n                      src={IImage}\r\n                      alt=\"default\"\r\n                      style={{\r\n                        width: \"350px\",\r\n                        height: \"500px\",\r\n                        margin: \"21px\",\r\n                        display: \"block\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                        marginTop: \"20px\",\r\n                        marginBottom: \"10px\",\r\n                        top: 0,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>\r\n                    <ChartContainer />\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"item-info-parent\">\r\n              <div className=\"select-items\">\r\n                <div className=\"main-info\" style={{ paddingLeft: \"15px\" }}>\r\n                  <h5 className=\"ProductDiscName\">\r\n                    {name + \" \"}\r\n                    <sup>\r\n                      <span\r\n                        className=\"ProductDescriptionStarRating\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        {rating}\r\n                      </span>\r\n                    </sup>\r\n                  </h5>\r\n                  <Rating\r\n                    name=\"read-only\"\r\n                    value={rating}\r\n                    precision={0.1}\r\n                    readOnly\r\n                  />\r\n                  <p style={{ fontSize: \"1.2rem\", color: \"#7e7474\" }}>\r\n                    <span>\r\n                      <VisibilityIcon />\r\n                      <sup>1000</sup>\r\n                    </span>{\" \"}\r\n                    <RateReviewIcon />\r\n                    <sup>{comments.length}</sup>\r\n                  </p>\r\n\r\n                  <p style={{ fontSize: \"1.3rem\", color: \"green\" }}>\r\n                    PRICE:\r\n                    <span id=\"price\" style={{ fontStyle: \"italic\" }}>\r\n                      {\" \"}\r\n                      ₹{miniiPrice}\r\n                    </span>\r\n                  </p>\r\n\r\n                  <div className=\"ProductDiscButtonDiv\">\r\n                    <ul>\r\n                      <li>\r\n                        <label>Enter quantity</label>\r\n                        <input\r\n                        placeholder=\"Enter quantity\"\r\n                        type=\"number\"\r\n                        value={quantity}\r\n                        onChange={(e)=>{if(e.target.value>0){\r\n                          setQuantity(e.target.value)\r\n                        }}}\r\n                        style={{\r\n                          marginBottom:\"10px\",\r\n                          maxWidth:\"90%\"\r\n                        }}\r\n                        ></input>\r\n                        <button className=\"button button2\"\r\n                        onClick={()=>{addToCartHandler()}}>\r\n                        ADD TO CART\r\n                        </button>\r\n                        <Link to={\"/sellerprofile/\" + sellerId}>\r\n                          <button className=\"button button2\">SELLER PROFILE</button>\r\n                        </Link>\r\n                        <Link to={\"/allsellers/\" + props.match.params.id}>\r\n                          <button className=\"button button2\">SELLERS LIST</button>\r\n                        </Link>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"description\">\r\n                  <ul>\r\n                    <li>\r\n                      <li>\r\n                        <div className=\"ProductDiscBox\">\r\n                          <h4 className=\"ProductDescHeadings\">Model Name: </h4>\r\n                          <p className=\"ProductDiscContent\"> {name}</p>\r\n                        </div>\r\n                      </li>\r\n                      <div className=\"ProductDiscBox\">\r\n                        <h4 className=\"ProductDescHeadings\">Model Number: </h4>\r\n                        <p className=\"ProductDiscContent\"> MQA62HN/A</p>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div>\r\n                        <h4 className=\"ProductDescHeadings\">Browse Type: </h4>\r\n                        <p className=\"ProductDiscContent\"> {category}</p>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div>\r\n                        <h4 className=\"ProductDescHeadings\">Description : </h4>\r\n                        <div className=\"ProductDiscBox\">\r\n                          <p\r\n                            className=\"ProductDiscContent\"\r\n                            style={{ height: \"200px\" }}\r\n                          >\r\n                            {discription}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"ProductDescriptionReview\">\r\n            <div>\r\n              <h2 style={{ color: \"#3f51b5\" }}>Comments {\" & \"} Review</h2>\r\n            </div>\r\n            <div\r\n              className={classes.root}\r\n              className=\"ProductDescriptionReviewRating\"\r\n            >\r\n              <form onSubmit={onCommentHandler}>\r\n                <p style={{ fontSize: \"1.2rem\" }}>\r\n                  <b>Rating: </b>\r\n                  <Rating\r\n                    name=\"hover-feedback\"\r\n                    value={value}\r\n                    min={3}\r\n                    precision={0.5}\r\n                    onChange={(event, newValue) => {\r\n                      setValue(newValue);\r\n                    }}\r\n                    onChangeActive={(event, newHover) => {\r\n                      setHover(newHover);\r\n                    }}\r\n                  />\r\n                  <i>\r\n                    {\" \" + (value === 0 ? hover : value) + \" \"}\r\n                    stars\r\n                  </i>\r\n                </p>\r\n                <textarea\r\n                  style={{ width: \"100%\" }}\r\n                  rows=\"8\"\r\n                  placeholder=\"Your valuable comment...\"\r\n                  className=\"ProductDescriptionTextArea\"\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                ></textarea>\r\n                <br />\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </form>\r\n            </div>\r\n            <hr />\r\n            {comments.map((item) => (\r\n              <div className=\"ProductDescriptionReviewReviews\">\r\n                <h2 style={{ color: \"#3f51b5\" }}>\r\n                  {item.Name + \" \"}\r\n                  <Rating\r\n                    name=\"read-only\"\r\n                    precision={0.5}\r\n                    value={item.Rating.$numberDecimal}\r\n                    readOnly\r\n                  />\r\n                </h2>\r\n                {/* <h5 style={{ fontSize: \"1rem\" }}>Totally worthed</h5> */}\r\n                <i>\r\n                  <p>{item.Content}</p>\r\n                </i>\r\n              </div>\r\n            ))}\r\n          </section>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Productdesc;\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\Notification\\Bes.jsx",["193","194","195","196"],"import React from \"react\";\r\nimport \"./Besa.css\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\ntoast.configure();\r\n\r\nfunction sleep(time) {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\n\r\nconst times = new Date().toLocaleTimeString();\r\nconst Notifications = () => {\r\n  const history = useHistory();\r\n  const [notifications, setNotifications] = React.useState([]);\r\n  React.useEffect(async () => {\r\n    try {\r\n      const jwtToken = await localStorage.getItem(\"CustomerJwt\");\r\n      console.log(jwt);\r\n      const user = await jwt.verify(jwtToken, process.env.REACT_APP_JWT_SECRET);\r\n\r\n      if (user) {\r\n        console.log(user);\r\n        const resp = await Axios.get(\r\n          `http://localhost:3001/api/notification/${user._id}`\r\n        )\r\n          .then(function (response) {\r\n            console.log(response);\r\n            if (response.data.message === \"Success\") {\r\n              setNotifications(response.data.notification.notifications);\r\n              toast.success(\"Sweet !\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1500,\r\n              });\r\n            } else if (response.data.message === \"Your cart is empty\") {\r\n              toast.warning(\"No notifications for now !!!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1500,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong !!!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1500,\r\n              });\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        toast.error(\"Please signin to see notifications !!!\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n          autoClose: 1500,\r\n        });\r\n        sleep(2000).then(() => {\r\n          history.push(\"/signin\");\r\n          window.location.reload(false);\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div style={{ height: \"10px\" }}></div>\r\n      <div className=\"container pb-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            {notifications.reverse().map((notification) => (\r\n              <div className=\"horizontal-card\">\r\n                <img src={notification.image} alt=\"\" />\r\n                <div className=\"horizontal-card-body\" style={{ width: \"100%\" }}>\r\n                  <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                    <div>\r\n                      <p className=\"name\" style={{ float: \"left\" }}>\r\n                        {notification.heading}\r\n                      </p>\r\n                    </div>\r\n                    <div style={{ float: \"right\" }}>\r\n                      {\"Time:\" +\r\n                        notification.timeStamp.slice(12, 19) +\r\n                        \"  Date:\" +\r\n                        notification.timeStamp.slice(0, 10)}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"order\">{notification.description}</p>\r\n                  </div>\r\n\r\n                  <div className=\"profile\">\r\n                    <a href={notification.link}>Click Here</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Notifications;\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SiteFeedback\\Feedback.jsx",["197"],"import React,{useState} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport './Style.css';\r\nimport Axios from 'axios';\r\n\r\nconst Feedback=()=>{\r\n\r\n  const [names,setNames]=useState({\r\n     name:\"\",\r\n     email:\"\",\r\n     phone:\"\",\r\n     message:\"\"\r\n  });\r\n    const InputEvent=(event)=>{\r\n            const{value,name}=event.target;\r\n            setNames((preValue)=>{\r\n              if(name===\"name\")\r\n              {\r\n               return{\r\n                 name:value,\r\n                 email:preValue.email,\r\n                 message:preValue.message,\r\n                 phone:preValue.phone,\r\n               };\r\n              }\r\n              else if(name===\"message\")\r\n              {\r\n               return{\r\n                 name:preValue.name,\r\n                 email:preValue.email,\r\n                 message:value,\r\n                 phone:preValue.phone,\r\n               };\r\n              }\r\n              else if(name===\"phone\")\r\n              {\r\n               return{\r\n                 name:preValue.name,\r\n                 email:preValue.email,\r\n                 message:preValue.message,\r\n                 phone:value,\r\n               };\r\n              }\r\n              else if(name===\"email\")\r\n              {\r\n               return{\r\n                 name:preValue.name,\r\n                 email:value,\r\n                 message:preValue.message,\r\n                 phone:preValue.phone,\r\n               };\r\n              }\r\n            });\r\n          \r\n    };\r\n\r\n    const onSubmit=(event)=>{\r\n      event.preventDefault();\r\n      console.log(names.email);\r\n      if(names.email===''||names.message===''||names.phone===''||names.name==='')\r\n      {\r\n          alert(\"Please fill all the feilds\");\r\n          window.location.reload();\r\n      }\r\n      else\r\n      {\r\n      Axios.post(\r\n        `http://localhost:3001/api/feedback`,\r\n        {\r\n          email:names.email,\r\n          message:names.message,\r\n          name:names.name\r\n        }\r\n        \r\n      )\r\n        .then((result) => {})\r\n\r\n    };\r\n    alert(\"Thank You for your response\");\r\n    window.location.reload();\r\n}\r\n\r\n  \r\n    return(\r\n        <>\r\n       <link href=\"Style.css\" rel=\"stylesheet\" />\r\n       <div className=\"bodys\">\r\n        <form onSubmit={onSubmit}>\r\n            \r\n            \r\n  <h1 className=\"feed\">FEEDBACK</h1>\r\n  <p className=\"feed\">Please take a moment to get in touch, we will get back to you shortly.</p>\r\n  <div className=\"columnss\">\r\n    <div className=\"the-name\">Your Name</div>\r\n    <input type=\"text\" name=\"name\" id=\"the-name\"\r\n      onChange={InputEvent} value={names.name}/>\r\n    <div className=\"the-email\">Email Address </div>\r\n    <input type=\"email\" name=\"email\" id=\"the-email\" onChange={InputEvent} />\r\n    <div className=\"the-phone\">Phone Number</div>\r\n    <input type=\"tel\" name=\"phone\" id=\"the-phone\" onChange={InputEvent} value={names.phone}/>\r\n  </div>\r\n  <div className=\"columnss\">\r\n    <label className=\"the-message\">MESSAGE</label>\r\n    <textarea name=\"message\" id=\"the-message\" defaultValue={\"\"} onChange={InputEvent} value={names.message}/>\r\n    <input type=\"submit\" defaultValue=\"Send Message\" />\r\n  </div>\r\n \r\n</form>\r\n</div>\r\n\r\n        </>\r\n        )\r\n    }\r\nexport default Feedback;\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\NotFound\\NotFound.js",[],"E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\Category\\SubCategory\\SubCategories.js",["198","199","200","201","202","203"],"import React from \"react\";\r\nimport { Media } from \"react-bootstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./subcategory.scss\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nfunction MediaCard(props) {\r\n  const [rating, setRating] = React.useState(1.1);\r\n  const [id, setid] = React.useState(props._id);\r\n  const [miniPrice, setminiPrice] = React.useState(100000000);\r\n  const [discription, setdiscription] = React.useState(\"Product\");\r\n  const [image, setimage] = React.useState(\"HII\");\r\n  for (var key in props.Sellers) {\r\n    var obj = props.Sellers[key];\r\n    if (parseInt(miniPrice, 10) > parseInt(obj.SellerPrice, 10)) {\r\n      setminiPrice(obj.SellerPrice);\r\n      setdiscription(obj.Description);\r\n      setimage(obj.Image);\r\n      setRating(obj.Rating.$numberDecimal);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {parseInt(props.mini, 10) <= parseInt(miniPrice, 10) &&\r\n        parseInt(props.maxi, 10) >= parseInt(miniPrice, 10) && (\r\n          <div class=\"box-wrapper\" style={{ margin: \"10px\" }}>\r\n            <a href={\"/product/\" + id}>\r\n              <img\r\n                src={image}\r\n                alt=\"rhcp\"\r\n                style={{ cursor: \"pointer\" }}\r\n                width=\"450px\"\r\n                height=\"200px\"\r\n              />\r\n            </a>\r\n            <div class=\"box-content\">\r\n              <a class=\"buy\">\r\n                <span>\r\n                  <img\r\n                    style={{\r\n                      marginTop: \"10px\",\r\n                      cursor: \"pointer\",\r\n                      height: \"50px\",\r\n                      width: \"50px\",\r\n                    }}\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\"\r\n                  />\r\n                </span>\r\n              </a>\r\n              <div class=\"title\">{props.Name}</div>\r\n              <div class=\"desc\">\r\n                <b>{props.Category}</b> :{\" \"}\r\n                {discription.length > 20\r\n                  ? discription.substring(0, 17) + \"...\"\r\n                  : discription}\r\n              </div>\r\n              <span class=\"price\">₹ {miniPrice}</span>\r\n              <div class=\"ssfooter stars1\">\r\n                <ul class=\"stars1\">\r\n                  \r\n                  <Rating\r\n                    name=\"read-only\"\r\n                    value={rating}\r\n                    precision={0.1}\r\n                    readOnly\r\n                  />\r\n                  {\"(\" + rating + \")\"}\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"success\"></div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"addtocart\"\r\n              disableElevation\r\n              style={{ height: \"40px\", width: \"90%\", marginBottom: \"8px\" }}\r\n            >\r\n              <p style={{ fontSize: \"1.2rem\" }}>🛒 Add to Cart 🛒</p>\r\n            </Button>\r\n          </div>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function SubCategories(props) {\r\n  const category = props.match.params.id;\r\n\r\n  const [Products, setProducts] = React.useState([]);\r\n  const address = \"http://localhost:3001/api/categoryproducts/\" + category;\r\n\r\n  useEffect(() => {\r\n    Axios.get(address).then((result) => {\r\n      console.log(result);\r\n      setProducts(result.data.products);\r\n    });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const [minPrice, setminPrice] = React.useState(0);\r\n  const [maxPrice, setmaxPrice] = React.useState(1000000000);\r\n  const [miinPrice, setmiinPrice] = React.useState(0);\r\n  const [maaxPrice, setmaaxPrice] = React.useState(1000000000);\r\n\r\n  function settingmaximini() {\r\n    setmaxPrice(maaxPrice);\r\n    setminPrice(miinPrice);\r\n  }\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, true)}\r\n      onKeyDown={toggleDrawer(anchor, true)}\r\n    >\r\n      <List>\r\n        {[\r\n          \"Relevence\",\r\n          \"Popularity\",\r\n          \"Price -- Low to High\",\r\n          \"Price -- High to Low\",\r\n        ].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"Price Range\"].map((text, index) => (\r\n          <>\r\n            <ListItem key={text}>\r\n              <ListItemText primary={text + \" : \"} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Input\r\n                type=\"Number\"\r\n                placeholder=\"Min Price\"\r\n                onChange={(e) => setmiinPrice(e.target.value)}\r\n              />\r\n              <Input\r\n                type=\"Number\"\r\n                placeholder=\"Max Price\"\r\n                onChange={(e) => setmaaxPrice(e.target.value)}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              {parseInt(miinPrice, 10) > 0 &&\r\n                parseInt(maaxPrice, 10) < 100000 &&\r\n                parseInt(miinPrice, 10) <= parseInt(maaxPrice, 10) && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={settingmaximini}\r\n                  >\r\n                    Check\r\n                  </Button>\r\n                )}\r\n            </ListItem>\r\n          </>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  if (\r\n    category === \"Stationery\" ||\r\n    category === \"Grocery\" ||\r\n    category === \"Electronics\" ||\r\n    category === \"Footwear\" ||\r\n    category === \"Sports\" ||\r\n    category === \"Books\"\r\n  )\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            height: \"60px\",\r\n            textAlign: \"center\",\r\n            marginBottom: \"20px\",\r\n            color: \"#000\",\r\n            zIndex: \"100\",\r\n          }}\r\n        >\r\n          <h1 style={{ margin: \"10px\" }}>\r\n            <b>Explore {category} : </b>\r\n            {[\"left\"].map((anchor) => (\r\n              <React.Fragment key={anchor}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={toggleDrawer(anchor, true)}\r\n                >\r\n                  Filter\r\n                </Button>\r\n                <Drawer\r\n                  anchor={anchor}\r\n                  open={state[anchor]}\r\n                  onClose={toggleDrawer(anchor, false)}\r\n                >\r\n                  {list(anchor)}\r\n                </Drawer>\r\n              </React.Fragment>\r\n            ))}\r\n            <br />\r\n          </h1>\r\n        </div>\r\n        <div style={{ margin: \"auto\", width: \"90%\" }}>\r\n          {Products.map((item) => {\r\n            item.mini = minPrice;\r\n            item.maxi = maxPrice;\r\n            return (\r\n              <>\r\n                <MediaCard {...item} />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  else {\r\n    return (\r\n      <>\r\n        <h1>Page Not Found</h1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SearchProduct\\SearchProduct.js",["204","205","206","207","208","209","210","211","212"],"import React from \"react\";\r\nimport { Media } from \"react-bootstrap\";\r\nimport \"../Category/SubCategory/subcategory.scss\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nfunction MediaCard(props) {\r\n  const [rating, setRating] = React.useState(1.1);\r\n  const [id, setid] = React.useState(props._id);\r\n  const [miniPrice, setminiPrice] = React.useState(100000000);\r\n  const [discription, setdiscription] = React.useState(\"Product\");\r\n  const [image, setimage] = React.useState(\"HII\");\r\n  for (var key in props.Sellers) {\r\n    var obj = props.Sellers[key];\r\n    if (parseInt(miniPrice, 10) > parseInt(obj.SellerPrice, 10)) {\r\n      setminiPrice(obj.SellerPrice);\r\n      setdiscription(obj.Description);\r\n      setimage(obj.Image);\r\n      setRating(obj.Rating.$numberDecimal);\r\n    }\r\n  }\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      {parseInt(props.mini, 10) <= parseInt(miniPrice, 10) &&\r\n        parseInt(props.maxi, 10) >= parseInt(miniPrice, 10) && (\r\n          <div class=\"box-wrapper\" style={{ margin: \"10px\" }}>\r\n            <a href={\"/product/\" + id}>\r\n              <img\r\n                src={image}\r\n                alt=\"rhcp\"\r\n                style={{ cursor: \"pointer\" }}\r\n                width=\"450px\"\r\n                height=\"200px\"\r\n              />\r\n            </a>\r\n            <div class=\"box-content\">\r\n              <a class=\"buy\">\r\n                <span>\r\n                  <img\r\n                    style={{\r\n                      marginTop: \"10px\",\r\n                      cursor: \"pointer\",\r\n                      height: \"50px\",\r\n                      width: \"50px\",\r\n                    }}\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\"\r\n                  />\r\n                </span>\r\n              </a>\r\n              <div class=\"title\">{props.Name}</div>\r\n              <div class=\"desc\">\r\n                <b>{props.Category}</b> : {discription}\r\n              </div>\r\n              <span class=\"price\">₹ {miniPrice}</span>\r\n              <div class=\"ssfooter\">\r\n                <ul class=\"stars1\">\r\n                    \r\n                  <Rating\r\n                    name=\"read-only\"\r\n                    value={rating}\r\n                    precision={0.1}\r\n                    readOnly\r\n                  />\r\n                  {\"(\" + rating + \")\"}\r\n                      \r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"success\"></div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"addtocart\"\r\n              disableElevation\r\n              style={{ height: \"40px\", width: \"90%\", marginBottom: \"8px\" }}\r\n            >\r\n              <p style={{ fontSize: \"1.2rem\" }}>🛒 Add to Cart 🛒</p>\r\n            </Button>\r\n          </div>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function SearchProduct(props) {\r\n  window.onload = function () {\r\n    if (!window.location.hash) {\r\n      window.location = window.location + \"#?=Searched\";\r\n      window.location.reload();\r\n    }\r\n  };\r\n  const search = props.match.params.id;\r\n  const [lastsearched, setlastsearched] = React.useState(props.match.params.id);\r\n  localStorage.setItem(\"LastSearched\", props.match.params.id);\r\n\r\n  const [Products, setProducts] = React.useState([]);\r\n  const address = \"http://localhost:3001/api/product/search\";\r\n\r\n  useEffect(() => {\r\n    Axios.post(address, { name: search }).then((result) => {\r\n      console.log(result);\r\n      setProducts(result.data.products);\r\n    });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const [minPrice, setminPrice] = React.useState(0);\r\n  const [maxPrice, setmaxPrice] = React.useState(1000000000);\r\n  const [miinPrice, setmiinPrice] = React.useState(0);\r\n  const [maaxPrice, setmaaxPrice] = React.useState(1000000000);\r\n\r\n  function settingmaximini() {\r\n    setmaxPrice(maaxPrice);\r\n    setminPrice(miinPrice);\r\n  }\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, true)}\r\n      onKeyDown={toggleDrawer(anchor, true)}\r\n    >\r\n      <List>\r\n        {[\r\n          \"Relevence\",\r\n          \"Popularity\",\r\n          \"Price -- Low to High\",\r\n          \"Price -- High to Low\",\r\n        ].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"Price Range\"].map((text, index) => (\r\n          <>\r\n            <ListItem key={text}>\r\n              <ListItemText primary={text + \" : \"} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Input\r\n                type=\"Number\"\r\n                placeholder=\"Min Price\"\r\n                onChange={(e) => setmiinPrice(e.target.value)}\r\n              />\r\n              <Input\r\n                type=\"Number\"\r\n                placeholder=\"Max Price\"\r\n                onChange={(e) => setmaaxPrice(e.target.value)}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              {parseInt(miinPrice, 10) > 0 &&\r\n                parseInt(maaxPrice, 10) < 100000 &&\r\n                parseInt(miinPrice, 10) <= parseInt(maaxPrice, 10) && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={settingmaximini}\r\n                  >\r\n                    Check\r\n                  </Button>\r\n                )}\r\n            </ListItem>\r\n          </>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {lastsearched != localStorage.getItem(\"LastSearched\") &&\r\n        window.location.reload(false)}\r\n      <div\r\n        style={{\r\n          height: \"60px\",\r\n          textAlign: \"center\",\r\n          marginBottom: \"20px\",\r\n          color: \"#000\",\r\n          zIndex: \"100\",\r\n        }}\r\n      >\r\n        <h1 style={{ margin: \"10px\" }}>\r\n          <b>Search Result For \"{search}\" : </b>\r\n\r\n          {[\"left\"].map((anchor) => (\r\n            <React.Fragment key={anchor}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={toggleDrawer(anchor, true)}\r\n              >\r\n                Filter\r\n              </Button>\r\n              <Drawer\r\n                anchor={anchor}\r\n                open={state[anchor]}\r\n                onClose={toggleDrawer(anchor, false)}\r\n              >\r\n                {list(anchor)}\r\n              </Drawer>\r\n            </React.Fragment>\r\n          ))}\r\n\r\n          <br />\r\n        </h1>\r\n      </div>\r\n      <div style={{ margin: \"auto\", width: \"90%\" }}>\r\n        {Products.map((item) => {\r\n          item.mini = minPrice;\r\n          item.maxi = maxPrice;\r\n          return (\r\n            <>\r\n              <MediaCard {...item} />\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\PlaceOrder\\PlaceOrder.js",["213","214","215","216","217","218","219","220","221","222","223"],"E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerSignUp\\SellerRegisterScreen.js",["224"],"E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SignUp\\CustomerRegisterScreen.js",[],"E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerProfile\\SellerProfile.js",["225","226","227","228","229"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./SellerProfile.css\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { FaWindowClose } from \"react-icons/fa\";\r\nimport Axios from 'axios';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: \"absolute\",\r\n      width: 400,\r\n      background: \"#fff\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      // borderRadius: \"25px\"\r\n    },\r\n  }));\r\n\r\nconst SellerProfile = (props) => {\r\n  \r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [firstName, setFirstName] = useState(\"Loading...\");\r\n  const [lastName, setLastName] = useState(\"Loading...\");\r\n  const [email, setEmail] = useState(\"Loading...\");\r\n  const [pic, setPic] = useState(\"Loading...\");\r\n  const [city, setCity] = useState(\"Loading...\");\r\n  const [state, setState] = useState(\"Loading...\");\r\n  const [country, setCountry] = useState(\"Loading...\");\r\n  const [phoneNo, setPhoneNo] = useState(\"Loading...\");\r\n  const [rating, setRating] = useState(\"Loading...\");\r\n  const [category, setCategory] = useState(\"Loading...\");\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [pastOrder, setPastOrder] = React.useState([]);\r\n  const jwt = require(\"jsonwebtoken\");\r\n  \r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n    \r\n\r\n  useEffect(async() => {\r\n    var jwtToken = await localStorage.getItem(\"sellerjwt\");\r\n    const user = await jwt.verify(\r\n      jwtToken,\r\n      process.env.REACT_APP_JWT_SECRET\r\n    );\r\n\r\n    fetch(\r\n      `http://localhost:3001/api/seller/${user._id}`,\r\n      {\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.message === \"Success\") {\r\n          setFirstName(result.seller.firstName);\r\n          setLastName(result.seller.lastName);\r\n          setEmail(result.seller.email);\r\n          setPic(result.seller.profilePictureUrl);\r\n          setPhoneNo(result.seller.contactNo);\r\n          setCity(result.seller.city);\r\n          setState(result.seller.state);\r\n          setCountry(result.seller.country);\r\n          setRating(result.seller.rating);\r\n          setCategory(result.seller.category);\r\n        } else {\r\n          history.push(\"/error\");\r\n        }\r\n      });\r\n\r\n      Axios.post(\r\n        \"http://localhost:3001/api/sellerpastorder/seller_past_order\"\r\n          ,\r\n      {sellerId : user._id})\r\n      .then((result) => {\r\n          console.log(result);\r\n          setPastOrder(result.data.history);\r\n      })\r\n  }, []);\r\n\r\n\r\n      const PastOrderCard = (props)=>{\r\n        console.log(props);\r\n        return(\r\n            <>\r\n             <Grid container xs={12} sm={12} md={12} lg={12} className=\"review\">\r\n                <Grid item xs={12} sm={12} md={4} lg={4}>\r\n                    <img src=\"https://avatars0.githubusercontent.com/u/67575900?s=400&u=a87b16f58b6cf169801a1f7c97237b039dc2bf76&v=4\"\r\n                    className=\"seller-img\"/>\r\n                    <h3 className=\"seller-name\">Prerit Customer 2</h3>\r\n                    <p className=\"seller-rating\">Rated 4</p><StarIcon color=\"primary\"/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={8} lg={8} >\r\n                <div style={{margin: \"auto\"}}>\r\n                            <div style={{float: \"right\",marginRight: \"4%\"}}>\r\n                                🟢 Ordered On : Mar 3, 2021\r\n                            </div>\r\n                            <div>\r\n                            <br/>\r\n                            <br/>\r\n                            <Button color=\"primary\" variant=\"outlined\">\r\n                                Total Cart Value : ₹ 1562.00 /-       \r\n                            </Button>\r\n                            <div class=\"stars1\">\r\n                                <i class=\"fas fa-star\"></i>\r\n                                <i class=\"fas fa-star\"></i>\r\n                                <i class=\"fas fa-star\"></i>\r\n                                <i class=\"fas fa-star\"></i>\r\n                                <i class=\"fas fa-star\"></i>\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"primary\" endIcon={<Icon>send</Icon>} onClick={handleOpen}>\r\n                            More Details\r\n                            </Button>\r\n                            <br/>\r\n                            <br/>\r\n                            </div>         \r\n                    </div>\r\n                </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n    <Grid container className=\"all_content\">\r\n      <Grid item xs={12} sm={12} md={12} lg={12} className=\"intro\">\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={4} lg={4}>\r\n            <img className=\"userImage\" src={pic} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={8} lg={8} className=\"userDetail\">\r\n            <h1 className=\"name\">{firstName + \" \" + lastName}</h1>\r\n            <h3 className=\"location\">{city + \", \" + state + \", \" + country}</h3>\r\n            <p className=\"interest\">Category: {category}</p>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={4} lg={4}>\r\n            <h6 className=\"section-heading\">Other Details</h6>\r\n            <div className=\"allExtra\">\r\n              <EmailIcon color=\"primary\" />{\" \"}\r\n              <span className=\"extra-info\">{email}</span>\r\n              <br></br>\r\n              <PhoneIcon color=\"primary\" />\r\n              <span className=\"extra-info\">{phoneNo}</span>\r\n              <br></br>\r\n              <AssignmentTurnedInIcon color=\"primary\" />\r\n              <span className=\"extra-info\">12 Orders till now</span>\r\n              <br></br>\r\n              <StarIcon color=\"primary\" />\r\n              <span className=\"extra-info\">{rating} average rating</span>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={8} lg={8} className=\"products\">\r\n            \r\n            {\r\n              /* <h6 className=\"section-heading\">Products</h6>\r\n            <Grid container xs={12} sm={12} md={12} lg={12}>\r\n              <Grid item xs={12} sm={5} md={5} lg={5} className=\"product\">\r\n                <img\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTvHxnUgAMTCsiH_RIXW8D6gRcYIqB9dY_jSQ&usqp=CAU\"\r\n                  className=\"product-img\"\r\n                />\r\n                <h3 className=\"product-name\">Formal Blazer</h3>\r\n                <p className=\"product-price\">₹3000</p>\r\n              </Grid>\r\n              <Grid item xs={12} sm={5} md={5} lg={5} className=\"product\">\r\n                <img\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ2li0nH-jB5wmghNuwg9bsjMhpFlcFEEfLDA&usqp=CAU\"\r\n                  className=\"product-img\"\r\n                />\r\n                <h3 className=\"product-name\">Sports Shoes</h3>\r\n                <p className=\"product-price\">₹150</p>\r\n              </Grid>\r\n              <Grid item xs={12} sm={5} md={5} lg={5} className=\"product\">\r\n                <img\r\n                  src=\"https://static.fratello.com/2017/06/DSC_6425-2.jpg\"\r\n                  className=\"product-img\"\r\n                />\r\n                <h3 className=\"product-name\">Gold watch</h3>\r\n                <p className=\"product-price\">₹15000</p>\r\n              </Grid>\r\n              <Grid item xs={12} sm={5} md={5} lg={5} className=\"product\">\r\n                <img\r\n                  src=\"https://cdn.shopify.com/s/files/1/1089/8530/products/TB0905-NB_large.jpg?v=1573578354\"\r\n                  className=\"product-img\"\r\n                />\r\n                <h3 className=\"product-name\">Bag</h3>\r\n                <p className=\"product-price\">₹40 lakh</p>\r\n              </Grid> \r\n            </Grid>*/}\r\n\r\n            <br />\r\n            <hr />\r\n            <h6 className=\"section-heading\" >PAST ORDERS</h6>\r\n            <hr/>\r\n            <div style={{height: \"700px\",overflowY: \"scroll\",overflowX: \"hidden\"}}>\r\n                \r\n              \r\n\r\n                <PastOrderCard />\r\n                <PastOrderCard />\r\n                <PastOrderCard />\r\n                <PastOrderCard />\r\n                <PastOrderCard />\r\n                <PastOrderCard />\r\n                <PastOrderCard />\r\n            \r\n              </div>\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n       <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n        >\r\n            <div style={modalStyle} className={classes.paper}>\r\n            <div\r\n                style={{\r\n                right: 0,\r\n                top: 0,\r\n                margin: \"20px\",\r\n                position: \"fixed\",\r\n                color: \"#000\",\r\n                }}\r\n            >\r\n                <FaWindowClose onClick={handleClose} />\r\n            </div>\r\n            <br />\r\n            <div\r\n                style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                transform: \"translate3d(0%,10%,20px)\",\r\n                color: \"#000\",\r\n                }}\r\n            >\r\n                <h1 id=\"simple-modal-title\">\r\n                <b > ITEMS </b>\r\n                </h1>\r\n                <div style={{height: \"150px\",overflowY: \"scroll\",overflowX: \"hidden\",marginBottom: \"5%\"}}>\r\n                    <table>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Qty</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Peter</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lois</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Peter</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lois</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Peter</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lois</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Peter</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lois</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SellerProfile;\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\UserProfile\\UserProfile.js",["230","231","232","233"],"import React,{useEffect,useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './UserProfile.css';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { FaWindowClose } from \"react-icons/fa\";\r\nimport Axios from 'axios';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: \"absolute\",\r\n      width: 400,\r\n      background: \"#fff\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      // borderRadius: \"25px\"\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst UserProfile = (props)=>{\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [firstName, setFirstName] = useState(\"Loading...\");\r\n    const [lastName, setLastName] = useState(\"Loading...\");\r\n    const [email, setEmail] = useState(\"Loading...\");\r\n    const [pic, setPic] = useState(\"Loading...\");\r\n    const [city, setCity] = useState(\"Loading...\");\r\n    const [state, setState] = useState(\"Loading...\");\r\n    const [country, setCountry] = useState(\"Loading...\");\r\n    const [phoneNo, setPhoneNo] = useState(\"Loading...\");\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pastOrder, setPastOrder] = React.useState([]);\r\n\r\n    const handleOpen = () => {\r\n    setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n    setOpen(false);\r\n    };\r\n    \r\n    const PastOrderCard = (props)=>{\r\n        console.log(props);\r\n        return(\r\n            <>\r\n             <Grid container xs={12} sm={12} md={12} lg={12} className=\"review\">\r\n                <Grid item xs={12} sm={12} md={4} lg={4}>\r\n                    <img src=\"https://avatars0.githubusercontent.com/u/67575900?s=400&u=a87b16f58b6cf169801a1f7c97237b039dc2bf76&v=4\"\r\n                    className=\"seller-img\"/>\r\n                    <h3 className=\"seller-name\">Prerit Retailers</h3>\r\n                    <p className=\"seller-rating\">Rated 5</p><StarIcon color=\"primary\"/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={8} lg={8} >\r\n                <div style={{margin: \"auto\"}}>\r\n                            <div style={{float: \"right\",marginRight: \"4%\"}}>\r\n                                🟢 Ordered On : Mar 3, 2021\r\n                            </div>\r\n                            <div>\r\n                            <br/>\r\n                            <br/>\r\n                            <Button color=\"primary\" variant=\"outlined\">\r\n                                Total Cart Value : ₹ 1562.00 /-       \r\n                            </Button>\r\n                            <div class=\"stars1\">\r\n                                <i class=\"fas fa-star\"></i>\r\n                                <i class=\"fas fa-star\"></i>\r\n                                <i class=\"fas fa-star\"></i>\r\n                                <i class=\"fas fa-star\"></i>\r\n                                <i class=\"fas fa-star\"></i>\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"primary\" endIcon={<Icon>send</Icon>} onClick={handleOpen}>\r\n                            More Details\r\n                            </Button>\r\n                            <br/>\r\n                            <br/>\r\n                            You Have Saved 5% On This Order. ! Happy Shopping 🛍️                     \r\n                            </div>         \r\n                    </div>\r\n                </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetch(\r\n            process.env.REACT_APP_BACKEND_API + `customer/${props.location.pathname.substring(13)}`\r\n            ,{\r\n                method:\"get\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            }\r\n        )\r\n        .then(res=>res.json())\r\n        .then(result=>{\r\n            if(result.message === \"Success\"){\r\n                setFirstName(result.customer.firstName);\r\n                setLastName(result.customer.lastName);\r\n                setEmail(result.customer.email);\r\n                setPic(result.customer.profilePictureUrl);\r\n                setPhoneNo(result.customer.contactNo);\r\n                setCity(result.customer.city);\r\n                setState(result.customer.state);\r\n                setCountry(result.customer.country);\r\n            }else{\r\n                history.push('/error')\r\n            }\r\n        })\r\n\r\n        Axios.post(\r\n            \"process.env.REACT_APP_BACKEND_APIcustomerpastorder/customer_past_order\"\r\n            ,\r\n        {customerId : props.location.pathname.substring(13)})\r\n        .then((result) => {\r\n            console.log(result);\r\n            setPastOrder(result.data.history);\r\n        })\r\n\r\n    },[]);\r\n    return(\r\n        <>\r\n\r\n        <Grid container className=\"all_content\">\r\n            <Grid item xs={12} sm={12} md={12} lg={12} className=\"intro\">\r\n            <Grid container>\r\n                <Grid item xs={12} sm={12} md={4} lg={4}>\r\n                <img className=\"userImage\" src={pic}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={8} lg={8} className=\"userDetail\">\r\n                    <h1 className=\"name\">{firstName + \" \" + lastName}</h1>\r\n                    <h3 className=\"location\">{city + \", \" + state + \", \" + country}</h3>\r\n                    <p className=\"interest\">Interests: Fashion & Clothing, Electronics, Books</p>\r\n                </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={12} md={4} lg={4}>\r\n                        <h6 className=\"section-heading\">Other Details</h6>\r\n                        <div className=\"allExtra\" >\r\n                        <EmailIcon color=\"primary\"/> <span className=\"extra-info\">{email}</span>\r\n                         <br></br>\r\n                         <PhoneIcon color=\"primary\"/><span className=\"extra-info\">{phoneNo}</span>\r\n                         <br></br>\r\n                         <AssignmentTurnedInIcon color=\"primary\"/><span className=\"extra-info\">12 Orders till now</span>\r\n                         <br></br>\r\n                         <StarIcon color=\"primary\"/><span className=\"extra-info\">4.3 average rating</span>\r\n                         </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={8} lg={8} className=\"all-reviews\">\r\n                        <br />\r\n                        <hr />\r\n                        <h6 className=\"section-heading\" >MY PAST ORDERS</h6>\r\n                        <hr/>\r\n                        <div style={{height: \"700px\",overflowY: \"scroll\",overflowX: \"hidden\"}}>\r\n                           \r\n                          \r\n\r\n                            <PastOrderCard />\r\n                            <PastOrderCard />\r\n                            <PastOrderCard />\r\n                            <PastOrderCard />\r\n                            <PastOrderCard />\r\n                            <PastOrderCard />\r\n                            <PastOrderCard />\r\n                        \r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n        >\r\n            <div style={modalStyle} className={classes.paper}>\r\n            <div\r\n                style={{\r\n                right: 0,\r\n                top: 0,\r\n                margin: \"20px\",\r\n                position: \"fixed\",\r\n                color: \"#000\",\r\n                }}\r\n            >\r\n                <FaWindowClose onClick={handleClose} />\r\n            </div>\r\n            <br />\r\n            <div\r\n                style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                transform: \"translate3d(0%,10%,20px)\",\r\n                color: \"#000\",\r\n                }}\r\n            >\r\n                <h1 id=\"simple-modal-title\">\r\n                <b > ITEMS </b>\r\n                </h1>\r\n                <div style={{height: \"150px\",overflowY: \"scroll\",overflowX: \"hidden\",marginBottom: \"5%\"}}>\r\n                    <table>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Qty</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Peter</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lois</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Peter</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lois</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Peter</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lois</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Peter</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lois</td>\r\n                        <td>2</td>\r\n                    </tr>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\Category\\Category.js",[],"E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\ProductDescription\\otherSellerProductDiscription.js",["234","235","236","237","238","239","240","241","242","243","244","245","246","247","248"],"import React, { useEffect } from \"react\";\r\nimport \"./productdescription.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CompanyLogo from \"./../../../images/LocoCart.PNG\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { FaCommentsDollar } from \"react-icons/fa\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor:\r\n      theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#1a90ff\",\r\n  },\r\n}))(LinearProgress);\r\nconst jwt = require(\"jsonwebtoken\");\r\ntoast.configure();\r\n\r\nfunction sleep(time) {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\n\r\nconst categories = [\"5\", \"4\", \"3\", \"2\", \"1\"];\r\nlet one = new Set();\r\nlet two = new Set();\r\nlet three = new Set();\r\nlet four = new Set();\r\nlet five = new Set();\r\nlet total = new Set();\r\n\r\nconst baseYear = 2000;\r\nconst generateData = () => {\r\n  const data = {\r\n    categories: [],\r\n    series: {\r\n      name: \"My data over time\",\r\n      data: [],\r\n    },\r\n  };\r\n\r\n  for (let i = 0; i < 200; i++) {\r\n    data.categories.push(baseYear + i);\r\n    data.series.data.push(Math.floor(Math.random() * 200));\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst Productdesc2 = (props) => {\r\n  const [miniiPrice, setminiiPrice] = React.useState(10000000);\r\n  const [discription, setdiscription] = React.useState(\"Loading\");\r\n  const [IImage, setIImage] = React.useState(\"Loading...\");\r\n  const [name, setname] = React.useState(\"Loading...\");\r\n  const [category, setcategory] = React.useState(\"Loading...\");\r\n  const [sellerId, setsellerId] = React.useState(\"Loading...\");\r\n  const [rating, setRating] = React.useState(1.1);\r\n  const [product, setProduct] = React.useState(\"\");\r\n  const [comments, setComments] = React.useState([]);\r\n  const [objectKey, setObjectKey] = React.useState();\r\n  const history = useHistory();\r\n  const [comment, setComment] = React.useState(\"\");\r\n  const [value, setValue] = React.useState(0);\r\n  const [hover, setHover] = React.useState(0);\r\n\r\n  const [isLoaging, setIsLoaging] = React.useState(true);\r\n  const [userId, setUserId] = React.useState(\"\");\r\n  const [UserName, setUserName] = React.useState(\"\");\r\n  const [oneCount, setOneCount] = React.useState(new Set());\r\n  const [twoCount, setTwoCount] = React.useState(new Set());\r\n  const [threeCount, setThreeCount] = React.useState(new Set());\r\n  const [fourCount, setFourCount] = React.useState(new Set());\r\n  const [fiveCount, setFiveCount] = React.useState(new Set());\r\n  const [totalCount, setTotalCount] = React.useState(new Set());\r\n  const [quantity, setQuantity] = React.useState(1);\r\n\r\n  if (hover < 0 && value === 0) {\r\n    setHover(0);\r\n  }\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: 200,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const ChartContainer = () => (\r\n    <div class=\"reviews-container\">\r\n      <h2>Reviews</h2>\r\n      <div class=\"rreview\">\r\n        <span class=\"icon-container\">\r\n          5 <i class=\"fas fa-star\" style={{ color: \"orange\" }}></i>\r\n        </span>\r\n        <div class=\"progress\">\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(fiveCount.size / totalCount.size) * 100}\r\n          />\r\n        </div>\r\n        <span class=\"percent\">{fiveCount.size}</span>\r\n      </div>\r\n  \r\n      <div class=\"rreview\">\r\n        <span class=\"icon-container\">\r\n          4 <i class=\"fas fa-star\" style={{ color: \"orange\" }}></i>\r\n        </span>\r\n        <div class=\"progress\">\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(fourCount.size / totalCount.size) * 100}\r\n          />\r\n        </div>\r\n        <span class=\"percent\">{fourCount.size}</span>\r\n      </div>\r\n      <div class=\"rreview\">\r\n        <span class=\"icon-container\">\r\n          3 <i class=\"fas fa-star\" style={{ color: \"orange\" }}></i>\r\n        </span>\r\n        <div class=\"progress\">\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(threeCount.size / totalCount.size) * 100}\r\n          />\r\n        </div>\r\n        <span class=\"percent\">{threeCount.size}</span>\r\n      </div>\r\n      <div class=\"rreview\">\r\n        <span class=\"icon-container\">\r\n          2 <i class=\"fas fa-star\" style={{ color: \"orange\" }}></i>\r\n        </span>\r\n        <div class=\"progress\">\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(twoCount.size / totalCount.size) * 100}\r\n          />\r\n        </div>\r\n        <span class=\"percent\">{twoCount.size}</span>\r\n      </div>\r\n      <div class=\"rreview\">\r\n        <span class=\"icon-container\">\r\n          1 <i class=\"fas fa-star\" style={{ color: \"orange\" }}></i>\r\n        </span>\r\n        <div class=\"progress\">\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(oneCount.size / totalCount.size) * 100}\r\n          />\r\n        </div>\r\n        <span class=\"percent\">{oneCount.size}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const jwtToken = localStorage.getItem(\"CustomerJwt\");\r\n      const user = jwt.verify(jwtToken, process.env.REACT_APP_JWT_SECRET);\r\n      // console.log(user);\r\n      setUserId(user._id);\r\n      Axios.get(`http://localhost:3001/api/customer/${user._id}`)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        const customerName =\r\n          response.data.customer.firstName +\r\n          \" \" +\r\n          response.data.customer.lastName;\r\n        setUserName(customerName);\r\n        console.log(\"CustomerName: \" + customerName);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n      Axios.post(\"http://localhost:3001/api/product/searchbyid\", {\r\n        id: props.match.params.id,\r\n      }).then((result) => {\r\n        console.log(result.data.products.Sellers)\r\n        if (result) setIsLoaging(false);\r\n        var minprice = 10000000;\r\n        var minindex = -1;\r\n        for (var key in result.data.products.Sellers) {\r\n          var obj = result.data.products.Sellers[key];\r\n          console.log(obj.SellerPrice)\r\n          if (localStorage.getItem(\"IDD\") == obj.SellerId) {\r\n            minprice = obj.SellerPrice;\r\n            minindex = key;\r\n          }\r\n        }\r\n        const minSeller = result.data.products.Sellers[minindex];\r\n        setminiiPrice(minprice);\r\n        setdiscription(minSeller.Description);\r\n        setIImage(minSeller.Image);\r\n        setname(result.data.products.Name);\r\n        setcategory(result.data.products.Category);\r\n        setsellerId(minSeller.SellerId);\r\n        setRating(minSeller.Rating.$numberDecimal);\r\n        setComments(minSeller.Comments);\r\n        setObjectKey(minindex);\r\n        for (var key in minSeller.Comments) {\r\n          var obj = minSeller.Comments[key];\r\n          if (obj.Rating.$numberDecimal <= 1) {\r\n            one.add(obj._id);\r\n            total.add(obj._id);\r\n          } else if (\r\n            obj.Rating.$numberDecimal <= 2 &&\r\n            obj.Rating.$numberDecimal > 1\r\n          ) {\r\n            two.add(obj._id);\r\n            total.add(obj._id);\r\n          } else if (\r\n            obj.Rating.$numberDecimal <= 3 &&\r\n            obj.Rating.$numberDecimal > 2\r\n          ) {\r\n            three.add(obj._id);\r\n            total.add(obj._id);\r\n          } else if (\r\n            obj.Rating.$numberDecimal <= 4 &&\r\n            obj.Rating.$numberDecimal > 3\r\n          ) {\r\n            four.add(obj._id);\r\n            total.add(obj._id);\r\n          } else if (\r\n            obj.Rating.$numberDecimal <= 5 &&\r\n            obj.Rating.$numberDecimal > 4\r\n          ) {\r\n            five.add(obj._id);\r\n            total.add(obj._id);\r\n          }\r\n        }\r\n        setOneCount(one);\r\n        setTwoCount(two);\r\n        setThreeCount(three);\r\n        setFourCount(four);\r\n        setFiveCount(five);\r\n        setTotalCount(total);\r\n      });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n      history.push('/signin');\r\n    }\r\n\r\n    \r\n\r\n  }, []);\r\n\r\n  const addToCartHandler = ()=>{\r\n    if(quantity!==\"\"){\r\n      fetch(\r\n        \"http://localhost:3001/api/customer/addtocart\",\r\n        {\r\n          method:\"post\",\r\n          headers:{\r\n            \"Content-Type\":\"application/json\"\r\n          },\r\n          body:JSON.stringify({\r\n            customerId: userId,\r\n            productId: props.match.params.id,\r\n            productName: name,\r\n            quantity: quantity\r\n          })\r\n        }\r\n      ).then(res=>res.json())\r\n      .then(result=>{\r\n        if(result.message===\"Success\"){\r\n          toast.success(\"Successfully added to cart !\",{\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }else{\r\n          toast.error(\"Some error occured !\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }\r\n      })\r\n    }else{\r\n      toast.error(\"Please enter a quantity !\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  const onCommentHandler = (e) => {\r\n    e.preventDefault();\r\n    const url = `http://localhost:3001/api/reviewandcomment/${props.match.params.id}`;\r\n    console.log(\"onCommentHandler\");\r\n    if (userId) {\r\n      Axios.post(\r\n        `http://localhost:3001/api/reviewandcomment/${props.match.params.id}`,\r\n        {\r\n          id: objectKey,\r\n          name: UserName,\r\n          rating: value,\r\n          comment: comment,\r\n          userId: userId,\r\n        }\r\n      )\r\n        .then((result) => {\r\n          console.log(result);\r\n          if (result.data.message === \"Success\") {\r\n            toast.success(\"Thank you for your valueable comment :)\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n              autoClose: 1500,\r\n            });\r\n            window.location.reload(false);\r\n          } else {\r\n            toast.error(\"Something went wrong!!!\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      toast.warning(\"You need to signin to give comment and review !!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n        autoClose: 2000,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100%\", width: \"100%\" }}>\r\n      {isLoaging && (\r\n        <div style={{ height: \"100%\", width: \"100%\" }}>\r\n          <div style={{ marginBottom: \"25%\" }}>\r\n            <div\r\n              className=\"LOGO\"\r\n              style={{ marginLeft: \"40%\", marginTop: \"10%\" }}\r\n            >\r\n              <img src={CompanyLogo} style={{ width: \"30%\", height: \"30%\" }} />\r\n            </div>\r\n            <div style={{ marginLeft: \"48%\" }}>\r\n              <CircularProgress />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!isLoaging && (\r\n        <div>\r\n          <meta charSet=\"UTF-8\" />\r\n          <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0\"\r\n          />\r\n          <link href=\"productdescription.css\" rel=\"stylesheet\" />\r\n          <br />\r\n          <p className=\"ProductDiscContent\">\r\n            <a href=\"/\">Home</a> {\" > \"}\r\n            <a href={`/Category/${category}`}>{category}</a>\r\n            {\" >\"} {name}\r\n          </p>\r\n          <section id=\"product-info\">\r\n            <div className=\"item-image-parent\">\r\n              <ul style={{ width: \"100%\", padding: \"20px\" }}>\r\n                <li style={{ width: \"100%\" }}>\r\n                  <div style={{ width: \"100%\" }}>\r\n                    <img\r\n                      src={IImage}\r\n                      alt=\"default\"\r\n                      style={{\r\n                        width: \"350px\",\r\n                        height: \"500px\",\r\n                        margin: \"21px\",\r\n                        display: \"block\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                        marginTop: \"20px\",\r\n                        marginBottom: \"10px\",\r\n                        top: 0,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>\r\n                    <ChartContainer />\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"item-info-parent\">\r\n              <div className=\"select-items\">\r\n                <div className=\"main-info\" style={{ paddingLeft: \"15px\" }}>\r\n                  <h5 className=\"ProductDiscName\">\r\n                    {name + \" \"}\r\n                    <sup>\r\n                      <span\r\n                        className=\"ProductDescriptionStarRating\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        {rating}\r\n                      </span>\r\n                    </sup>\r\n                  </h5>\r\n                  <Rating\r\n                    name=\"read-only\"\r\n                    value={rating}\r\n                    precision={0.1}\r\n                    readOnly\r\n                  />\r\n                  <p style={{ fontSize: \"1.2rem\", color: \"#7e7474\" }}>\r\n                    <span>\r\n                      <VisibilityIcon />\r\n                      <sup>1000</sup>\r\n                    </span>{\" \"}\r\n                    <RateReviewIcon />\r\n                    <sup>{comments.length}</sup>\r\n                  </p>\r\n\r\n                  <p style={{ fontSize: \"1.3rem\", color: \"green\" }}>\r\n                    PRICE:\r\n                    <span id=\"price\" style={{ fontStyle: \"italic\" }}>\r\n                      {\" \"}\r\n                      ₹{miniiPrice}\r\n                    </span>\r\n                  </p>\r\n\r\n                  <div className=\"ProductDiscButtonDiv\">\r\n                    <ul>\r\n                      <li>\r\n                        <label>Enter quantity</label>\r\n                        <input\r\n                        placeholder=\"Enter quantity\"\r\n                        type=\"number\"\r\n                        value={quantity}\r\n                        onChange={(e)=>{if(e.target.value>0){\r\n                          setQuantity(e.target.value)\r\n                        }}}\r\n                        style={{\r\n                          marginBottom:\"10px\",\r\n                          maxWidth:\"90%\"\r\n                        }}\r\n                        ></input>\r\n                        <button className=\"button button2\"\r\n                        onClick={()=>{addToCartHandler()}}>\r\n                        ADD TO CART\r\n                        </button>\r\n                        <Link to={\"/sellerprofile/\" + sellerId}>\r\n                          <button className=\"button button2\">SELLER PROFILE</button>\r\n                        </Link>\r\n                        <Link to={\"/allsellers/\" + props.match.params.id}>\r\n                          <button className=\"button button2\">SELLERS LIST</button>\r\n                        </Link>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"description\">\r\n                  <ul>\r\n                    <li>\r\n                      <li>\r\n                        <div className=\"ProductDiscBox\">\r\n                          <h4 className=\"ProductDescHeadings\">Model Name: </h4>\r\n                          <p className=\"ProductDiscContent\"> {name}</p>\r\n                        </div>\r\n                      </li>\r\n                      <div className=\"ProductDiscBox\">\r\n                        <h4 className=\"ProductDescHeadings\">Model Number: </h4>\r\n                        <p className=\"ProductDiscContent\"> MQA62HN/A</p>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div>\r\n                        <h4 className=\"ProductDescHeadings\">Browse Type: </h4>\r\n                        <p className=\"ProductDiscContent\"> {category}</p>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div>\r\n                        <h4 className=\"ProductDescHeadings\">Description : </h4>\r\n                        <div className=\"ProductDiscBox\">\r\n                          <p\r\n                            className=\"ProductDiscContent\"\r\n                            style={{ height: \"200px\" }}\r\n                          >\r\n                            {discription}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"ProductDescriptionReview\">\r\n            <div>\r\n              <h2 style={{ color: \"#3f51b5\" }}>Comments {\" & \"} Review</h2>\r\n            </div>\r\n            <div\r\n              className={classes.root}\r\n              className=\"ProductDescriptionReviewRating\"\r\n            >\r\n              <form onSubmit={onCommentHandler}>\r\n                <p style={{ fontSize: \"1.2rem\" }}>\r\n                  <b>Rating: </b>\r\n                  <Rating\r\n                    name=\"hover-feedback\"\r\n                    value={value}\r\n                    min={3}\r\n                    precision={0.5}\r\n                    onChange={(event, newValue) => {\r\n                      setValue(newValue);\r\n                    }}\r\n                    onChangeActive={(event, newHover) => {\r\n                      setHover(newHover);\r\n                    }}\r\n                  />\r\n                  <i>\r\n                    {\" \" + (value === 0 ? hover : value) + \" \"}\r\n                    stars\r\n                  </i>\r\n                </p>\r\n                <textarea\r\n                  style={{ width: \"100%\" }}\r\n                  rows=\"8\"\r\n                  placeholder=\"Your valuable comment...\"\r\n                  className=\"ProductDescriptionTextArea\"\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                ></textarea>\r\n                <br />\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </form>\r\n            </div>\r\n            <hr />\r\n            {comments.map((item) => (\r\n              <div className=\"ProductDescriptionReviewReviews\">\r\n                <h2 style={{ color: \"#3f51b5\" }}>\r\n                  {item.Name + \" \"}\r\n                  <Rating\r\n                    name=\"read-only\"\r\n                    precision={0.5}\r\n                    value={item.Rating.$numberDecimal}\r\n                    readOnly\r\n                  />\r\n                </h2>\r\n                {/* <h5 style={{ fontSize: \"1rem\" }}>Totally worthed</h5> */}\r\n                <i>\r\n                  <p>{item.Content}</p>\r\n                </i>\r\n              </div>\r\n            ))}\r\n          </section>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Productdesc2;","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\AllSellers\\AllSellers.js",["249","250","251","252","253","254","255"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nexport default function AllSellers(props) {\r\n  const history = useHistory();\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [productname, setProductname] = useState(\"\");\r\n  const [allItems, setAllItems] = useState([]);\r\n\r\n  const viewDetails = (idd) => {\r\n      console.log(idd);\r\n      localStorage.setItem(\"IDD\",idd);\r\n      history.push(\"/sellerproduct/\"+props.match.params.id);\r\n  }\r\n\r\n  var arr = [];\r\n  useEffect(async () => {\r\n    try {\r\n      const reps = await Axios.post(\r\n        \"http://localhost:3001/api/product/searchbyid\",\r\n        {\r\n          id: props.match.params.id,\r\n        }\r\n      )\r\n        .then((result) => {\r\n          setProductname(result.data.products.Name);\r\n          for (var key in result.data.products.Sellers) {\r\n            var obj = result.data.products.Sellers[key];\r\n            //   setAllItems(...result.data.products.Sellers[key]);\r\n            arr.push(obj);\r\n          }\r\n        })\r\n        .then((ress) => setAllItems(arr));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div style={{ width: \"100%\", marginTop: \"20px\", marginBottom: \"10px\" }}>\r\n      {allItems.map((seller) => (\r\n        \r\n        <div\r\n          style={{\r\n            width: \"90%\",\r\n            marginLeft: \"5%\",\r\n            borderRadius: \"10px\",\r\n            border: \"1px solid grey\",\r\n            height: \"180px\",\r\n            display: \"flex\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n\r\n        >\r\n          <div style={{ width: \"20%\" }}>\r\n            <img\r\n              src={seller.Image}\r\n              alt=\"\"\r\n              height=\"150px\"\r\n              width=\"150px\"\r\n              style={{ margin: \"auto\", display: \"block\", marginTop: \"15px\" }}\r\n            />\r\n          </div>\r\n          <div style={{ width: \"80%\" }}>\r\n            <div style={{ width: \"100%\", float: \"right\" }}>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  paddingRight: \"20px\",\r\n                  paddingTop: \"10px\",\r\n                }}\r\n              >\r\n                <div style={{ color: \"blue\", width: \"80%\" }}>\r\n                  <h2>{productname}</h2>\r\n                </div>\r\n                <div style={{ width: \"20%\" }}>\r\n                  <div style={{ float: \"right\", paddingRight: \"15px\" }}>\r\n                    <p style={{ fontSize: \"1.2rem\", color: \"#7e7474\" }}>\r\n                      <span>\r\n                        <VisibilityIcon />\r\n                        <sup>1000</sup>\r\n                      </span>{\" \"}\r\n                      <RateReviewIcon />\r\n                      <sup>{seller.Comments.length}</sup>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                style={{ width: \"100%\", display: \"flex\", paddingRight: \"20px\" }}\r\n              >\r\n                <div style={{ color: \"green\", width: \"20%\" }}>\r\n                  <h2>{seller.SellerPrice}</h2>\r\n                </div>\r\n                <div style={{ width: \"80%\" }}>\r\n                  <div style={{ float: \"right\" }}>\r\n                    <Rating\r\n                      name=\"read-only\"\r\n                      value={seller.Rating.$numberDecimal}\r\n                      precision={0.1}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p>{seller.Description}</p>\r\n\r\n              <div style={{ width: \"100%\", marginBottom: \"10px\" }}>\r\n                <div\r\n                  style={{\r\n                    float: \"right\",\r\n                    paddingRight: \"20px\",\r\n                  }}\r\n                >\r\n                <button class=\"button button2\" onClick={(e) => viewDetails(seller.SellerId)}>VIEW DETAILS</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\AddProduct\\AddProduct.js",["256","257","258","259","260","261","262"],"import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './AddProduct.css';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst jwt = require('jsonwebtoken');\r\n\r\ntoast.configure();\r\n\r\nconst AddProduct = ()=>{\r\n    const [query, setQuery] = useState(\"\");\r\n    const [sellerId, setSellerId] = useState(\"\");\r\n    const [searchedProducts, setSearchedProducts] = useState([]);\r\n    const [step, setStep] = useState(0);\r\n    const [isNew, setIsNew] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [sellerPrice, setSellerPrice] = useState(undefined);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [quantity, setQuantity] = useState(undefined);\r\n    const [image, setImage] = useState(undefined);\r\n    const [url, setUrl] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const decodedToken = jwt.verify(localStorage.getItem('sellerjwt'),process.env.REACT_APP_JWT_SECRET);\r\n            setSellerId(decodedToken._id);\r\n        }catch{\r\n            toast.error(\r\n                'Please sign in first',\r\n                {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                }\r\n            );\r\n            history.push('/sellersignin');\r\n        }\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(query !== \"\"){\r\n            fetch(\r\n                \"http://localhost:3001/api/product/search\",\r\n                {\r\n                    method: \"post\",\r\n                    headers: {\r\n                      \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: query,\r\n                    }),\r\n                }\r\n            )\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result.products);\r\n                setSearchedProducts(result.products);\r\n            })\r\n        }\r\n    },[query]);\r\n\r\n    useEffect(()=>{\r\n        if(url !== \"\"){\r\n            fetch(\r\n                'http://localhost:3001/api/product/addproduct',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        productName: name,\r\n                        productCategory: category,\r\n                        sellerPrice: sellerPrice,\r\n                        sellerDescription: description,\r\n                        sellerQuantity: quantity,\r\n                        sellerId: sellerId,\r\n                        sellerImage: url\r\n                    }),\r\n                }\r\n            )\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                if(result.message === \"Success\"){\r\n                    setStep(2);\r\n                }else{\r\n                    toast.error(\r\n                        'Some error occured!',\r\n                        {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined\r\n                        }\r\n                    );\r\n                }\r\n            })\r\n        }\r\n    },[url]);\r\n\r\n    const getMapLength = (ipMap) =>{\r\n        var ans = 0;\r\n        var i;\r\n        for (i in ipMap){\r\n            ans++;\r\n        }\r\n        return ans;\r\n    };\r\n\r\n    const PostData = ()=>{\r\n        if(sellerPrice === undefined || sellerPrice === \"\"){\r\n            toast.error(\r\n                'Please enter seller price',\r\n                {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                }\r\n            );\r\n        }else if(quantity === undefined || quantity===\"\"){\r\n            toast.error(\r\n                'Please enter product quantity',\r\n                {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                }\r\n            );\r\n        }else if(description === \"\"){\r\n            toast.error(\r\n                'Please enter product description',\r\n                {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                }\r\n            );\r\n        }else if(image === undefined){\r\n            toast.error(\r\n                'Please select a product image',\r\n                {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                }\r\n            );\r\n        }else{\r\n            const data = new FormData();\r\n            data.append(\"file\",image);\r\n            data.append(\"upload_preset\",process.env.REACT_APP_UPLOAD_PRESET);\r\n            data.append(\"cloud_name\",process.env.REACT_APP_CLOUD_NAME);\r\n            fetch(\r\n                process.env.REACT_APP_IMAGE_API,\r\n                {\r\n                    method:\"post\",\r\n                    body: data\r\n                }\r\n            )\r\n            .then(\r\n                res=>res.json()\r\n            )\r\n            .then(\r\n                data=>{\r\n                    setUrl(data.url);\r\n                    if(data.url === undefined){\r\n                        toast.error(\r\n                            'Error occured while uploading image',\r\n                            {\r\n                            position: \"top-right\",\r\n                            autoClose: 2000,\r\n                            hideProgressBar: false,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined\r\n                            }\r\n                        );\r\n                    }else{\r\n                        console.log(data.url);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"add_product_all_content\">\r\n            <div className=\"add_product_main_card\">\r\n                <Grid container>\r\n                <Grid item xs={6} sm={6} md={6} lg={6}>\r\n                {\r\n                    step==0\r\n                    ?\r\n                    <SearchIcon \r\n                    style={{float:\"right\",\r\n                    height:\"50px\",\r\n                    width:\"50px\",\r\n                    color:\"gray\",\r\n                    marginRight:\"50px\"}}></SearchIcon>\r\n                    :\r\n                    <SearchIcon\r\n                    style={{float:\"right\",\r\n                    height:\"50px\",\r\n                    width:\"50px\",\r\n                    color:\"#00cc00\",\r\n                    marginRight:\"50px\"}}></SearchIcon>\r\n                }\r\n                <br></br>\r\n                {\r\n                    step==0\r\n                    ?\r\n                    <CheckCircleIcon \r\n                    style={{float:\"right\",\r\n                    height:\"20px\",\r\n                    width:\"20px\",\r\n                    color:\"gray\",\r\n                    marginRight:\"-35px\",\r\n                    marginTop:\"35px\"}}></CheckCircleIcon>\r\n                    :\r\n                    <CheckCircleIcon\r\n                    style={{float:\"right\",\r\n                    height:\"20px\",\r\n                    width:\"20px\",\r\n                    color:\"#00cc00\",\r\n                    marginRight:\"-35px\",\r\n                    marginTop:\"35px\"}}></CheckCircleIcon>\r\n                }\r\n                </Grid>\r\n                \r\n                <Grid item xs={6} sm={6} md={6} lg={6}>\r\n                {\r\n                    step<=1\r\n                    ?\r\n                    <ListAltIcon \r\n                    style={{\r\n                    height:\"50px\",\r\n                    width:\"50px\",\r\n                    color:\"gray\",}}></ListAltIcon>\r\n                    :\r\n                    <ListAltIcon\r\n                    style={{\r\n                    height:\"50px\",\r\n                    width:\"50px\",\r\n                    color:\"#00cc00\"}}></ListAltIcon>\r\n                }\r\n                <br></br>\r\n                {\r\n                    step<=1\r\n                    ?\r\n                    <CheckCircleIcon \r\n                    style={{\r\n                    height:\"20px\",\r\n                    width:\"20px\",\r\n                    color:\"gray\",\r\n                    marginLeft:\"15px\",}}></CheckCircleIcon>\r\n                    :\r\n                    <CheckCircleIcon\r\n                    style={{\r\n                    height:\"20px\",\r\n                    width:\"20px\",\r\n                    color:\"#00cc00\",\r\n                    marginLeft:\"15px\",}}></CheckCircleIcon>\r\n                }\r\n                </Grid>\r\n                </Grid>\r\n            </div>\r\n            <div className=\"add_product_main_card\">\r\n                {\r\n                    step==0\r\n                    ?\r\n                    <div>\r\n                    <h1 className=\"step\">STEP 1 OF 2</h1>\r\n                    <p className=\"message\">Search for a product to add</p>\r\n                    <div style={{textAlign:\"center\",marginTop:\"20px\"}}>\r\n                    <TextField id=\"outlined-basic\"\r\n                    label=\"Enter product name\" \r\n                    variant=\"outlined\"\r\n                    onChange={(e)=>{setQuery(e.target.value)}}/>\r\n                    </div>\r\n                    {\r\n                        query !== \"\"\r\n                        ?\r\n                        <div>\r\n                            {\r\n                                searchedProducts.length > 0\r\n                                ?\r\n                                <div>\r\n                                    <h1 style={{\r\n                                        marginLeft:\"10px\",\r\n                                        marginTop:\"10px\",\r\n                                        marginBottom:\"10px\"}}>SEARCH RESULTS</h1>\r\n                                    {searchedProducts.map((data)=>{\r\n                                        return(\r\n                                            <Grid container>\r\n                                                <Grid item xs={12} sm={6} md={6} lg={5}>\r\n                                                    <img\r\n                                                    src={data.Sellers[Object.keys(data.Sellers)[0]].Image}\r\n                                                    style={{\r\n                                                        width: \"100%\",\r\n                                                        height: \"250px\",\r\n                                                        borderRadius:\"20px\",\r\n                                                        padding:\"10px\"\r\n                                                    }}></img>\r\n                                                </Grid>\r\n                                                <Grid item xs={12} sm={6} md={6} lg={7}>\r\n                                                    <h2 className=\"add_product_product_detail\">{data.Name.toUpperCase()}</h2>\r\n                                                    <h3 className=\"add_product_product_detail\">CATEGORY : {data.Category}</h3>\r\n                                                    <h3 className=\"add_product_product_detail\">Available at {getMapLength(data.Sellers)} sellers</h3>\r\n                                                    <div style={{\r\n                                                        backgroundColor:\"#3f51b5\",\r\n                                                        color:\"white\",\r\n                                                        width:\"100px\",\r\n                                                        borderRadius:\"5px\",\r\n                                                        padding:\"2px\",\r\n                                                        marginLeft:\"10px\",\r\n                                                        marginBottom:\"10px\",\r\n                                                        marginTop:\"50px\",\r\n                                                        cursor:\"pointer\"\r\n                                                    }}\r\n                                                    onClick={()=>{\r\n                                                        setStep(1);\r\n                                                        setName(data.Name);\r\n                                                        setCategory(data.Category);}}>\r\n                                                        <span \r\n                                                        style={{fontSize:\"1.5rem\",\r\n                                                        marginRight:\"5px\",\r\n                                                        marginLeft:\"5px\"}}>\r\n                                                        +\r\n                                                        </span>\r\n                                                        <span>ADD ITEM</span>\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                                <div \r\n                                                style={{backgroundColor:\"#538df6\",height:\"0.5px\",width:\"95%\",margin:\"auto\",marginTop:\"5px\",marginBottom:\"5px\"}}>\r\n                                                </div>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                :\r\n                                <div style={{textAlign:\"center\",marginTop:\"10px\"}}>\r\n                                <ErrorIcon\r\n                                style={{\r\n                                width:\"75px\",\r\n                                height:\"75px\",\r\n                                color:\"red\"}}></ErrorIcon>\r\n                                <p\r\n                                style={{fontSize:\"1.5rem\"}}>\r\n                                    Sorry, no results found!\r\n                                </p>\r\n\r\n                                </div>\r\n                            }\r\n                            \r\n                            <p className=\"register_new_message\"\r\n                            onClick={()=>{setIsNew(true)}}>Couldn't find your product listed here?? Click here to register a new product.</p>\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                    }\r\n                    {\r\n                        isNew\r\n                        ?\r\n                        <div\r\n                        style={{marginTop:\"10px\",\r\n                        marginLeft:\"10px\"}}>\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                                <TextField id=\"outlined-basic\"\r\n                                label=\"Enter product name\" \r\n                                variant=\"outlined\"\r\n                                style={{width:\"90%\",marginTop:\"10px\"}}\r\n                                onChange={(e)=>{setName(e.target.value)}}/>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                                    <TextField id=\"outlined-basic\"\r\n                                    label=\"Enter product category\" \r\n                                    variant=\"outlined\"\r\n                                    style={{width:\"90%\",marginTop:\"10px\"}}\r\n                                    onChange={(e)=>{setCategory(e.target.value)}}/>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                <div style={{\r\n                                    backgroundColor:\"#3f51b5\",\r\n                                    color:\"white\",\r\n                                    width:\"100px\",\r\n                                    borderRadius:\"5px\",\r\n                                    padding:\"2px\",\r\n                                    marginBottom:\"10px\",\r\n                                    marginTop:\"10px\",\r\n                                    cursor:\"pointer\"\r\n                                }}\r\n                                onClick={()=>{\r\n                                    if(!name){\r\n                                        toast.error(\r\n                                            'Please enter product name',\r\n                                            {\r\n                                            position: \"top-right\",\r\n                                            autoClose: 2000,\r\n                                            hideProgressBar: false,\r\n                                            closeOnClick: true,\r\n                                            pauseOnHover: true,\r\n                                            draggable: true,\r\n                                            progress: undefined\r\n                                            }\r\n                                        );\r\n                                    }else if(!category){\r\n                                        toast.error(\r\n                                            'Please enter product category',\r\n                                            {\r\n                                            position: \"top-right\",\r\n                                            autoClose: 2000,\r\n                                            hideProgressBar: false,\r\n                                            closeOnClick: true,\r\n                                            pauseOnHover: true,\r\n                                            draggable: true,\r\n                                            progress: undefined\r\n                                            }\r\n                                        );\r\n                                    }else{\r\n                                        setStep(1)\r\n                                    }\r\n                                    }}>\r\n                                    <span \r\n                                    style={{fontSize:\"1.5rem\",\r\n                                    marginRight:\"5px\",\r\n                                    marginLeft:\"5px\"}}>\r\n                                    +\r\n                                    </span>\r\n                                    <span>ADD ITEM</span>\r\n                                </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            \r\n                        </div>\r\n                    }\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                    </div>\r\n                }\r\n                {\r\n                    step===1\r\n                    ?\r\n                    <div>\r\n                    <h1 className=\"step\">STEP 2 OF 2</h1>\r\n                    <h3 className=\"product_name_add_product\">NAME : {name}</h3>\r\n                    <h3 className=\"product_name_add_product\">CATEGORY : {category}</h3>\r\n                    <Grid container\r\n                    style={{\r\n                        marginTop:\"10px\",\r\n                        marginLeft:\"10px\"\r\n                    }}>\r\n                        <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                        <TextField id=\"outlined-basic\"\r\n                                    label=\"Enter seller price\" \r\n                                    variant=\"outlined\"\r\n                                    style={{width:\"90%\",marginTop:\"10px\"}}\r\n                                    onChange={(e)=>{setSellerPrice(e.target.value)}}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                        <TextField id=\"outlined-basic\"\r\n                                    label=\"Enter quantity\" \r\n                                    variant=\"outlined\"\r\n                                    style={{width:\"90%\",marginTop:\"10px\"}}\r\n                                    onChange={(e)=>{setQuantity(e.target.value)}}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                        <TextField id=\"outlined-basic\"\r\n                                    label=\"Enter product description\" \r\n                                    variant=\"outlined\"\r\n                                    style={{width:\"90%\",marginTop:\"10px\"}}\r\n                                    onChange={(e)=>{setDescription(e.target.value)}}/>\r\n                        </Grid>\r\n                        <Grid style={{marginTop:\"10px\"}} item xs={12} sm={6} md={6} lg={6}>\r\n                        <label>Product Image</label>\r\n                        <input type=\"file\"\r\n                        style={{\r\n                            marginTop:\"25px\",\r\n                            marginLeft:\"10px\"\r\n                        }}\r\n                        onChange={(e)=>{setImage(e.target.files[0])}}></input>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6} lg={6}></Grid>\r\n                        <Grid item xs={6} sm={6} md={6} lg={6}>\r\n                            <p className=\"add_product_back_button\"\r\n                            onClick={()=>{setStep(0)}}>{\"< BACK\"}</p>\r\n                        </Grid>\r\n                        <Grid item xs={6} sm={6} md={6} lg={6}\r\n                        onClick = {()=>{PostData()}}>\r\n                            <p className=\"submit_product_back_button\">SUBMIT</p>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n\r\n                    </div>\r\n                }\r\n                {\r\n                    step===2\r\n                    ?\r\n                    \r\n                    <div style={{textAlign:\"center\"}}>\r\n                    <CheckCircleIcon\r\n                                style={{\r\n                                    height:\"100px\",\r\n                                    width:\"100px\",\r\n                                    color:\"#00cc00\"\r\n                                }}\r\n                    />\r\n                    <h3 className=\"total_price\">ADDED ITEM SUCCESSFULLY</h3>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddProduct;","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerProducts\\SellerProducts.js",["263","264","265","266"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\r\nimport { Link } from \"react-router-dom\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nexport default function SellerProducts() {\r\n  const [allItems, setAllItems] = useState([]);\r\n  var arr = [];\r\n  useEffect(async () => {\r\n    try {\r\n      var jwtToken = await localStorage.getItem(\"sellerjwt\");\r\n      const user = await jwt.verify(jwtToken, process.env.REACT_APP_JWT_SECRET);\r\n      if (user) {\r\n        const reps = await Axios.get(\r\n          `http://localhost:3001/api/seller_product/${user._id}`\r\n        ).then((result) => {\r\n          console.log(result);\r\n          setAllItems(result.data.sellerProducts);\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    console.log(allItems);\r\n  }, []);\r\n  return (\r\n    <div style={{ width: \"100%\", marginTop: \"20px\", marginBottom: \"10px\" }}>\r\n      {allItems.map((seller) => (\r\n        <div\r\n          style={{\r\n            width: \"90%\",\r\n            marginLeft: \"5%\",\r\n            borderRadius: \"10px\",\r\n            border: \"1px solid grey\",\r\n            height: \"180px\",\r\n            display: \"flex\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          <div style={{ width: \"20%\" }}>\r\n            <img\r\n              src={seller.sellerSpecificDetails.Image}\r\n              alt=\"\"\r\n              height=\"150px\"\r\n              width=\"150px\"\r\n              style={{ margin: \"auto\", display: \"block\", marginTop: \"15px\" }}\r\n            />\r\n          </div>\r\n          <div style={{ width: \"80%\" }}>\r\n            <div style={{ width: \"100%\", float: \"right\" }}>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  paddingRight: \"20px\",\r\n                  paddingTop: \"10px\",\r\n                }}\r\n              >\r\n                <div style={{ color: \"blue\", width: \"80%\" }}>\r\n                  <h2>{seller.Name}</h2>\r\n                </div>\r\n                <div style={{ width: \"20%\" }}>\r\n                  <div style={{ float: \"right\", paddingRight: \"15px\" }}>\r\n                    <p style={{ fontSize: \"1.2rem\", color: \"#7e7474\" }}>\r\n                      <span>\r\n                        <VisibilityIcon />\r\n                        <sup>1000</sup>\r\n                      </span>{\" \"}\r\n                      <RateReviewIcon />\r\n                      <sup>{seller.sellerSpecificDetails.Comments.length}</sup>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                style={{ width: \"100%\", display: \"flex\", paddingRight: \"20px\" }}\r\n              >\r\n                <div style={{ color: \"green\", width: \"20%\" }}>\r\n                  <h2>₹{seller.sellerSpecificDetails.SellerPrice}</h2>\r\n                </div>\r\n                <div style={{ width: \"80%\" }}>\r\n                  <div style={{ float: \"right\" }}>\r\n                    <Rating\r\n                      name=\"read-only\"\r\n                      value={seller.sellerSpecificDetails.Rating.$numberDecimal}\r\n                      precision={0.1}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p>{seller.sellerSpecificDetails.Description}</p>\r\n\r\n              <div style={{ width: \"100%\", marginTop: \"30px\" }}>\r\n                <div style={{ float: \"left\" }}>\r\n                  <h2>Qty: {seller.sellerSpecificDetails.Quantity}</h2>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    float: \"right\",\r\n                    paddingRight: \"20px\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/cart\">\r\n                    <button class=\"button button2\">VIEW DETAILS</button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\HomeScreen\\HomeScreen.js",["267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282"],"import React, { useCallback } from \"react\";\r\nimport \"./Homescreen.scss\";\r\nimport { Media } from \"react-bootstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../Category/SubCategory/subcategory.scss\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { FaWindowClose } from \"react-icons/fa\";\r\nimport amit from \"./../../../images/AMIT.jpeg\";\r\nimport nalin from \"./../../../images/NALIN.jpeg\";\r\nimport vijay from \"./../../../images/Vijay.jpeg\";\r\nimport prerit from \"./../../../images/Prerit.jpeg\";\r\nimport LocoCart from \"./../../../images/LocoCart.PNG\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    background: \"#fff\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    // borderRadius: \"25px\"\r\n  },\r\n}));\r\n\r\nconst CategoryBar = () => {\r\n  const history = useHistory();\r\n  const handleOnClick1 = useCallback(() => history.push(\"/category\"), [\r\n    history,\r\n  ]);\r\n  const handleOnClick2 = useCallback(\r\n    () => history.push(\"/category/Stationery\"),\r\n    [history]\r\n  );\r\n  const handleOnClick3 = useCallback(() => history.push(\"/category/Grocery\"), [\r\n    history,\r\n  ]);\r\n  const handleOnClick4 = useCallback(\r\n    () => history.push(\"/category/Electronics\"),\r\n    [history]\r\n  );\r\n  const handleOnClick5 = useCallback(() => history.push(\"/category/Footwear\"), [\r\n    history,\r\n  ]);\r\n  const handleOnClick6 = useCallback(() => history.push(\"/category/Sports\"), [\r\n    history,\r\n  ]);\r\n  const handleOnClick7 = useCallback(() => history.push(\"/category/Books\"), [\r\n    history,\r\n  ]);\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <div\r\n        style={{\r\n          height: \"150px\",\r\n          display: \"flex\",\r\n          background: \"#fff\",\r\n          marginBottom: \"10px\",\r\n          overflowX: \"scroll\",\r\n          color: \"#3f51b5\",\r\n        }}\r\n      >\r\n        <div\r\n          onClick={handleOnClick1}\r\n          style={{\r\n            marginLeft: \"5%\",\r\n            marginTop: \"2%\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://images.unsplash.com/photo-1492707892479-7bc8d5a4ee93?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTZ8fHNob3BwaW5nfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            style={{ width: \"100px\", height: \"80px\" }}\r\n          />\r\n          <br />\r\n          <b>All Categories</b>\r\n        </div>\r\n        <div\r\n          onClick={handleOnClick2}\r\n          style={{\r\n            marginLeft: \"5%\",\r\n            marginTop: \"2%\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://5.imimg.com/data5/LJ/RP/MY-4878239/stationery-500x500.png\"\r\n            style={{ width: \"100px\", height: \"80px\" }}\r\n          />\r\n          <br />\r\n          <b>Stationery</b>\r\n        </div>\r\n        <div\r\n          onClick={handleOnClick3}\r\n          style={{\r\n            marginLeft: \"5%\",\r\n            marginTop: \"2%\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQIiQmWJAdGBHSPQJL-IdHhWYrMwUbSvIqTOQ&usqp=CAU\"\r\n            style={{ width: \"100px\", height: \"80px\" }}\r\n          />\r\n          <br />\r\n          <b>Groceries</b>\r\n        </div>\r\n        <div\r\n          onClick={handleOnClick4}\r\n          style={{\r\n            marginLeft: \"5%\",\r\n            marginTop: \"2%\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQgKefNtESG11OmRK1-xQhYHlO9JLtJTC5Mcg&usqp=CAU\"\r\n            style={{ width: \"100px\", height: \"80px\" }}\r\n          />\r\n          <br />\r\n          <b>Electronics</b>\r\n        </div>\r\n        <div\r\n          onClick={handleOnClick5}\r\n          style={{\r\n            marginLeft: \"5%\",\r\n            marginTop: \"2%\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSK8uPxPdCyNRld3q0v4v0AkZYge0fADARDb3otD3Uxl5jXCSu_PGKNhAoFfwa71C_3Rw9K6_Y&usqp=CAc\"\r\n            style={{ width: \"100px\", height: \"80px\" }}\r\n          />\r\n          <br />\r\n          <b>Footwear</b>\r\n        </div>\r\n        <div\r\n          onClick={handleOnClick6}\r\n          style={{\r\n            marginLeft: \"5%\",\r\n            marginTop: \"2%\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRhnxvR9_DlyUe2NilNqYtkG6w6LECXWajbVg&usqp=CAU\"\r\n            style={{ width: \"100px\", height: \"80px\" }}\r\n          />\r\n          <br />\r\n          <b>Sports</b>\r\n        </div>\r\n        <div\r\n          onClick={handleOnClick7}\r\n          style={{\r\n            marginLeft: \"5%\",\r\n            marginTop: \"2%\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRULdhvxYHLSDEpEV18oJadwRShXgT2cRorPA&usqp=CAU\"\r\n            style={{ width: \"100px\", height: \"80px\" }}\r\n          />\r\n          <br />\r\n          <b>Books</b>\r\n        </div>\r\n        <div\r\n          style={{\r\n            marginLeft: \"5%\",\r\n            marginTop: \"2%\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8cGhvbmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            style={{ width: \"100px\", height: \"80px\" }}\r\n          />\r\n          <br />\r\n          <b>Download Our App</b>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Corousal = () => {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <div>\r\n        <section class=\"carousel\" aria-label=\"Gallery\">\r\n          <ol class=\"carousel__viewport\">\r\n            <li id=\"carousel__slide1\" tabindex=\"0\" class=\"carousel__slide\">\r\n              <div class=\"carousel__snapper\">\r\n                <a href=\"#carousel__slide4\" class=\"carousel__prev\">\r\n                  Go to last slide\r\n                </a>\r\n                <a href=\"#carousel__slide2\" class=\"carousel__next\">\r\n                  Go to next slide\r\n                </a>\r\n              </div>\r\n            </li>\r\n            <li id=\"carousel__slide2\" tabindex=\"0\" class=\"carousel__slide\">\r\n              <div class=\"carousel__snapper\"></div>\r\n              <a href=\"#carousel__slide1\" class=\"carousel__prev\">\r\n                Go to previous slide\r\n              </a>\r\n              <a href=\"#carousel__slide3\" class=\"carousel__next\">\r\n                Go to next slide\r\n              </a>\r\n            </li>\r\n            <li id=\"carousel__slide3\" tabindex=\"0\" class=\"carousel__slide\">\r\n              <div class=\"carousel__snapper\"></div>\r\n              <a href=\"#carousel__slide2\" class=\"carousel__prev\">\r\n                Go to previous slide\r\n              </a>\r\n              <a href=\"#carousel__slide4\" class=\"carousel__next\">\r\n                Go to next slide\r\n              </a>\r\n            </li>\r\n            <li id=\"carousel__slide4\" tabindex=\"0\" class=\"carousel__slide\">\r\n              <div class=\"carousel__snapper\"></div>\r\n              <a href=\"#carousel__slide3\" class=\"carousel__prev\">\r\n                Go to previous slide\r\n              </a>\r\n              <a href=\"#carousel__slide1\" class=\"carousel__next\">\r\n                Go to first slide\r\n              </a>\r\n            </li>\r\n          </ol>\r\n          <aside class=\"carousel__navigation\">\r\n            <ol class=\"carousel__navigation-list\">\r\n              <li class=\"carousel__navigation-item\">\r\n                <a href=\"#carousel__slide1\" class=\"carousel__navigation-button\">\r\n                  Go to slide 1\r\n                </a>\r\n              </li>\r\n              <li class=\"carousel__navigation-item\">\r\n                <a href=\"#carousel__slide2\" class=\"carousel__navigation-button\">\r\n                  Go to slide 2\r\n                </a>\r\n              </li>\r\n              <li class=\"carousel__navigation-item\">\r\n                <a href=\"#carousel__slide3\" class=\"carousel__navigation-button\">\r\n                  Go to slide 3\r\n                </a>\r\n              </li>\r\n              <li class=\"carousel__navigation-item\">\r\n                <a href=\"#carousel__slide4\" class=\"carousel__navigation-button\">\r\n                  Go to slide 4\r\n                </a>\r\n              </li>\r\n            </ol>\r\n          </aside>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction MediaCard(props) {\r\n  const [rating, setRating] = React.useState(1.1);\r\n  const [id, setid] = React.useState(props._id);\r\n  const [miniPrice, setminiPrice] = React.useState(100000000);\r\n  const [discription, setdiscription] = React.useState(\"Product\");\r\n  const [image, setimage] = React.useState(\"HII\");\r\n  for (var key in props.Sellers) {\r\n    var obj = props.Sellers[key];\r\n    if (parseInt(miniPrice, 10) > parseInt(obj.SellerPrice, 10)) {\r\n      setminiPrice(obj.SellerPrice);\r\n      setdiscription(obj.Description);\r\n      setimage(obj.Image);\r\n      setRating(obj.Rating.$numberDecimal);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <div\r\n          class=\"box-wrapper\"\r\n          style={{ margin: \"10px\", transform: \"translate(0, 0%)\" }}\r\n        >\r\n          <a href={\"/product/\" + id}>\r\n            <img\r\n              src={image}\r\n              alt=\"rhcp\"\r\n              style={{ cursor: \"pointer\" }}\r\n              width=\"450px\"\r\n              height=\"200px\"\r\n            />\r\n          </a>\r\n          <div class=\"box-content\">\r\n            <a class=\"buy\">\r\n              <span>\r\n                <img\r\n                  style={{\r\n                    marginTop: \"10px\",\r\n                    cursor: \"pointer\",\r\n                    height: \"50px\",\r\n                    width: \"50px\",\r\n                  }}\r\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\"\r\n                />\r\n              </span>\r\n            </a>\r\n            <div class=\"title\">{props.Name}</div>\r\n            <div class=\"desc\">\r\n              <b>{props.Category}</b> :{\" \"}\r\n              {discription.length > 20\r\n                ? discription.substring(0, 17) + \"...\"\r\n                : discription}\r\n            </div>\r\n            <span class=\"price\">₹ {miniPrice}</span>\r\n            <div class=\"ssfooter\">\r\n              <ul class=\"stars1\">\r\n                  <Rating\r\n                    name=\"read-only\"\r\n                    value={rating}\r\n                    precision={0.1}\r\n                    readOnly\r\n                  />\r\n                  {\"(\" + rating + \")\"}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"success\"></div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"addtocart\"\r\n            disableElevation\r\n            style={{ height: \"40px\", width: \"90%\", marginBottom: \"8px\" }}\r\n          >\r\n            <p style={{ fontSize: \"1.2rem\" }}>🛒 Add to Cart 🛒</p>\r\n          </Button>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nconst ReviewCard = () => {\r\n  return (\r\n    <div>\r\n      <div class=\"testimonials1\">\r\n        <div class=\"testimonial-inner1\">\r\n          <h1>Testimonial</h1>\r\n          <div class=\"border1\"></div>\r\n\r\n          <div class=\"row1\">\r\n            <div class=\"col1\">\r\n              <div class=\"testimonial1\">\r\n                <img class=\"img1\" src={nalin} alt=\"\" />\r\n                <div class=\"name1\">Nalin</div>\r\n                <div class=\"stars1\">\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                </div>\r\n                <p>\r\n                  A nice website which not only showing products in local area\r\n                  but also giving options like bidding on my order list.Very\r\n                  user friendly interface and cool animations.Excellent\r\n                  innovation, keep up the good work.\r\n                  <br /> Thank you!\r\n                  <br />✨\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col1\">\r\n              <div class=\"testimonial1\">\r\n                <img class=\"img1\" src={prerit} alt=\"\" />\r\n                <div class=\"name1\">Prerit</div>\r\n                <div class=\"stars1\">\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"far fa-star\"></i>\r\n                </div>\r\n                <p>\r\n                  Site is definitely one of the best website designs we’ve seen\r\n                  in a while. Website tend to be highly effective in engaging\r\n                  users. Taking advantage of positive reviews on recommendation\r\n                  platforms/sites is a great strategy for finding customer. <br/>\r\n                  Thank You !<br /> ✨\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col1\">\r\n              <div class=\"testimonial1\">\r\n                <img class=\"img1\" src={amit} alt=\"\" />\r\n                <div class=\"name1\">Amit</div>\r\n                <div class=\"stars1\">\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"far fa-star\"></i>\r\n                </div>\r\n                <p>\r\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Eaque\r\n                  repellat aspernatur temporibus assumenda sint odio minima.\r\n                  Voluptate alias possimus aspernatur voluptates excepturi\r\n                  placeat iusto cupiditate.\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col1\">\r\n              <div class=\"testimonial1\">\r\n                <img class=\"img1\" src={vijay} alt=\"\" />\r\n                <div class=\"name1\">Vijay</div>\r\n                <div class=\"stars1\">\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                  <i class=\"fas fa-star\"></i>\r\n                </div>\r\n                <p>\r\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Eaque\r\n                  repellat aspernatur temporibus assumenda sint odio minima.\r\n                  Voluptate alias possimus aspernatur voluptates excepturi\r\n                  placeat iusto cupiditate!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function HomeScreen() {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(true);\r\n  const [Loading, setLoading] = React.useState(true);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div\r\n        style={{\r\n          right: 0,\r\n          top: 0,\r\n          margin: \"20px\",\r\n          position: \"fixed\",\r\n          color: \"#000\",\r\n        }}\r\n      >\r\n        <FaWindowClose onClick={handleClose} />\r\n      </div>\r\n      <br />\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          textAlign: \"center\",\r\n          transform: \"translate3d(0%,10%,20px)\",\r\n          color: \"#000\",\r\n        }}\r\n      >\r\n        <h1 id=\"simple-modal-title\">\r\n          <b>🔥 LOCOCART 🔥</b>\r\n        </h1>\r\n        <p id=\"simple-modal-description\">\r\n          <b>WELCOMES YOU</b>\r\n        </p>\r\n        <a class=\"pre-order-btn\" href=\"#\" onClick={handleClose}>\r\n          <b> WE CONNECT LOCALLY </b>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [Products, setProducts] = React.useState([]);\r\n  const address = \"http://localhost:3001/api/product/allproducts\";\r\n  React.useEffect(() => {\r\n    Axios.post(address).then((result) => {\r\n      console.log(result);\r\n      setProducts(result.data.products);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!Loading && (\r\n        <div style={{ background: \"#f1f1f1\" }}>\r\n          <CategoryBar />\r\n          <Corousal />\r\n\r\n          <div\r\n            style={{ marginTop: \"1%\", marginBottom: \"1%\", textAlign: \"center\" }}\r\n          >\r\n            <button class=\"learn-more\" style={{ textAlign: \"center\" }}>\r\n              <h3> ❤️‍🔥 Customers Reviews ❤️‍🔥 </h3>\r\n            </button>\r\n          </div>\r\n\r\n          <div style={{ margin: \"auto\" }}>\r\n            <ReviewCard />\r\n          </div>\r\n\r\n          <div\r\n            style={{ marginTop: \"1%\", marginBottom: \"1%\", textAlign: \"center\" }}\r\n          >\r\n            <button class=\"learn-more\" style={{ textAlign: \"center\" }}>\r\n              <h3> ❤️‍🔥 Top Picks For You ❤️‍🔥 </h3>\r\n            </button>\r\n          </div>\r\n\r\n          <div style={{ margin: \"auto\", width: \"90%\" }}>\r\n            {Products.slice(0, 20).map((item) => {\r\n              return (\r\n                <>\r\n                  <MediaCard {...item} />\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div>\r\n            <Modal\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"simple-modal-title\"\r\n              aria-describedby=\"simple-modal-description\"\r\n            >\r\n              {body}\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {Loading && (\r\n        <div style={{ marginBottom: \"25%\" }}>\r\n          <div className=\"LOGO\" style={{ marginLeft: \"40%\", marginTop: \"10%\" }}>\r\n            <img src={LocoCart} style={{ width: \"30%\", height: \"30%\" }} />\r\n          </div>\r\n          <div style={{ marginLeft: \"48%\" }}>\r\n            <CircularProgress />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Header\\Header.js",["283","284","285","286","287","288"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { fade, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport GavelIcon from \"@material-ui/icons/Gavel\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\r\nimport CategoryIcon from \"@material-ui/icons/Category\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst env = require(\"dotenv\");\r\nenv.config();\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    minWidth: \"100px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 1),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(5)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const [lococart, setLococart] = React.useState(true);\r\n  const showLococart = () => {\r\n    if (window.innerWidth < 960) {\r\n      setLococart(false);\r\n    } else {\r\n      setLococart(true);\r\n    }\r\n  };\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [UserName, setUserName] = useState(\"\");\r\n  const [notifications, setNotifications] = React.useState([]);\r\n  const [isCustomer, setIsCustomer] = useState(true);\r\n  React.useEffect(async () => {\r\n    showLococart();\r\n    try {\r\n      var jwtToken = await localStorage.getItem(\"CustomerJwt\");\r\n      console.log(jwt);\r\n      if (jwtToken === null) {\r\n        jwtToken = await localStorage.getItem(\"sellerjwt\");\r\n        const user = await jwt.verify(\r\n          jwtToken,\r\n          process.env.REACT_APP_JWT_SECRET\r\n        );\r\n        if (user) {\r\n          setUserId(user._id);\r\n          console.log(user);\r\n          const resp = await Axios.get(\r\n            `http://localhost:3001/api/seller/${user._id}`\r\n          )\r\n            .then(function (response) {\r\n              console.log(response);\r\n              const customerName = response.data.seller.firstName;\r\n              setUserName(response.data.seller.firstName);\r\n              console.log(\"Seller: \" + customerName);\r\n              setIsCustomer(false);\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n\r\n          const responce = await Axios.get(\r\n            `http://localhost:3001/api/notification/${user._id}`\r\n          )\r\n            .then(function (response) {\r\n              console.log(response);\r\n              if (response.data.message === \"Success\") {\r\n                setNotifications(response.data.notification.notifications);\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        }\r\n      } else {\r\n        const user = await jwt.verify(\r\n          jwtToken,\r\n          process.env.REACT_APP_JWT_SECRET\r\n        );\r\n        if (user) {\r\n          setUserId(user._id);\r\n          console.log(user);\r\n          const resp = await Axios.get(\r\n            `http://localhost:3001/api/customer/${user._id}`\r\n          )\r\n            .then(function (response) {\r\n              console.log(response);\r\n              const customerName = response.data.customer.firstName;\r\n              setUserName(response.data.customer.firstName);\r\n              console.log(\"CustomerName: \" + customerName);\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n\r\n          const responce = await Axios.get(\r\n            `http://localhost:3001/api/notification/${user._id}`\r\n          )\r\n            .then(function (response) {\r\n              console.log(response);\r\n              if (response.data.message === \"Success\") {\r\n                setNotifications(response.data.notification.notifications);\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n  window.addEventListener(\"resize\", showLococart);\r\n\r\n  const [productSearch, setProductSearch] = useState([]);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n\r\n  function searchProduct(e) {\r\n    setSearchKeyword(e.target.value);\r\n    Axios.post(\"http://localhost:3001/api/product/search\", {\r\n      name: searchKeyword,\r\n    }).then((result) => {\r\n      setProductSearch(result.data.products);\r\n    });\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const logoutHandler = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"CustomerJwt\");\r\n    localStorage.removeItem(\"sellerjwt\");\r\n    history.push(\"/\");\r\n    window.location.reload(false);\r\n  };\r\n  const notificationHandler = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/notifications\");\r\n  };\r\n  const profileHandler = (e) => {\r\n    e.preventDefault();\r\n    if (isCustomer) {\r\n      history.push(\"/userprofile/\" + userId);\r\n    } else {\r\n      history.push(\"/sellerprofile/\" + userId);\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <ListItem>\r\n              {lococart && (\r\n                <ListItemIcon>\r\n                  <b style={{ color: \"#ffffff\" }}>LOCOCART</b>\r\n                </ListItemIcon>\r\n              )}\r\n              <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                  <SearchIcon />\r\n                </div>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                    <InputBase\r\n                      placeholder=\"Search…\"\r\n                      classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                      }}\r\n                      inputProps={{ \"aria-label\": \"search\" }}\r\n                      onChange={searchProduct}\r\n                    />\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    {\r\n                      <>\r\n                        {productSearch.slice(0, 8).map((item) => {\r\n                          return (\r\n                            <Dropdown.Item>\r\n                              <div\r\n                                classes={{\r\n                                  root: classes.inputRoot,\r\n                                  input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ \"aria-label\": \"search\" }}\r\n                                style={{\r\n                                  background: \"white\",\r\n                                  width: \"25ch\",\r\n                                  marginLeft: \"20px\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                <Link to={\"/search/\" + item.Name}>\r\n                                  {\" \"}\r\n                                  {item.Name}{\" \"}\r\n                                </Link>\r\n                              </div>\r\n                            </Dropdown.Item>\r\n                          );\r\n                        })}\r\n                        {productSearch.length == 0 && (\r\n                          <Dropdown.Item>\r\n                            <div\r\n                              classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                              }}\r\n                              inputProps={{ \"aria-label\": \"search\" }}\r\n                              style={{\r\n                                background: \"white\",\r\n                                width: \"25ch\",\r\n                                marginLeft: \"20px\",\r\n                                textAlign: \"center\",\r\n                                cursor: \"wait\",\r\n                              }}\r\n                            >\r\n                              {\"No Product Found\"}\r\n                            </div>\r\n                          </Dropdown.Item>\r\n                        )}\r\n                      </>\r\n                    }\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n            </ListItem>\r\n          </Typography>\r\n          {userId === \"\" ? (\r\n            <Button\r\n              color=\"inherit\"\r\n              style={{ marginLeft: \"auto\" }}\r\n              href=\"/signin\"\r\n            >\r\n              Login\r\n            </Button>\r\n          ) : (\r\n            <div>\r\n              <Button\r\n                color=\"inherit\"\r\n                style={{ marginLeft: \"auto\" }}\r\n                onClick={profileHandler}\r\n              >\r\n                <AccountCircleRoundedIcon\r\n                  style={{ color: \"#ffffff\", marginTop: \"2px\" }}\r\n                />\r\n              </Button>\r\n              <Button\r\n                color=\"inherit\"\r\n                style={{ marginLeft: \"auto\" }}\r\n                onClick={notificationHandler}\r\n              >\r\n                <NotificationsIcon\r\n                  style={{ color: \"#ffffff\", marginTop: \"2px\" }}\r\n                />\r\n                {notifications.length === 0 ? (\r\n                  <span />\r\n                ) : (\r\n                  <span\r\n                    style={{\r\n                      transform: \"translateX(-13px) translateY(-9px)\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        borderRadius: \"50%\",\r\n                        backgroundColor: \"red\",\r\n                        paddingLeft: \"8px\",\r\n                        paddingRight: \"8px\",\r\n                        fontSize: \"11px\",\r\n                      }}\r\n                      className=\"badge\"\r\n                    >\r\n                      {notifications.length}\r\n                    </div>\r\n                  </span>\r\n                )}\r\n              </Button>\r\n              <Button\r\n                color=\"inherit\"\r\n                style={{ marginLeft: \"auto\" }}\r\n                onClick={logoutHandler}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <div style={{ fontFamily: \"Trebuchet MS\" }}>\r\n                <i>\r\n                  Hi, <b>{UserName + \" \"}</b>\r\n                </i>\r\n                <ChevronLeftIcon />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {UserName}\r\n                <ChevronRightIcon />\r\n              </div>\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n\r\n        {userId === \"\" ? (\r\n          <List></List>\r\n        ) : isCustomer ? (\r\n          <List>\r\n            <Divider />\r\n            <Link to={\"/userprofile/\" + userId} onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Profile\">\r\n                <ListItemIcon>\r\n                  <AccountCircleRoundedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Profile\" style={{ color: \"#000000\" }} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/editprofile\" onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Edit profile\">\r\n                <ListItemIcon>\r\n                  <EditIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Edit Profile\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/notifications\" onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Notifications\">\r\n                <ListItemIcon>\r\n                  <NotificationsActiveIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Notifications\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/cart\" onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Cart\">\r\n                <ListItemIcon>\r\n                  <ShoppingCartIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Cart\" style={{ color: \"#000000\" }} />\r\n              </ListItem>\r\n            </Link>\r\n\r\n            <Link to=\"/mybids\" onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Order History\">\r\n                <ListItemIcon>\r\n                  <HistoryIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Order History\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/customerotp\" onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Verify Account\">\r\n                <ListItemIcon>\r\n                  <VerifiedUserIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Verify Account\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        ) : (\r\n          <List>\r\n            <Divider />\r\n\r\n            <Link to={\"/sellerprofile/\" + userId} onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Profile\">\r\n                <ListItemIcon>\r\n                  <AccountCircleRoundedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Profile\" style={{ color: \"#000000\" }} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/sellereditprofile\" onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Edit profile\">\r\n                <ListItemIcon>\r\n                  <EditIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Edit Profile\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to={\"/addproduct\"} onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Add Product\">\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Add Product\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/sellerproducts\" onClick={handleDrawerClose}>\r\n              <ListItem button key=\"YourProducts\">\r\n                <ListItemIcon>\r\n                  <ListAltIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Your Products\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/notifications\" onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Notifications\">\r\n                <ListItemIcon>\r\n                  <NotificationsActiveIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Notifications\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/biddingSeller\" onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Bid Products\">\r\n                <ListItemIcon>\r\n                  <GavelIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Bid Products\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/sellerotp\" onClick={handleDrawerClose}>\r\n              <ListItem button key=\"Verify Account\">\r\n                <ListItemIcon>\r\n                  <VerifiedUserIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Verify Account\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        )}\r\n\r\n        <Divider />\r\n        <List>\r\n          <Link to=\"/\" onClick={handleDrawerClose}>\r\n            <ListItem button key=\"Home Screen\">\r\n              <ListItemIcon>\r\n                <HomeIcon />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary=\"Home Screen\"\r\n                style={{ color: \"#000000\" }}\r\n              />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/category\" onClick={handleDrawerClose}>\r\n            <ListItem button key=\"Category\">\r\n              <ListItemIcon>\r\n                <CategoryIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Category\" style={{ color: \"#000000\" }} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/signin\" onClick={handleDrawerClose}>\r\n            <ListItem button key=\"Register/SignIn\">\r\n              <ListItemIcon>\r\n                <VpnKeyIcon />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary=\"Register/SignIn\"\r\n                style={{ color: \"#000000\" }}\r\n              />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/sellersignin\" onClick={handleDrawerClose}>\r\n            <ListItem button key=\"Seller SignIn\">\r\n              <ListItemIcon>\r\n                <BusinessCenterIcon />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary=\"Seller SignIn\"\r\n                style={{ color: \"#000000\" }}\r\n              />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/feedback\" onClick={handleDrawerClose}>\r\n            <ListItem button key=\"Feedback\">\r\n              <ListItemIcon>\r\n                <ChatIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Feedback\" style={{ color: \"#000000\" }} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/aboutus\" onClick={handleDrawerClose}>\r\n            <ListItem button key=\"About Us\">\r\n              <ListItemIcon>\r\n                <InfoIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"About Us\" style={{ color: \"#000000\" }} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/logout\" onClick={handleDrawerClose}>\r\n            <ListItem button key=\"Logout\">\r\n              <ListItemIcon>\r\n                <MeetingRoomIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Logout\" style={{ color: \"#000000\" }} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerSignIn\\SellerSigninScreen.js",[],"E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\CustomerOTP\\CustomerOTP.js",["289"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure();\r\n\r\nfunction sleep(time) {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        LocoShop\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(/images/sellersignin.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function CustomerOTP() {\r\n  const classes = useStyles();\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [id, setid] = useState(\"\");\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    try{\r\n      const decoded_token = jwt.verify(localStorage.getItem(\"CustomerJwt\"),process.env.REACT_APP_JWT_SECRET);\r\n      setid(decoded_token._id);\r\n      fetch(\"http://localhost:3001/api/customer/verifycustomertype\",{\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id : decoded_token._id,\r\n        }),\r\n      }).then(res => res.json())\r\n      .then(result => {\r\n        if(result.isverified){\r\n           history.push('/category');\r\n        }\r\n      })\r\n    }catch(err){\r\n      console.log(err);\r\n      history.push('/signin')\r\n    } \r\n  }, []);\r\n\r\n  const submitHandler = () => {\r\n    if (otp === \"\") {\r\n      console.log(\"Please enter otp\");\r\n    } else {\r\n      fetch(\"http://localhost:3001/api/customer/customerotp\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          otp: otp,\r\n          timestamp: Date.now(),\r\n          id : id\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          console.log(result);\r\n          if (result.message === \"Valid OTP...User Authenticated\") {\r\n            // localStorage.setItem(\"jwt\", result.token);\r\n            toast.success(\"Sweet !\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n              autoClose: 1500,\r\n            });\r\n            sleep(2000).then(() => {\r\n              history.push(\"/\");\r\n              window.location.reload(false);\r\n            });\r\n          } else {\r\n            toast.warning(result.message, {\r\n              position: toast.POSITION.TOP_CENTER,\r\n              autoClose: 2000,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n  console.log(\"Customer otp page\");\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Customer OTP\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"otp\"\r\n              label=\"Enter the 6 digit OTP sent to your email id\"\r\n              name=\"otp\"\r\n              autoComplete=\"otp\"\r\n              autoFocus\r\n              onChange={(e) => {\r\n                setOtp(e.target.value);\r\n              }}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={submitHandler}\r\n            >\r\n              Submit OTP\r\n            </Button>\r\n            {/* <div id=\"my-signin2\"></div> */}\r\n            <Box mt={3} />\r\n            <Grid container>\r\n              <Grid item xs>\r\n                 <Link href=\"customerotp\" variant=\"body2\">\r\n                  Resend OTP\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SignIn\\CustomerSigninScreen.js",["290"],"import { React, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { jwt } from \"jsonwebtoken\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure();\r\n\r\nfunction sleep(time) {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        LocoShop\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(/images/signin.PNG)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function CustomerSigninScreen() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email === \"\" || password === \"\") {\r\n      toast.error(\"Please fill all fields !\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    } else {\r\n      fetch(\"http://localhost:3001/api/customer/signin\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: password,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          // console.log(result);\r\n          if (result.message === \"Success\") {\r\n            localStorage.setItem(\"CustomerJwt\", result.CustomerToken);\r\n            if (result.isAuthenticated) {\r\n              toast.success(\"Sweet !\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1500,\r\n              });\r\n              sleep(2000).then(() => {\r\n                history.push(\"/\");\r\n                window.location.reload(false);\r\n              });\r\n            } else {\r\n              console.log(\"customer unauthorised\");\r\n              toast.warning(\"Please Authorize yourself\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000,\r\n              });\r\n              sleep(2300).then(() => {\r\n                history.push(\"/customerotp\");\r\n                // window.location.reload(false);\r\n              });\r\n            }\r\n          } else {\r\n            toast.error(`${result.message}`, {\r\n              position: toast.POSITION.TOP_CENTER,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Customer Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={submitHandler}>\r\n            <Grid item xs={12} style={{ marginBottom: \"20px\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Box mt={3} />\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"forgotpassword\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerOTP\\SellerOTP.js",["291"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst jwt = require(\"jsonwebtoken\");\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        LocoShop\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(/images/sellersignin.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SellerOTP() {\r\n  const classes = useStyles();\r\n  const [id, setid] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    try {\r\n      const decoded_token = jwt.verify(\r\n        localStorage.getItem(\"sellerjwt\"),\r\n        process.env.REACT_APP_JWT_SECRET\r\n      );\r\n      setid(decoded_token._id);\r\n      fetch(\"http://localhost:3001/api/seller/verifysellertype\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: decoded_token._id,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result.isverified) {\r\n            history.push(\"/sellerprofile\");\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"/sellersignin\");\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = () => {\r\n    if (otp === \"\") {\r\n      console.log(\"Please enter otp\");\r\n    } else {\r\n      fetch(\"http://localhost:3001/api/seller/sellerotp\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: \"Bearer \" + localStorage.getItem(\"sellerjwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          otp: otp,\r\n          sellerId: id,\r\n          timestamp: Date.now(),\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          console.log(result);\r\n          if (result.message === \"Valid OTP...User Authenticated\") {\r\n            history.push(\"/category\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Seller OTP\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"otp\"\r\n              label=\"Enter the 6 digit OTP sent to your email id\"\r\n              name=\"otp\"\r\n              autoComplete=\"otp\"\r\n              autoFocus\r\n              onChange={(e) => {\r\n                setOtp(e.target.value);\r\n              }}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={submitHandler}\r\n            >\r\n              Submit OTP\r\n            </Button>\r\n            {/* <div id=\"my-signin2\"></div> */}\r\n            <Box mt={3} />\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"sellerotp\" variant=\"body2\">\r\n                  Resend OTP\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/sellersignup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\Cart\\CartScreen.js",["292","293","294","295"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./CartScreen.css\";\r\nimport \"./CartScreen.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Axios from \"axios\";\r\n\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst env = require(\"dotenv\");\r\n\r\nenv.config();\r\ntoast.configure();\r\n\r\nexport default function CartScreen() {\r\n  const history = useHistory();\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  var userId = \"\";\r\n  var totalQuantity = 0;\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const jwtToken = await localStorage.getItem(\"CustomerJwt\");\r\n      console.log(jwt);\r\n      const user = await jwt.verify(jwtToken, process.env.REACT_APP_JWT_SECRET);\r\n      // const jwtToken = localStorage.getItem(\"jwt\");\r\n      // const user = jwt.verify(jwtToken, process.env.REACT_APP_JWT_SECRET);\r\n      userId = user._id;\r\n\r\n      if (userId === \"\") {\r\n        toast.error(\"Please sign in to continue !!!\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n        // history.push(\"/signin\");\r\n      } else {\r\n        Axios.get(`http://localhost:3001/api/customer/getcart/${userId}`, {\r\n          id: userId,\r\n        }).then((result) => {\r\n          // console.log(result);\r\n          if (result.data.message === \"Success\") {\r\n            setCartItems(result.data.itemList);\r\n            setTotalPrice(result.data.totalPrice);\r\n          } else {\r\n            toast.warning(\"Your cart it empty!\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"CartScreenContainer\">\r\n      <div class=\"CartScreenbasket\">\r\n        <div class=\"CartScreenbasket-labels\">\r\n          <ul className=\"CartScreenUl\">\r\n            <li class=\"CartScreenitem item-heading CartScreenLi\">Item</li>\r\n            <li class=\"CartScreenquantity CartScreenLi\">Quantity</li>\r\n            <li class=\"CartScreensubtotal CartScreenLi\">Subtotal</li>\r\n          </ul>\r\n        </div>\r\n        {cartItems.map((item) => (\r\n          <div class=\"CartScreenbasket-product\">\r\n            <div class=\"CartScreenitem\">\r\n              <div class=\"CartScreenproduct-image\">\r\n                <img\r\n                  src={item.Image}\r\n                  alt=\"Placholder Image 2\"\r\n                  class=\"CartScreenproduct-frame CartScreenImg\"\r\n                />\r\n              </div>\r\n              <div class=\"CartScreenproduct-details\">\r\n                <h1>\r\n                  <a href=\"#\">{item.productName}</a>\r\n                </h1>\r\n                <p>\r\n                  <strong>{item.Description}</strong>\r\n                </p>\r\n                <h2>Price: ₹{item.Price}</h2>\r\n                <p style={{ color: \"#ffffff\" }}>\r\n                  {(totalQuantity = totalQuantity + item.Quantity)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"CartScreenquantity\">\r\n              <input\r\n                type=\"number\"\r\n                value={item.Quantity}\r\n                min=\"1\"\r\n                class=\"CartScreenquantity-field CartScreenInput\"\r\n              />\r\n            </div>\r\n            <div class=\"CartScreensubtotal\">\r\n              <h3>₹{item.Quantity * item.Price}</h3>\r\n            </div>\r\n            <div class=\"CartScreenremove\">\r\n              <button className=\"CartScreenButton CartScreenRemoveButton\">\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>{\" \"}\r\n      <aside className=\"CartScreenAside\">\r\n        <div class=\"CartScreensummary\">\r\n          <div class=\"CartScreensummary-total-items\">\r\n            <span class=\"CartScreentotal-items\"></span> BIDDING SUMMARY\r\n          </div>\r\n          <div class=\"CartScreensummary-subtotal\">\r\n            <div class=\"CartScreensubtotal-title\">Products</div>\r\n            <div\r\n              class=\"CartScreensubtotal-value final-value\"\r\n              id=\"basket-subtotal\"\r\n            >\r\n              {cartItems.length}\r\n            </div>\r\n            <div class=\"CartScreensubtotal-title\">Quantity</div>\r\n            <div\r\n              class=\"CartScreensubtotal-value final-value\"\r\n              id=\"basket-subtotal\"\r\n            >\r\n              {totalQuantity}\r\n            </div>\r\n          </div>\r\n          <div class=\"CartScreensummary-total\">\r\n            <div class=\"CartScreentotal-title\">Total</div>\r\n            <div class=\"CartScreentotal-value final-value\" id=\"basket-total\">\r\n              ₹{totalPrice}\r\n            </div>\r\n          </div>\r\n          <div class=\"CartScreensummary-checkout\">\r\n            <button className=\"CartScreenButton CartScreencheckout-cta\"\r\n            onClick={()=>{history.push(\"/placeorder\")}}>\r\n              BID NOW\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\AllActiveBids\\AllActiveBids.js",["296","297","298","299"],"import React from \"react\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport \"./AllActiveBids.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GavelIcon from \"@material-ui/icons/Gavel\";\r\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport Link from 'react-router-dom/Link';\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\ntoast.configure();\r\n\r\nconst months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n\r\n// function sleep(time) {\r\n//   return new Promise((resolve) => setTimeout(resolve, time));\r\n// }\r\nexport default function AllActiveBids() {\r\n  const [bidArray, setBidArray] = React.useState([]);\r\n  const [itemArray, setItemArray] = React.useState([]);\r\n  //const [dateTime, setDateTime] = React.useState(new Date());\r\n  const history = useHistory();\r\n  const[ready, setReady] = React.useState(0);\r\n  //const id = setInterval(() => setDateTime(new Date()), 1000);\r\n\r\n  React.useEffect(()=>{\r\n    try{\r\n        const decodedToken = jwt.verify(localStorage.getItem(\"sellerjwt\"), process.env.REACT_APP_JWT_SECRET);\r\n        fetch(\r\n            'http://localhost:3001/api/bid/getactivebids',\r\n            {\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                },\r\n                body:JSON.stringify({\r\n                    id: decodedToken._id\r\n                })\r\n            }\r\n        ).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            if(result.message===\"Success\"){\r\n                setBidArray(result.bids);\r\n                setItemArray(result.bidItems);\r\n                setReady(1);\r\n            }\r\n        })\r\n    }catch(err){\r\n        console.log(err);\r\n        toast.error(\"Please login first !\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1500,\r\n          });\r\n        history.push(\"/sellersignin\")\r\n    }\r\n  },[]);\r\n\r\n  return(\r\n      <div>\r\n          {\r\n              ready==1\r\n              ?\r\n              <div className=\"BiddingScreenBody\">\r\n      {\r\n          bidArray.map((data,index)=>{\r\n              return(\r\n                <div className=\"container\">\r\n                    <div className=\"BiddingSellerTitle\" style={{ display: \"flex\" }}>\r\n                    <div style={{ width: \"30%\" }}>\r\n                        <h2 className=\"BiddingScreenh2\">Order Id: {index+1}</h2>\r\n                    </div>\r\n                    {/* <div style={{ width: \"70%\" }}>\r\n                        <div style={{ float: \"right\" }}>\r\n                        <var>\r\n                            <AccessAlarmIcon />\r\n                        </var>{\" \"}\r\n                        <sup>{`${dateTime.toLocaleTimeString()}`}</sup>\r\n                        </div>\r\n                    </div> */}\r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                    <div style={{ display: \"block\" }}>\r\n                        <div className=\"BiddingScreenLeft\">\r\n                        <div\r\n                            style={{\r\n                            width: \"100%\",\r\n                            }}\r\n                        >\r\n                            <b>\r\n                            <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                                <div>\r\n                                <p style={{ float: \"left\" }}>Name</p>\r\n                                </div>\r\n                                <div style={{ float: \"right\" }}>Qty</div>\r\n                            </div>\r\n                            </b>\r\n                        </div>\r\n                        </div>\r\n                        {itemArray[index].map((item)=>{\r\n                            return(\r\n                                <div className=\"BiddingScreenLeft\">\r\n                                <div\r\n                                    style={{\r\n                                    width: \"100%\",\r\n                                    }}\r\n                                >\r\n                                    <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                                    <div>\r\n                                        <p style={{ float: \"left\" }}>{item.name}</p>\r\n                                    </div>\r\n                                    <div style={{ float: \"right\" }}>{item.quantity}</div>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        \r\n                    </div>\r\n                    <div className=\"Yorder\">\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                        <h3>Bidding Summary</h3>\r\n                        </div>\r\n                        <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                        }}\r\n                        >\r\n                        {console.log(Date.now()-new Date(data.orderedAt).getTime())}\r\n                        <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                            <div>\r\n                            <p style={{ float: \"left\" }}>Present Bid</p>\r\n                            </div>\r\n                            <div style={{ float: \"right\" }}>Rs. {data.bids[data.bids.length-1].biddingPrice}</div>\r\n                        </div>\r\n                        </div>\r\n                        <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                        }}\r\n                        >\r\n                        <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                            <div>\r\n                            <p style={{ float: \"left\" }}>Date Created</p>\r\n                            </div>\r\n                            <div style={{ float: \"right\" }}>{months[new Date(data.orderedAt).getMonth()]+\" \"+new Date(data.orderedAt).getDate()+\", \"+new Date(data.orderedAt).getFullYear()}</div>\r\n                        </div>\r\n                        </div>\r\n                        <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                        }}\r\n                        >\r\n                        <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                            <div>\r\n                            <p style={{ float: \"left\" }}>Expires in</p>\r\n                            </div>\r\n                            <div style={{ float: \"right\" }}>{180-((Date.now()-new Date(data.orderedAt))/(1000*60)).toFixed(0)+\" minutes\"}</div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#ffffff\", width: \"100%\" }}>\r\n                    <div style={{ padding: \"10px\", display: \"flex\", width: \"100%\" }}>\r\n                        <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                        }}\r\n                        >\r\n                        <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                            <div>\r\n                            </div>\r\n                            <div style={{ float: \"right\" }}>\r\n                            <Link to={\"/bids/\"+data._id}>\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                <p>\r\n                                <GavelIcon /> Bid Now\r\n                                </p>\r\n                            </Button>\r\n                            </Link>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n              )\r\n          })\r\n      }\r\n      \r\n    </div>\r\n              :\r\n                <div></div>\r\n          }\r\n      </div>\r\n  )\r\n  \r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\SellerEditProfile\\SellerEditProfile.js",["300","301","302"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Input } from \"@material-ui/core\";\r\nconst jwt = require(\"jsonwebtoken\");\r\ntoast.configure();\r\n\r\nfunction sleep(time) {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\n\r\nexport default function SellerEditProfile() {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contactNo, setContactNo] = useState(0);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [updatePic, setUpdatePic] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  useEffect(async () => {\r\n    try {\r\n      const jwtToken = await localStorage.getItem(\"sellerjwt\");\r\n      const user = await jwt.verify(jwtToken, process.env.REACT_APP_JWT_SECRET);\r\n      if (user) {\r\n        setUserId(user);\r\n        await axios\r\n          .get(`http://localhost:3001/api/seller/${user._id}`)\r\n          .then(async (response) => {\r\n            console.log(response);\r\n            const data = await response.data.seller;\r\n            if (data) {\r\n              setFirstName(data.firstName);\r\n              setLastName(data.lastName);\r\n              setEmail(data.email);\r\n              setContactNo(data.contactNo);\r\n              setAddress(data.address);\r\n              setCity(data.city);\r\n              setState(data.state);\r\n              setCountry(data.country);\r\n            }\r\n          })\r\n          .catch((err) => console.error(err));\r\n      } else {\r\n        toast.error(\"please signin to continue\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n          autoClose: 1500,\r\n        });\r\n        sleep(2000).then(() => {\r\n          useHistory.push(\"/sellersignin\");\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password === ConfirmPassword) {\r\n      const fileType = updatePic[\"type\"];\r\n      //   const validImageTypes = [\"image/jpg\", \"image/jpeg\", \"image/png\"];\r\n      //   if (!validImageTypes.includes(fileType)) {\r\n      //     toast.error(\"Invalid Image Type, Retry ?\", {\r\n      //       position: toast.POSITION.TOP_CENTER,\r\n      //     });\r\n      //     return;\r\n      //   }\r\n\r\n      var fileSize = updatePic[\"size\"];\r\n      if (fileSize > 1000000) {\r\n        //  alert('Photo Size Exceeds , Size must be less than 500Kb');\r\n        toast.error(\"Photo Size Exceeds , Size must be less than 1MB\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n        return;\r\n      }\r\n      toast.info(\"Image Uploading ! Plese Wait !\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n\r\n      axios\r\n        .post(`http://localhost:3001/api/seller/editprofile`, {\r\n          userId: userId,\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          email: email,\r\n          contactNo: contactNo,\r\n          address: address,\r\n          city: city,\r\n          state: state,\r\n          country: country,\r\n          password: password,\r\n        })\r\n        .then(async (response) => {\r\n          console.log(response);\r\n          if (response.data.message === \"Success\") {\r\n            toast.success(\"Sweet\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n              autoClose: 1500,\r\n            });\r\n          } else {\r\n            toast.warning(response.data.message, {\r\n              position: toast.POSITION.TOP_CENTER,\r\n              autoClose: 1500,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => console.error(err));\r\n    } else {\r\n      toast.error(\"password in not equal to  confirm password\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n        autoClose: 1500,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n      <div\r\n        style={{\r\n          width: \"80%\",\r\n          margin: \"auto\",\r\n          padding: \"15px\",\r\n          borderRadius: \"15px\",\r\n          border: \"1px solid grey\",\r\n          marginTop: \"30px\",\r\n          marginBottom: \"30px\",\r\n        }}\r\n      >\r\n        <div style={{ textAlign: \"center\", margin: \"10px\" }}>\r\n          <h1>Edit Profile</h1>\r\n        </div>\r\n        <div style={{ width: \"80%\", margin: \"auto\" }}>\r\n          <form onSubmit={submitHandler}>\r\n            <div style={{ display: \"flex\" }}>\r\n              <div\r\n                style={{\r\n                  width: \"50%\",\r\n                  margin: \"5px\",\r\n                  marginLeft: \"10px\",\r\n                  marginRight: \"0px\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  value={firstName}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div style={{ width: \"50%\", margin: \"5px\", marginRight: \"0px\" }}>\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  value={lastName}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Email\"\r\n                id=\"outlined-size-small\"\r\n                value={email}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Contact Number\"\r\n                id=\"outlined-size-small\"\r\n                type=\"number\"\r\n                value={contactNo}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setContactNo(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Address\"\r\n                value={address}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"City\"\r\n                value={city}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setCity(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"State\"\r\n                value={state}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setState(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Country\"\r\n                value={country}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Password\"\r\n                value={password}\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                value={ConfirmPassword}\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <label>\r\n                <p style={{ size: \"1.2rem\" }}>Update Profile Pic</p>\r\n              </label>\r\n              <Input\r\n                type=\"file\"\r\n                id=\"ii\"\r\n                pattern=\".{1,50}\"\r\n                onChange={(e) => setUpdatePic(e.target.files[0])}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\", textAlign: \"center\" }}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\BiddingScreenSeller\\BiddingScreenSeller.js",["303","304","305","306","307"],"import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './BiddingScreenSeller.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GavelIcon from '@material-ui/icons/Gavel';\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\ntoast.configure();\r\n\r\nconst months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n\r\nexport default function BiddingScreenSeller(props){\r\n    const [bidSummary, setBidSummary] = useState({});\r\n    const [products, setProducts] = useState([]);\r\n    const [sellers, setSellers] = useState([]);\r\n    const [price, setPrice] = useState(0);\r\n    const [id, setId] = useState(undefined);\r\n    const [bidId, setBidId] = useState(undefined);\r\n    const [update, setUpdate] = useState(0);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const decodedToken = jwt.verify(localStorage.getItem(\"sellerjwt\"), process.env.REACT_APP_JWT_SECRET);\r\n            setId(decodedToken._id);\r\n            console.log(decodedToken)\r\n            fetch(\r\n                'http://localhost:3001/api/bid/'+props.match.params.id,\r\n                {\r\n                    method:\"post\",\r\n                    headers:{\r\n                        \"Content-Type\":\"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        sellerId: decodedToken._id\r\n                    })\r\n                }\r\n            ).then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result);\r\n                if(result.message===\"Success\"){\r\n                    setBidId(result.bid._id);\r\n                    setBidSummary({\r\n                        totalItems: result.products.length,\r\n                        currentMinBid: result.sellers[0].biddingPrice,\r\n                        status: (Date.now()-new Date(result.bid.orderedAt))/(1000*60)<180?\"Ongoing\":\"Expired\",\r\n                        bidDate: months[new Date(result.bid.orderedAt).getMonth()]+\" \"+new Date(result.bid.orderedAt).getDate()+\", \"+new Date(result.bid.orderedAt).getFullYear(),\r\n                        timeRemaining: (Date.now()-new Date(result.bid.orderedAt))/(1000*60)<180?180-((Date.now()-new Date(result.bid.orderedAt))/(1000*60)).toFixed(0)+\" minutes\":\"---\"\r\n                    });\r\n                    setProducts(result.products);\r\n                    setSellers(result.sellers);\r\n                }else{\r\n                    history.push(\"/error\")\r\n                }\r\n                \r\n            })\r\n        }catch(err){\r\n            console.log(err);\r\n            toast.error(\"Please login first !\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1500,\r\n            });\r\n            history.push(\"/sellersignin\")\r\n        }\r\n    },[update]);\r\n\r\n    const PostBid = ()=>{\r\n        if(price < bidSummary.currentMinBid){\r\n            fetch('http://localhost:3001/api/bid/placebid',\r\n            {\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    price: price,\r\n                    sellerId: id,\r\n                    bidId: bidId\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                if(result.message===\"Success\"){\r\n                    toast.success(\"Successfully placed bid !\", {\r\n                        position: toast.POSITION.TOP_CENTER,\r\n                        autoClose: 1500,\r\n                    });\r\n                    setUpdate(update+1);\r\n                }else{\r\n                    toast.error(result.message, {\r\n                        position: toast.POSITION.TOP_CENTER,\r\n                        autoClose: 1500,\r\n                    });\r\n                }\r\n            })\r\n        }else{\r\n            toast.error(\"Please enter a price lesser than the current minimum bid !\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={{paddingLeft:\"10px\",paddingRight:\"10px\"}}>\r\n        <div className=\"bidding_screen_all_content\">\r\n            <div className=\"bidding_screen_heading\">\r\n                <h1>BIDDING SCREEN</h1>\r\n            </div>\r\n            <div className=\"bidding_screen_body\">\r\n                <h1 \r\n                style={{\r\n                    marginTop:\"10px\",\r\n                    marginBottom:\"10px\"}}\r\n                >BID SUMMARY</h1>\r\n                <Grid container\r\n                style={{padding:\"8px\"}}>\r\n                    <Grid item xs={12} sm={12} md={6} md={6}\r\n                    style={{\r\n                        textAlign:\"left\",\r\n                        borderBottom:\"1px solid gray\",\r\n                        padding:\"5px\",\r\n                    }}>\r\n                        <h3 className=\"bid_summary\">TOTAL ITEMS : {bidSummary.totalItems}</h3>\r\n                        <h3 className=\"bid_summary\">CURRENT MIN BID: ₹{bidSummary.currentMinBid}</h3>\r\n                        <h3 className=\"bid_summary\">BID STATUS: <span className={bidSummary.status===\"Ongoing\"?\"status_green\":\"status_red\"}>{bidSummary.status}</span></h3>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6} md={6}\r\n                    style={{\r\n                        textAlign:\"left\",\r\n                        borderBottom:\"1px solid gray\",\r\n                        padding:\"5px\",\r\n                    }}>\r\n                        <h3 className=\"bid_summary\">BID DATE : {bidSummary.bidDate}</h3>\r\n                        <h3 className=\"bid_summary\">TIME REMAINING : {bidSummary.timeRemaining}</h3>\r\n                        {\r\n                            bidSummary.status===\"Ongoing\"\r\n                            ?\r\n                            <Grid container\r\n                            style={{marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                                <Grid item xs={6} sm={6} md={6} lg={6}>\r\n                                    <TextField\r\n                                    type=\"number\"\r\n                                    variant=\"outlined\"\r\n                                    label=\"Enter bid amount\"\r\n                                    style={{width:\"100%\"}}\r\n                                    value={price}\r\n                                    onChange={(e)=>{setPrice(Number(e.target.value))}}></TextField>\r\n                                </Grid>\r\n                                <Grid\r\n                                style={{padding:\"8px\"}} item xs={6} sm={6} md={6} lg={6}\r\n                                onClick={()=>{PostBid()}}>\r\n                                    <div\r\n                                    className=\"bid_button\">\r\n                                        <GavelIcon></GavelIcon>\r\n                                        Bid Now\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            :\r\n                            <div></div>\r\n                        }\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <h1>LIST OF ITEMS</h1>\r\n                \r\n                {\r\n                    products.map(data=>{\r\n                        return(\r\n                            <Grid container\r\n                            style={{padding:\"5px\"}}>\r\n                                <Grid\r\n                            style={{\r\n                                borderBottom:\"1.5px solid gray\"\r\n                            }} \r\n                            item xs={12} sm={12} md={6} lg={4}>\r\n                                <img src={data.image}\r\n                                    style={{\r\n                                        borderRadius:\"10px\",\r\n                                        width:\"100%\",\r\n                                        height:\"220px\",\r\n                                        marginTop:\"10px\",\r\n                                        marginLeft:\"auto\",\r\n                                        marginRight:\"auto\",\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid style={{\r\n                                textAlign:\"left\",\r\n                                padding:\"10px\",\r\n                                borderBottom:\"1.5px solid gray\"}} \r\n                                item xs={12} sm={12} md={6} lg={8}>\r\n                                <h2 className=\"item_details\">NAME : {data.name}</h2>\r\n                                <h2 className=\"item_details\">CATEGORY : {data.category}</h2>\r\n                                <h2 className=\"item_details\">QUANTITY : {data.quantity}</h2>\r\n                            </Grid>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n                \r\n                <h1>LIST OF BIDDING SELLERS</h1>\r\n                {\r\n                    sellers.map(data=>{\r\n                        return(\r\n                            <Grid\r\n                            style={{maxWidth:\"560px\",\r\n                            marginLeft:\"auto\",\r\n                            marginRight:\"auto\",\r\n                            paddingLeft:\"10px\",\r\n                            paddingRight:\"10px\"}}\r\n                            container>\r\n                                <Grid \r\n                                style={{borderBottom:\"1px solid gray\"}} \r\n                                item xs={3} sm={3} md={3} lg={3}>\r\n                                    <img src={data.image}\r\n                                    style={{\r\n                                        borderRadius:\"50%\",\r\n                                        width:\"60px\",\r\n                                        height:\"60px\",\r\n                                        marginTop:\"10px\"\r\n                                    }}/>\r\n                                </Grid>\r\n                                <Grid \r\n                                style={{borderBottom:\"1px solid gray\",\r\n                                textAlign:\"left\"}}  \r\n                                item xs={9} sm={9} md={9} lg={9}>\r\n                                    <h3\r\n                                    style={{\r\n                                        marginTop:\"10px\"\r\n                                    }}>{data.name}</h3>\r\n                                    <h4\r\n                                    style={{\r\n                                        marginTop:\"10px\"\r\n                                    }}>BIDDING PRICE : ₹{data.biddingPrice}</h4>\r\n                                </Grid>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n                    \r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\CustomerForgotPassword\\ForgotPassword.js",["308"],"import { React, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { jwt } from \"jsonwebtoken\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure();\r\n\r\nfunction sleep(time) {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        LocoShop\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(/images/signin.PNG)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ForgotPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email === \"\") {\r\n      toast.error(\"Please fill all fields !\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    } else {\r\n      fetch(\"http://localhost:3001/api/customer/forgotpassword\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: email\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          // console.log(result);\r\n          if (result.message === \"Mail Send\") {\r\n            // localStorage.setItem(\"CustomerJwt\", result.CustomerToken);\r\n            // if (result.isAuthenticated) {\r\n              toast.success(\"Mail Sent !\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1500,\r\n              });\r\n              sleep(2000).then(() => {\r\n                history.push(\"/signin\");\r\n                window.location.reload(false);\r\n              });\r\n            // } \r\n          } else {\r\n            toast.error(`${result.message}`, {\r\n              position: toast.POSITION.TOP_CENTER,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Enter Your Email\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={submitHandler}>\r\n            <Grid item xs={12} style={{ marginBottom: \"20px\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Box mt={3} />\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"forgotpassword\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\CustomerAllBids\\CustomerAllBids.js",["309","310","311","312"],"import React from \"react\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport \"./CustomerAllBids.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GavelIcon from \"@material-ui/icons/Gavel\";\r\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport Link from 'react-router-dom/Link';\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\ntoast.configure();\r\n\r\nconst months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n\r\n// function sleep(time) {\r\n//   return new Promise((resolve) => setTimeout(resolve, time));\r\n// }\r\nexport default function CustomerAllBids() {\r\n  const [bidArray, setBidArray] = React.useState([]);\r\n  const [itemArray, setItemArray] = React.useState([]);\r\n  //const [dateTime, setDateTime] = React.useState(new Date());\r\n  const history = useHistory();\r\n  const[ready, setReady] = React.useState(0);\r\n  //const id = setInterval(() => setDateTime(new Date()), 1000);\r\n\r\n  React.useEffect(()=>{\r\n    try{\r\n        const decodedToken = jwt.verify(localStorage.getItem(\"CustomerJwt\"), process.env.REACT_APP_JWT_SECRET);\r\n        fetch(\r\n            'http://localhost:3001/api/bid/getcustomerbids',\r\n            {\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                },\r\n                body:JSON.stringify({\r\n                    customerId: decodedToken._id,\r\n                })\r\n            }\r\n        ).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            if(result.message===\"Success\"){\r\n                setBidArray(result.bids);\r\n                setItemArray(result.bidItems);\r\n                setReady(1);\r\n            }\r\n        })\r\n    }catch(err){\r\n        console.log(err);\r\n        toast.error(\"Please login first !\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1500,\r\n          });\r\n        history.push(\"/signin\")\r\n    }\r\n  },[]);\r\n\r\n  return(\r\n      <div>\r\n          {\r\n              ready==1\r\n              ?\r\n              <div className=\"BiddingScreenBody\">\r\n      {\r\n          bidArray.map((data,index)=>{\r\n              return(\r\n                <div className=\"container\">\r\n                    <div className=\"BiddingSellerTitle\" style={{ display: \"flex\" }}>\r\n                    <div style={{ width: \"30%\" }}>\r\n                        <h2 className=\"BiddingScreenh2\">Order Id: {index+1}</h2>\r\n                    </div>\r\n                    {/* <div style={{ width: \"70%\" }}>\r\n                        <div style={{ float: \"right\" }}>\r\n                        <var>\r\n                            <AccessAlarmIcon />\r\n                        </var>{\" \"}\r\n                        <sup>{`${dateTime.toLocaleTimeString()}`}</sup>\r\n                        </div>\r\n                    </div> */}\r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                    <div style={{ display: \"block\" }}>\r\n                        <div className=\"BiddingScreenLeft\">\r\n                        <div\r\n                            style={{\r\n                            width: \"100%\",\r\n                            }}\r\n                        >\r\n                            <b>\r\n                            <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                                <div>\r\n                                <p style={{ float: \"left\" }}>Name</p>\r\n                                </div>\r\n                                <div style={{ float: \"right\" }}>Qty</div>\r\n                            </div>\r\n                            </b>\r\n                        </div>\r\n                        </div>\r\n                        {itemArray[index].map((item)=>{\r\n                            return(\r\n                                <div className=\"BiddingScreenLeft\">\r\n                                <div\r\n                                    style={{\r\n                                    width: \"100%\",\r\n                                    }}\r\n                                >\r\n                                    <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                                    <div>\r\n                                        <p style={{ float: \"left\" }}>{item.name}</p>\r\n                                    </div>\r\n                                    <div style={{ float: \"right\" }}>{item.quantity}</div>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        \r\n                    </div>\r\n                    <div className=\"Yorder\">\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                        <h3>Bidding Summary</h3>\r\n                        </div>\r\n                        <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                        }}\r\n                        >\r\n                        {console.log(Date.now()-new Date(data.orderedAt).getTime())}\r\n                        <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                            <div>\r\n                            <p style={{ float: \"left\" }}>Lowest Bid</p>\r\n                            </div>\r\n                            <div style={{ float: \"right\" }}>Rs. {data.bids[data.bids.length-1].biddingPrice}</div>\r\n                        </div>\r\n                        </div>\r\n                        <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                        }}\r\n                        >\r\n                        <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                            <div>\r\n                            <p style={{ float: \"left\" }}>Date Created</p>\r\n                            </div>\r\n                            <div style={{ float: \"right\" }}>{months[new Date(data.orderedAt).getMonth()]+\" \"+new Date(data.orderedAt).getDate()+\", \"+new Date(data.orderedAt).getFullYear()}</div>\r\n                        </div>\r\n                        </div>\r\n                        <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                        }}\r\n                        >\r\n                        <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                            <div>\r\n                            <p style={{ float: \"left\" }}>Expires in</p>\r\n                            </div>\r\n                            <div style={{ float: \"right\" }}>{(180-((Date.now()-new Date(data.orderedAt))/(1000*60)).toFixed(0))>0?180-((Date.now()-new Date(data.orderedAt))/(1000*60)).toFixed(0)+\" minutes\":\"Expired\"}</div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#ffffff\", width: \"100%\" }}>\r\n                    <div style={{ padding: \"10px\", display: \"flex\", width: \"100%\" }}>\r\n                        <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                        }}\r\n                        >\r\n                        <div className=\"orders\" style={{ width: \"100%\" }}>\r\n                            <div>\r\n                            </div>\r\n                            <div style={{ float: \"right\" }}>\r\n                            <Link to={\"/mybids/\"+data._id}>\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                <p>\r\n                                <GavelIcon /> MORE DETAILS\r\n                                </p>\r\n                            </Button>\r\n                            </Link>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n              )\r\n          })\r\n      }\r\n      \r\n    </div>\r\n              :\r\n                <div></div>\r\n          }\r\n      </div>\r\n  )\r\n  \r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\EditProfile\\EditProfile.js",["313","314","315","316","317"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Input } from \"@material-ui/core\";\r\nconst jwt = require(\"jsonwebtoken\");\r\ntoast.configure();\r\n\r\nfunction sleep(time) {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n}\r\n\r\nexport default function EditProfile() {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contactNo, setContactNo] = useState(0);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [updatePic, setUpdatePic] = useState(undefined);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(()=>{\r\n    if(url!==\"\"){\r\n      axios\r\n        .post(`http://localhost:3001/api/customer/editprofile`, {\r\n          userId: userId,\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          email: email,\r\n          contactNo: contactNo,\r\n          address: address,\r\n          city: city,\r\n          state: state,\r\n          country: country,\r\n          password: password,\r\n          profilePicUrl: url,\r\n        })\r\n        .then(async (response) => {\r\n          console.log(response);\r\n          if (response.data.message === \"Success\") {\r\n            toast.success(\"Sweet\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n              autoClose: 1500,\r\n            });\r\n          } else {\r\n            toast.warning(response.data.message, {\r\n              position: toast.POSITION.TOP_CENTER,\r\n              autoClose: 1500,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => console.error(err));\r\n    }\r\n  },[url]);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const jwtToken = await localStorage.getItem(\"CustomerJwt\");\r\n      const user = await jwt.verify(jwtToken, process.env.REACT_APP_JWT_SECRET);\r\n      if (user) {\r\n        setUserId(user);\r\n        await axios\r\n          .get(`http://localhost:3001/api/customer/${user._id}`)\r\n          .then(async (response) => {\r\n            console.log(response);\r\n            const data = await response.data.customer;\r\n            if (data) {\r\n              setFirstName(data.firstName);\r\n              setLastName(data.lastName);\r\n              setEmail(data.email);\r\n              setContactNo(data.contactNo);\r\n              setAddress(data.address);\r\n              setCity(data.city);\r\n              setState(data.state);\r\n              setCountry(data.country);\r\n            }\r\n          })\r\n          .catch((err) => console.error(err));\r\n      } else {\r\n        toast.error(\"please signin to continue\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n          autoClose: 1500,\r\n        });\r\n        sleep(2000).then(() => {\r\n          history.push(\"/signin\");\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"please signin to continue\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n        autoClose: 1500,\r\n      });\r\n      sleep(2000).then(() => {\r\n        history.push(\"/signin\");\r\n      });\r\n    }\r\n  }, []);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password === ConfirmPassword) {\r\n      const fileType = updatePic[\"type\"];\r\n      // const validImageTypes = [\"image/jpg\", \"image/jpeg\", \"image/png\"];\r\n      // if (!validImageTypes.includes(fileType)) {\r\n      //   toast.error(\"Invalid Image Type, Retry ?\", {\r\n      //     position: toast.POSITION.TOP_CENTER,\r\n      //   });\r\n      //   return;\r\n      // }\r\n\r\n      var fileSize = updatePic[\"size\"];\r\n      if (fileSize > 1000000) {\r\n        //  alert('Photo Size Exceeds , Size must be less than 500Kb');\r\n        toast.error(\"Photo Size Exceeds , Size must be less than 1MB\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n        return;\r\n      }\r\n      toast.info(\"Image Uploading ! Plese Wait !\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n\r\n      const data = new FormData();\r\n      data.append(\"file\",updatePic);\r\n      data.append(\"upload_preset\",process.env.REACT_APP_UPLOAD_PRESET);\r\n      data.append(\"cloud_name\",process.env.REACT_APP_CLOUD_NAME);\r\n      fetch(\r\n          process.env.REACT_APP_IMAGE_API,\r\n          {\r\n              method:\"post\",\r\n              body: data\r\n          }\r\n      )\r\n      .then(\r\n          res=>res.json()\r\n      )\r\n      .then(\r\n          data=>{\r\n              setUrl(data.url);\r\n              if(data.url === undefined){\r\n                  toast.error(\r\n                      'Error occured while uploading image',\r\n                      {\r\n                      position: \"top-right\",\r\n                      autoClose: 2000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      draggable: true,\r\n                      progress: undefined\r\n                      }\r\n                  );\r\n              }else{\r\n                  console.log(data.url);\r\n              }\r\n          }\r\n      )\r\n    } else {\r\n      toast.error(\"password in not equal to  confirm password\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n        autoClose: 1500,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n      <div\r\n        style={{\r\n          width: \"80%\",\r\n          margin: \"auto\",\r\n          padding: \"15px\",\r\n          borderRadius: \"15px\",\r\n          border: \"1px solid grey\",\r\n          marginTop: \"30px\",\r\n          marginBottom: \"30px\",\r\n        }}\r\n      >\r\n        <div style={{ textAlign: \"center\", margin: \"10px\" }}>\r\n          <h1>Edit Profile</h1>\r\n        </div>\r\n        <div style={{ width: \"80%\", margin: \"auto\" }}>\r\n          <form onSubmit={submitHandler}>\r\n            <div style={{ display: \"flex\" }}>\r\n              <div\r\n                style={{\r\n                  width: \"50%\",\r\n                  margin: \"5px\",\r\n                  marginLeft: \"10px\",\r\n                  marginRight: \"0px\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  value={firstName}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div style={{ width: \"50%\", margin: \"5px\", marginRight: \"0px\" }}>\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  value={lastName}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Email\"\r\n                id=\"outlined-size-small\"\r\n                value={email}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Contact Number\"\r\n                id=\"outlined-size-small\"\r\n                type=\"number\"\r\n                value={contactNo}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setContactNo(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Address\"\r\n                value={address}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"City\"\r\n                value={city}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setCity(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"State\"\r\n                value={state}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setState(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Country\"\r\n                value={country}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Password\"\r\n                value={password}\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                value={ConfirmPassword}\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                size=\"small\"\r\n                fullWidth\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\" }}>\r\n              <label>\r\n                <p style={{ size: \"1.2rem\" }}>Update Profile Pic</p>\r\n              </label>\r\n              <Input\r\n                type=\"file\"\r\n                id=\"ii\"\r\n                pattern=\".{1,50}\"\r\n                onChange={(e) => setUpdatePic(e.target.files[0])}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", margin: \"10px\", textAlign: \"center\" }}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\CustomerBiddingScreen\\CustomerBiddingScreen.js",["318","319","320","321","322","323","324","325","326","327","328","329"],"import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './CustomerBiddingScreen.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GavelIcon from '@material-ui/icons/Gavel';\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst jwt = require('jsonwebtoken');\r\n\r\ntoast.configure();\r\n\r\nconst months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n\r\nexport default function CustomerBiddingScreen(props){\r\n    const [bidSummary, setBidSummary] = useState({});\r\n    const [products, setProducts] = useState([]);\r\n    const [sellers, setSellers] = useState([]);\r\n    const [price, setPrice] = useState(0);\r\n    const [id, setId] = useState(undefined);\r\n    const [bidId, setBidId] = useState(undefined);\r\n    const [update, setUpdate] = useState(0);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const decodedToken = jwt.verify(localStorage.getItem(\"CustomerJwt\"), process.env.REACT_APP_JWT_SECRET);\r\n            setId(decodedToken._id);\r\n            console.log(decodedToken)\r\n            fetch(\r\n                'http://localhost:3001/api/bid/customer/'+props.match.params.id,\r\n                {\r\n                    method:\"post\",\r\n                    headers:{\r\n                        \"Content-Type\":\"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        customerId: decodedToken._id\r\n                    })\r\n                }\r\n            ).then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result);\r\n                if(result.message===\"Success\"){\r\n                    setBidId(result.bid._id);\r\n                    setBidSummary({\r\n                        totalItems: result.products.length,\r\n                        currentMinBid: result.sellers[0].biddingPrice,\r\n                        status: (Date.now()-new Date(result.bid.orderedAt))/(1000*60)<180?\"Ongoing\":\"Expired\",\r\n                        bidDate: months[new Date(result.bid.orderedAt).getMonth()]+\" \"+new Date(result.bid.orderedAt).getDate()+\", \"+new Date(result.bid.orderedAt).getFullYear(),\r\n                        timeRemaining: (Date.now()-new Date(result.bid.orderedAt))/(1000*60)<180?180-((Date.now()-new Date(result.bid.orderedAt))/(1000*60)).toFixed(0)+\" minutes\":\"---\"\r\n                    });\r\n                    setProducts(result.products);\r\n                    setSellers(result.sellers);\r\n                }else{\r\n                    history.push(\"/error\")\r\n                }\r\n                \r\n            })\r\n        }catch(err){\r\n            console.log(err);\r\n            toast.error(\"Please login first !\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1500,\r\n            });\r\n            history.push(\"/signin\")\r\n        }\r\n    },[update]);\r\n\r\n    return(\r\n        <div style={{paddingLeft:\"10px\",paddingRight:\"10px\"}}>\r\n        <div className=\"bidding_screen_all_content\">\r\n            <div className=\"bidding_screen_heading\">\r\n                <h1>BIDDING SCREEN</h1>\r\n            </div>\r\n            <div className=\"bidding_screen_body\">\r\n                <h1 \r\n                style={{\r\n                    marginTop:\"10px\",\r\n                    marginBottom:\"10px\"}}\r\n                >BID SUMMARY</h1>\r\n                <Grid container\r\n                style={{padding:\"8px\"}}>\r\n                    <Grid item xs={12} sm={12} md={6} md={6}\r\n                    style={{\r\n                        textAlign:\"left\",\r\n                        borderBottom:\"1px solid gray\",\r\n                        padding:\"5px\",\r\n                    }}>\r\n                        <h3 className=\"bid_summary\">TOTAL ITEMS : {bidSummary.totalItems}</h3>\r\n                        <h3 className=\"bid_summary\">CURRENT MIN BID: ₹{bidSummary.currentMinBid}</h3>\r\n                        <h3 className=\"bid_summary\">BID STATUS: <span className={bidSummary.status===\"Ongoing\"?\"status_green\":\"status_red\"}>{bidSummary.status}</span></h3>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6} md={6}\r\n                    style={{\r\n                        textAlign:\"left\",\r\n                        borderBottom:\"1px solid gray\",\r\n                        padding:\"5px\",\r\n                    }}>\r\n                        <h3 className=\"bid_summary\">BID DATE : {bidSummary.bidDate}</h3>\r\n                        <h3 className=\"bid_summary\">TIME REMAINING : {bidSummary.timeRemaining}</h3>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <h1>LIST OF ITEMS</h1>\r\n                \r\n                {\r\n                    products.map(data=>{\r\n                        return(\r\n                            <Grid container\r\n                            style={{padding:\"5px\"}}>\r\n                                <Grid\r\n                            style={{\r\n                                borderBottom:\"1.5px solid gray\"\r\n                            }} \r\n                            item xs={12} sm={12} md={6} lg={4}>\r\n                                <img src={data.image}\r\n                                    style={{\r\n                                        borderRadius:\"10px\",\r\n                                        width:\"100%\",\r\n                                        height:\"220px\",\r\n                                        marginTop:\"10px\",\r\n                                        marginLeft:\"auto\",\r\n                                        marginRight:\"auto\",\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid style={{\r\n                                textAlign:\"left\",\r\n                                padding:\"10px\",\r\n                                borderBottom:\"1.5px solid gray\"}} \r\n                                item xs={12} sm={12} md={6} lg={8}>\r\n                                <h2 className=\"item_details\">NAME : {data.name}</h2>\r\n                                <h2 className=\"item_details\">CATEGORY : {data.category}</h2>\r\n                                <h2 className=\"item_details\">QUANTITY : {data.quantity}</h2>\r\n                            </Grid>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n                \r\n                <h1>LIST OF BIDDING SELLERS</h1>\r\n                {\r\n                    sellers.map(data=>{\r\n                        return(\r\n                            <Grid\r\n                            style={{maxWidth:\"560px\",\r\n                            marginLeft:\"auto\",\r\n                            marginRight:\"auto\",\r\n                            paddingLeft:\"10px\",\r\n                            paddingRight:\"10px\"}}\r\n                            container>\r\n                                <Grid \r\n                                style={{borderBottom:\"1px solid gray\"}} \r\n                                item xs={3} sm={3} md={3} lg={3}>\r\n                                    <img src={data.image}\r\n                                    style={{\r\n                                        borderRadius:\"50%\",\r\n                                        width:\"60px\",\r\n                                        height:\"60px\",\r\n                                        marginTop:\"10px\"\r\n                                    }}/>\r\n                                </Grid>\r\n                                <Grid \r\n                                style={{borderBottom:\"1px solid gray\",\r\n                                textAlign:\"left\"}}  \r\n                                item xs={9} sm={9} md={9} lg={9}>\r\n                                    <h3\r\n                                    style={{\r\n                                        marginTop:\"10px\"\r\n                                    }}>{data.name}</h3>\r\n                                    <h4\r\n                                    style={{\r\n                                        marginTop:\"10px\"\r\n                                    }}>BIDDING PRICE : ₹{data.biddingPrice}</h4>\r\n                                </Grid>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n                    \r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Footers\\footer.jsx",["330"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import './navbar.css';\r\n// import './aboutus.css';\r\nimport \"./footer.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faFacebook,\r\n  faTwitter,\r\n  faInstagram,\r\n  faLinkedin,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <footer class=\"footer\">\r\n        <div class=\"container1\">\r\n          <div class=\"row1\">\r\n            <div class=\"footer-col\">\r\n              <h4>Get to Know Us</h4>\r\n              <ul>\r\n                <li>\r\n                  <a href=\"/aboutus\">About Us</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"/feedback\">Feedback</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"footer-col\">\r\n              <h4>Connect with Us</h4>\r\n              <a href=\"/aboutus\" className=\"linkdin social\">\r\n                <FontAwesomeIcon\r\n                  icon={faLinkedin}\r\n                  size=\"2x\"\r\n                  style={{ color: \"#bbbbbb\" }}\r\n                />\r\n              </a>\r\n              <a href=\"/aboutus\" className=\"facebook social\">\r\n                <FontAwesomeIcon\r\n                  icon={faFacebook}\r\n                  size=\"2x\"\r\n                  style={{ color: \"#bbbbbb\" }}\r\n                />\r\n              </a>\r\n              <a href=\"/aboutus\" className=\"twitter social\">\r\n                <FontAwesomeIcon\r\n                  icon={faTwitter}\r\n                  size=\"2x\"\r\n                  style={{ color: \"#bbbbbb\" }}\r\n                />\r\n              </a>\r\n              <a href=\"/aboutus\" className=\"instagram social\">\r\n                <FontAwesomeIcon\r\n                  icon={faInstagram}\r\n                  size=\"2x\"\r\n                  style={{ marginRight: \"10px\", color: \"#bbbbbb\" }}\r\n                />\r\n              </a>\r\n            </div>\r\n            <div class=\"footer-col\">\r\n              <h4>Important links</h4>\r\n              <ul>\r\n                <li>\r\n                  <a href=\"/\"> Home Screen</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"/category\">Category</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"/feedback\">Feedback</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"footer-col\">\r\n              <h4>Login</h4>\r\n              <ul>\r\n                <li>\r\n                  <a href=\"/signin\">Customer Login</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"/sellersignin\">Seller Login</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\AboutUs\\aboutus.jsx",["331"],"import React from \"react\";\r\nimport \"./aboutus.css\";\r\nimport amit from \"./AMIT.jpeg\";\r\nimport nalin from \"./NALIN.jpeg\";\r\nimport vijay from \"./Vijay.jpeg\";\r\nimport prerit from \"./PRERIT.jpg\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faFacebook,\r\n  faTwitter,\r\n  faInstagram,\r\n  faLinkedin,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      {/* <Nav/> */}\r\n      <h2 style={{ fontFamily: \"Trebuchet MS\", marginTop: \"10px\" }}>\r\n        <center>\r\n          <b>\r\n            <u>Contact Us</u>\r\n          </b>\r\n        </center>\r\n      </h2>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"column drift\">\r\n          <div class=\"card\">\r\n            <img\r\n              className=\"aboutusimage\"\r\n              src={nalin}\r\n              alt=\"Nalin\"\r\n              style={{ width: \"80%\" }}\r\n            />\r\n            <h3>NALIN AGRAWAL</h3>\r\n            <p class=\"title\">Computer Science and Engineering</p>\r\n            <p>\r\n              <h2 style={{ fontFamily: \"Arial\" }}> IIIT PUNE</h2>\r\n            </p>\r\n            <a\r\n              href=\"https://www.linkedin.com/in/nalin-agrawal-a73455191/\"\r\n              className=\"linkdin social\"\r\n            >\r\n              <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.facebook.com/nalin.agrawal.12\"\r\n              className=\"facebook social\"\r\n            >\r\n              <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://twitter.com/NalinAgrawal12\"\r\n              className=\"twitter social\"\r\n            >\r\n              <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.instagram.com/nalinagrawal382/\"\r\n              className=\"instagram social\"\r\n            >\r\n              <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\r\n            </a>\r\n            <p>\r\n              <a\r\n                href=\"mailto:nalinagrawal.iiitp@gmail.com\"\r\n                target={\"blank\"}\r\n                class=\"contact\"\r\n              >\r\n                Contact\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"column\">\r\n          <div class=\"card\">\r\n            <img\r\n              className=\"aboutusimage\"\r\n              src={prerit}\r\n              alt=\"Prerit\"\r\n              style={{ width: \"80%\" }}\r\n            />\r\n            <h3>PRERIT KUMAR JHA</h3>\r\n            <p class=\"title\">Computer Science and Engineering</p>\r\n            <p>\r\n              <h2 style={{ fontFamily: \"Arial\" }}>IIIT PUNE</h2>\r\n            </p>\r\n            <a\r\n              href=\"https://www.linkedin.com/in/prerit-kumar-jha-5513a3134/\"\r\n              className=\"linkdin social\"\r\n            >\r\n              <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.facebook.com/profile.php?id=100004937565856\"\r\n              className=\"facebook social\"\r\n            >\r\n              <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\r\n            </a>\r\n            <a href=\"#\" className=\"twitter social\">\r\n              <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.instagram.com/preritkrjha/\"\r\n              className=\"instagram social\"\r\n            >\r\n              <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\r\n            </a>\r\n            <p>\r\n              <a\r\n                href=\"mailto:preritkrjha@gmail.com\"\r\n                target={\"blank\"}\r\n                class=\"contact\"\r\n              >\r\n                Contact\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"column\">\r\n          <div class=\"card\">\r\n            <img\r\n              className=\"aboutusimage\"\r\n              src={amit}\r\n              alt=\"Amit\"\r\n              style={{ width: \"80%\" }}\r\n            />\r\n            <h3>AMIT KUMAR UPDHYAY</h3>\r\n            <p class=\"title\">Computer Science and Engineering</p>\r\n            <p>\r\n              {\" \"}\r\n              <h2 style={{ fontFamily: \"Arial\" }}>IIIT PUNE</h2>\r\n            </p>\r\n            <a\r\n              href=\"https://www.linkedin.com/in/amit-kumar-upadhyay-054b07193/\"\r\n              className=\"linkdin social\"\r\n            >\r\n              <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.facebook.com/profile.php?id=100009546061383\"\r\n              className=\"facebook social\"\r\n            >\r\n              <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://twitter.com/AmitKum01184222\"\r\n              className=\"twitter social\"\r\n            >\r\n              <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.instagram.com/u_amit65/\"\r\n              className=\"instagram social\"\r\n            >\r\n              <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\r\n            </a>\r\n            <p>\r\n              <a\r\n                href=\"mailto:amitupadhyay468@gmail.com\"\r\n                target={\"blank\"}\r\n                class=\"contact\"\r\n              >\r\n                Contact\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"column\">\r\n          <div class=\"card\">\r\n            <img\r\n              className=\"aboutusimage\"\r\n              src={vijay}\r\n              alt=\"Vijay\"\r\n              style={{ width: \"80%\" }}\r\n            />\r\n            <h3>VIJAY JOSHI</h3>\r\n            <p class=\"title\">Computer Science and Engineering</p>\r\n            <p>\r\n              <h2 style={{ fontFamily: \"Arial\" }}>IIIT PUNE</h2>\r\n            </p>\r\n            <a\r\n              href=\"https://www.linkedin.com/in/vijay-joshi-80221a193/\"\r\n              className=\"linkdin social\"\r\n            >\r\n              <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.facebook.com/vijayjoshi802\"\r\n              className=\"facebook social\"\r\n            >\r\n              <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://twitter.com/vijay_joshi16\"\r\n              className=\"twitter social\"\r\n            >\r\n              <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.instagram.com/vijayjoshi802/\"\r\n              className=\"instagram social\"\r\n            >\r\n              <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\r\n            </a>\r\n            <p>\r\n              <a\r\n                href=\"mailto:joshivijay324@gmail.com\"\r\n                target={\"blank\"}\r\n                class=\"contact\"\r\n              >\r\n                Contact\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"column1\">\r\n          <div class=\"card1\">\r\n            {/* <!-- <h2 style=\"font-family: 'Comic Sans MS'\"><center><b><u>About Us</u></b></center></h2> --> */}\r\n            <div class=\"w\">\r\n              <h2\r\n                style={{ fontFamily: \"Trebuchet MS\", textAlign: \"center\" }}\r\n                className=\"whyus\"\r\n              >\r\n                <b>\r\n                  <u>WHY US? 🤔</u>\r\n                </b>\r\n              </h2>\r\n\r\n              <p>\r\n                <div class=\"w01\">\r\n                  1.E-Commerce Website for Selling and Buying Items.\r\n                </div>\r\n              </p>\r\n              <p>\r\n                <div class=\"w01\">\r\n                  2.Different Categories for differnt products are provided.\r\n                </div>\r\n              </p>\r\n              <p>\r\n                <div class=\"w01\">\r\n                  3.Any one who wants to sell any item can register and Sell\r\n                  their Product.\r\n                </div>\r\n              </p>\r\n              <p>\r\n                <div class=\"w01\">4.Privacy For Sellers and Customers.</div>\r\n              </p>\r\n              <p>\r\n                <div class=\"w01\">\r\n                  5.Providing several new things for our Customers.\r\n                </div>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Footer/> */}\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","E:\\MY PROJECT\\BTP-4\\Frontend\\src\\components\\Screens\\Category\\Data.js",[],{"ruleId":"332","severity":1,"message":"333","line":6,"column":8,"nodeType":"334","messageId":"335","endLine":6,"endColumn":24},{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","replacedBy":"339"},{"ruleId":"332","severity":1,"message":"340","line":2,"column":25,"nodeType":"334","messageId":"335","endLine":2,"endColumn":29},{"ruleId":"332","severity":1,"message":"341","line":15,"column":10,"nodeType":"334","messageId":"335","endLine":15,"endColumn":26},{"ruleId":"332","severity":1,"message":"342","line":16,"column":8,"nodeType":"334","messageId":"335","endLine":16,"endColumn":17},{"ruleId":"332","severity":1,"message":"343","line":35,"column":10,"nodeType":"334","messageId":"335","endLine":35,"endColumn":15},{"ruleId":"332","severity":1,"message":"344","line":39,"column":7,"nodeType":"334","messageId":"335","endLine":39,"endColumn":17},{"ruleId":"332","severity":1,"message":"345","line":48,"column":7,"nodeType":"334","messageId":"335","endLine":48,"endColumn":19},{"ruleId":"332","severity":1,"message":"346","line":73,"column":10,"nodeType":"334","messageId":"335","endLine":73,"endColumn":17},{"ruleId":"332","severity":1,"message":"347","line":73,"column":19,"nodeType":"334","messageId":"335","endLine":73,"endColumn":29},{"ruleId":"348","severity":1,"message":"349","line":171,"column":13,"nodeType":"350","endLine":262,"endColumn":4},{"ruleId":"351","severity":1,"message":"352","line":216,"column":18,"nodeType":"334","messageId":"353","endLine":216,"endColumn":21},{"ruleId":"351","severity":1,"message":"354","line":217,"column":15,"nodeType":"334","messageId":"353","endLine":217,"endColumn":18},{"ruleId":"348","severity":1,"message":"355","line":262,"column":6,"nodeType":"356","endLine":262,"endColumn":8,"suggestions":"357"},{"ruleId":"332","severity":1,"message":"358","line":301,"column":11,"nodeType":"334","messageId":"335","endLine":301,"endColumn":14},{"ruleId":"359","severity":1,"message":"360","line":348,"column":15,"nodeType":"361","endLine":348,"endColumn":80},{"ruleId":"362","severity":1,"message":"363","line":510,"column":15,"nodeType":"364","endLine":510,"endColumn":57},{"ruleId":"332","severity":1,"message":"365","line":15,"column":7,"nodeType":"334","messageId":"335","endLine":15,"endColumn":12},{"ruleId":"348","severity":1,"message":"349","line":19,"column":19,"nodeType":"350","endLine":66,"endColumn":4},{"ruleId":"332","severity":1,"message":"366","line":27,"column":15,"nodeType":"334","messageId":"335","endLine":27,"endColumn":19},{"ruleId":"348","severity":1,"message":"367","line":66,"column":6,"nodeType":"356","endLine":66,"endColumn":8,"suggestions":"368"},{"ruleId":"332","severity":1,"message":"369","line":2,"column":8,"nodeType":"334","messageId":"335","endLine":2,"endColumn":16},{"ruleId":"332","severity":1,"message":"370","line":2,"column":10,"nodeType":"334","messageId":"335","endLine":2,"endColumn":15},{"ruleId":"332","severity":1,"message":"371","line":15,"column":8,"nodeType":"334","messageId":"335","endLine":15,"endColumn":16},{"ruleId":"332","severity":1,"message":"372","line":31,"column":14,"nodeType":"334","messageId":"335","endLine":31,"endColumn":19},{"ruleId":"373","severity":1,"message":"374","line":60,"column":15,"nodeType":"361","endLine":60,"endColumn":30},{"ruleId":"359","severity":1,"message":"360","line":62,"column":19,"nodeType":"361","endLine":70,"endColumn":21},{"ruleId":"348","severity":1,"message":"375","line":122,"column":6,"nodeType":"356","endLine":122,"endColumn":8,"suggestions":"376"},{"ruleId":"332","severity":1,"message":"370","line":2,"column":10,"nodeType":"334","messageId":"335","endLine":2,"endColumn":15},{"ruleId":"332","severity":1,"message":"371","line":14,"column":8,"nodeType":"334","messageId":"335","endLine":14,"endColumn":16},{"ruleId":"332","severity":1,"message":"372","line":32,"column":14,"nodeType":"334","messageId":"335","endLine":32,"endColumn":19},{"ruleId":"332","severity":1,"message":"377","line":45,"column":9,"nodeType":"334","messageId":"335","endLine":45,"endColumn":16},{"ruleId":"373","severity":1,"message":"374","line":62,"column":15,"nodeType":"361","endLine":62,"endColumn":30},{"ruleId":"359","severity":1,"message":"360","line":64,"column":19,"nodeType":"361","endLine":72,"endColumn":21},{"ruleId":"332","severity":1,"message":"378","line":118,"column":24,"nodeType":"334","messageId":"335","endLine":118,"endColumn":39},{"ruleId":"348","severity":1,"message":"379","line":129,"column":6,"nodeType":"356","endLine":129,"endColumn":8,"suggestions":"380"},{"ruleId":"381","severity":1,"message":"382","line":224,"column":21,"nodeType":"383","messageId":"384","endLine":224,"endColumn":23},{"ruleId":"348","severity":1,"message":"385","line":54,"column":7,"nodeType":"356","endLine":54,"endColumn":9,"suggestions":"386"},{"ruleId":"381","severity":1,"message":"387","line":217,"column":17,"nodeType":"383","messageId":"384","endLine":217,"endColumn":19},{"ruleId":"381","severity":1,"message":"387","line":284,"column":32,"nodeType":"383","messageId":"384","endLine":284,"endColumn":34},{"ruleId":"381","severity":1,"message":"387","line":302,"column":28,"nodeType":"383","messageId":"384","endLine":302,"endColumn":30},{"ruleId":"381","severity":1,"message":"387","line":398,"column":24,"nodeType":"383","messageId":"384","endLine":398,"endColumn":26},{"ruleId":"381","severity":1,"message":"387","line":472,"column":25,"nodeType":"383","messageId":"384","endLine":472,"endColumn":27},{"ruleId":"359","severity":1,"message":"360","line":481,"column":37,"nodeType":"361","endLine":482,"endColumn":64},{"ruleId":"362","severity":1,"message":"363","line":504,"column":52,"nodeType":"364","endLine":504,"endColumn":58},{"ruleId":"359","severity":1,"message":"360","line":505,"column":25,"nodeType":"361","endLine":506,"endColumn":56},{"ruleId":"381","severity":1,"message":"387","line":547,"column":24,"nodeType":"383","messageId":"384","endLine":547,"endColumn":26},{"ruleId":"381","severity":1,"message":"387","line":592,"column":24,"nodeType":"383","messageId":"384","endLine":592,"endColumn":26},{"ruleId":"381","severity":1,"message":"382","line":143,"column":28,"nodeType":"383","messageId":"384","endLine":143,"endColumn":30},{"ruleId":"332","severity":1,"message":"388","line":54,"column":10,"nodeType":"334","messageId":"335","endLine":54,"endColumn":19},{"ruleId":"348","severity":1,"message":"349","line":66,"column":13,"nodeType":"350","endLine":108,"endColumn":4},{"ruleId":"348","severity":1,"message":"389","line":108,"column":6,"nodeType":"356","endLine":108,"endColumn":8,"suggestions":"390"},{"ruleId":"359","severity":1,"message":"360","line":117,"column":21,"nodeType":"361","endLine":118,"endColumn":45},{"ruleId":"359","severity":1,"message":"360","line":160,"column":13,"nodeType":"361","endLine":160,"endColumn":52},{"ruleId":"332","severity":1,"message":"388","line":53,"column":12,"nodeType":"334","messageId":"335","endLine":53,"endColumn":21},{"ruleId":"359","severity":1,"message":"360","line":69,"column":21,"nodeType":"361","endLine":70,"endColumn":45},{"ruleId":"348","severity":1,"message":"391","line":141,"column":7,"nodeType":"356","endLine":141,"endColumn":9,"suggestions":"392"},{"ruleId":"359","severity":1,"message":"360","line":149,"column":17,"nodeType":"361","endLine":149,"endColumn":55},{"ruleId":"332","severity":1,"message":"341","line":15,"column":10,"nodeType":"334","messageId":"335","endLine":15,"endColumn":26},{"ruleId":"332","severity":1,"message":"342","line":16,"column":8,"nodeType":"334","messageId":"335","endLine":16,"endColumn":17},{"ruleId":"332","severity":1,"message":"343","line":35,"column":10,"nodeType":"334","messageId":"335","endLine":35,"endColumn":15},{"ruleId":"332","severity":1,"message":"344","line":39,"column":7,"nodeType":"334","messageId":"335","endLine":39,"endColumn":17},{"ruleId":"332","severity":1,"message":"345","line":48,"column":7,"nodeType":"334","messageId":"335","endLine":48,"endColumn":19},{"ruleId":"332","severity":1,"message":"346","line":73,"column":10,"nodeType":"334","messageId":"335","endLine":73,"endColumn":17},{"ruleId":"332","severity":1,"message":"347","line":73,"column":19,"nodeType":"334","messageId":"335","endLine":73,"endColumn":29},{"ruleId":"348","severity":1,"message":"349","line":171,"column":13,"nodeType":"350","endLine":262,"endColumn":4},{"ruleId":"381","severity":1,"message":"387","line":201,"column":43,"nodeType":"383","messageId":"384","endLine":201,"endColumn":45},{"ruleId":"351","severity":1,"message":"352","line":216,"column":18,"nodeType":"334","messageId":"353","endLine":216,"endColumn":21},{"ruleId":"351","severity":1,"message":"354","line":217,"column":15,"nodeType":"334","messageId":"353","endLine":217,"endColumn":18},{"ruleId":"348","severity":1,"message":"355","line":262,"column":6,"nodeType":"356","endLine":262,"endColumn":8,"suggestions":"393"},{"ruleId":"332","severity":1,"message":"358","line":301,"column":11,"nodeType":"334","messageId":"335","endLine":301,"endColumn":14},{"ruleId":"359","severity":1,"message":"360","line":348,"column":15,"nodeType":"361","endLine":348,"endColumn":80},{"ruleId":"362","severity":1,"message":"363","line":510,"column":15,"nodeType":"364","endLine":510,"endColumn":57},{"ruleId":"332","severity":1,"message":"340","line":6,"column":10,"nodeType":"334","messageId":"335","endLine":6,"endColumn":14},{"ruleId":"332","severity":1,"message":"394","line":7,"column":7,"nodeType":"334","messageId":"335","endLine":7,"endColumn":10},{"ruleId":"332","severity":1,"message":"395","line":11,"column":10,"nodeType":"334","messageId":"335","endLine":11,"endColumn":16},{"ruleId":"332","severity":1,"message":"396","line":11,"column":18,"nodeType":"334","messageId":"335","endLine":11,"endColumn":27},{"ruleId":"348","severity":1,"message":"349","line":22,"column":13,"nodeType":"350","endLine":42,"endColumn":4},{"ruleId":"332","severity":1,"message":"397","line":24,"column":13,"nodeType":"334","messageId":"335","endLine":24,"endColumn":17},{"ruleId":"348","severity":1,"message":"398","line":42,"column":6,"nodeType":"356","endLine":42,"endColumn":8,"suggestions":"399"},{"ruleId":"348","severity":1,"message":"385","line":50,"column":7,"nodeType":"356","endLine":50,"endColumn":9,"suggestions":"400"},{"ruleId":"348","severity":1,"message":"401","line":114,"column":7,"nodeType":"356","endLine":114,"endColumn":12,"suggestions":"402"},{"ruleId":"332","severity":1,"message":"403","line":119,"column":14,"nodeType":"334","messageId":"335","endLine":119,"endColumn":15},{"ruleId":"381","severity":1,"message":"387","line":223,"column":25,"nodeType":"383","messageId":"384","endLine":223,"endColumn":27},{"ruleId":"381","severity":1,"message":"387","line":241,"column":25,"nodeType":"383","messageId":"384","endLine":241,"endColumn":27},{"ruleId":"381","severity":1,"message":"387","line":300,"column":25,"nodeType":"383","messageId":"384","endLine":300,"endColumn":27},{"ruleId":"359","severity":1,"message":"360","line":327,"column":53,"nodeType":"361","endLine":334,"endColumn":56},{"ruleId":"332","severity":1,"message":"404","line":11,"column":7,"nodeType":"334","messageId":"335","endLine":11,"endColumn":10},{"ruleId":"348","severity":1,"message":"349","line":12,"column":13,"nodeType":"350","endLine":28,"endColumn":4},{"ruleId":"332","severity":1,"message":"397","line":17,"column":15,"nodeType":"334","messageId":"335","endLine":17,"endColumn":19},{"ruleId":"348","severity":1,"message":"405","line":28,"column":6,"nodeType":"356","endLine":28,"endColumn":8,"suggestions":"406"},{"ruleId":"332","severity":1,"message":"370","line":3,"column":10,"nodeType":"334","messageId":"335","endLine":3,"endColumn":15},{"ruleId":"332","severity":1,"message":"407","line":17,"column":8,"nodeType":"334","messageId":"335","endLine":17,"endColumn":22},{"ruleId":"359","severity":1,"message":"360","line":89,"column":11,"nodeType":"361","endLine":92,"endColumn":13},{"ruleId":"359","severity":1,"message":"360","line":105,"column":11,"nodeType":"361","endLine":108,"endColumn":13},{"ruleId":"359","severity":1,"message":"360","line":121,"column":11,"nodeType":"361","endLine":124,"endColumn":13},{"ruleId":"359","severity":1,"message":"360","line":137,"column":11,"nodeType":"361","endLine":140,"endColumn":13},{"ruleId":"359","severity":1,"message":"360","line":153,"column":11,"nodeType":"361","endLine":156,"endColumn":13},{"ruleId":"359","severity":1,"message":"360","line":169,"column":11,"nodeType":"361","endLine":172,"endColumn":13},{"ruleId":"359","severity":1,"message":"360","line":185,"column":11,"nodeType":"361","endLine":188,"endColumn":13},{"ruleId":"359","severity":1,"message":"360","line":200,"column":11,"nodeType":"361","endLine":203,"endColumn":13},{"ruleId":"332","severity":1,"message":"372","line":289,"column":14,"nodeType":"334","messageId":"335","endLine":289,"endColumn":19},{"ruleId":"373","severity":1,"message":"374","line":320,"column":13,"nodeType":"361","endLine":320,"endColumn":28},{"ruleId":"359","severity":1,"message":"360","line":322,"column":17,"nodeType":"361","endLine":330,"endColumn":19},{"ruleId":"332","severity":1,"message":"408","line":473,"column":9,"nodeType":"334","messageId":"335","endLine":473,"endColumn":19},{"ruleId":"373","severity":1,"message":"409","line":509,"column":9,"nodeType":"361","endLine":509,"endColumn":65},{"ruleId":"359","severity":1,"message":"360","line":578,"column":13,"nodeType":"361","endLine":578,"endColumn":75},{"ruleId":"348","severity":1,"message":"349","line":166,"column":19,"nodeType":"350","endLine":245,"endColumn":4},{"ruleId":"332","severity":1,"message":"366","line":180,"column":17,"nodeType":"334","messageId":"335","endLine":180,"endColumn":21},{"ruleId":"332","severity":1,"message":"410","line":194,"column":17,"nodeType":"334","messageId":"335","endLine":194,"endColumn":25},{"ruleId":"332","severity":1,"message":"366","line":215,"column":17,"nodeType":"334","messageId":"335","endLine":215,"endColumn":21},{"ruleId":"332","severity":1,"message":"410","line":228,"column":17,"nodeType":"334","messageId":"335","endLine":228,"endColumn":25},{"ruleId":"381","severity":1,"message":"387","line":352,"column":47,"nodeType":"383","messageId":"384","endLine":352,"endColumn":49},{"ruleId":"348","severity":1,"message":"385","line":96,"column":6,"nodeType":"356","endLine":96,"endColumn":8,"suggestions":"411"},{"ruleId":"332","severity":1,"message":"412","line":3,"column":10,"nodeType":"334","messageId":"335","endLine":3,"endColumn":13},{"ruleId":"348","severity":1,"message":"385","line":93,"column":6,"nodeType":"356","endLine":93,"endColumn":8,"suggestions":"413"},{"ruleId":"348","severity":1,"message":"349","line":22,"column":13,"nodeType":"350","endLine":54,"endColumn":4},{"ruleId":"348","severity":1,"message":"414","line":29,"column":16,"nodeType":"415","endLine":29,"endColumn":24},{"ruleId":"416","severity":1,"message":"417","line":69,"column":17,"nodeType":"361","endLine":73,"endColumn":19},{"ruleId":"373","severity":1,"message":"409","line":77,"column":19,"nodeType":"361","endLine":77,"endColumn":31},{"ruleId":"332","severity":1,"message":"342","line":4,"column":8,"nodeType":"334","messageId":"335","endLine":4,"endColumn":17},{"ruleId":"332","severity":1,"message":"418","line":7,"column":8,"nodeType":"334","messageId":"335","endLine":7,"endColumn":23},{"ruleId":"348","severity":1,"message":"367","line":60,"column":5,"nodeType":"356","endLine":60,"endColumn":7,"suggestions":"419"},{"ruleId":"381","severity":1,"message":"387","line":65,"column":20,"nodeType":"383","messageId":"384","endLine":65,"endColumn":22},{"ruleId":"332","severity":1,"message":"420","line":2,"column":10,"nodeType":"334","messageId":"335","endLine":2,"endColumn":20},{"ruleId":"348","severity":1,"message":"349","line":30,"column":13,"nodeType":"350","endLine":65,"endColumn":4},{"ruleId":"332","severity":1,"message":"421","line":69,"column":13,"nodeType":"334","messageId":"335","endLine":69,"endColumn":21},{"ruleId":"348","severity":1,"message":"355","line":69,"column":7,"nodeType":"356","endLine":69,"endColumn":15,"suggestions":"422"},{"ruleId":"362","severity":1,"message":"363","line":121,"column":55,"nodeType":"364","endLine":121,"endColumn":61},{"ruleId":"362","severity":1,"message":"363","line":131,"column":55,"nodeType":"364","endLine":131,"endColumn":61},{"ruleId":"359","severity":1,"message":"360","line":182,"column":33,"nodeType":"361","endLine":191,"endColumn":35},{"ruleId":"359","severity":1,"message":"360","line":222,"column":37,"nodeType":"361","endLine":228,"endColumn":41},{"ruleId":"332","severity":1,"message":"412","line":3,"column":10,"nodeType":"334","messageId":"335","endLine":3,"endColumn":13},{"ruleId":"332","severity":1,"message":"342","line":4,"column":8,"nodeType":"334","messageId":"335","endLine":4,"endColumn":17},{"ruleId":"332","severity":1,"message":"418","line":7,"column":8,"nodeType":"334","messageId":"335","endLine":7,"endColumn":23},{"ruleId":"348","severity":1,"message":"367","line":60,"column":5,"nodeType":"356","endLine":60,"endColumn":7,"suggestions":"423"},{"ruleId":"381","severity":1,"message":"387","line":65,"column":20,"nodeType":"383","messageId":"384","endLine":65,"endColumn":22},{"ruleId":"332","severity":1,"message":"420","line":2,"column":10,"nodeType":"334","messageId":"335","endLine":2,"endColumn":20},{"ruleId":"348","severity":1,"message":"424","line":65,"column":5,"nodeType":"356","endLine":65,"endColumn":10,"suggestions":"425"},{"ruleId":"348","severity":1,"message":"349","line":67,"column":13,"nodeType":"350","endLine":109,"endColumn":4},{"ruleId":"348","severity":1,"message":"385","line":109,"column":6,"nodeType":"356","endLine":109,"endColumn":8,"suggestions":"426"},{"ruleId":"332","severity":1,"message":"421","line":113,"column":13,"nodeType":"334","messageId":"335","endLine":113,"endColumn":21},{"ruleId":"332","severity":1,"message":"342","line":5,"column":8,"nodeType":"334","messageId":"335","endLine":5,"endColumn":17},{"ruleId":"332","severity":1,"message":"427","line":6,"column":8,"nodeType":"334","messageId":"335","endLine":6,"endColumn":17},{"ruleId":"332","severity":1,"message":"428","line":20,"column":12,"nodeType":"334","messageId":"335","endLine":20,"endColumn":17},{"ruleId":"332","severity":1,"message":"429","line":20,"column":19,"nodeType":"334","messageId":"335","endLine":20,"endColumn":27},{"ruleId":"332","severity":1,"message":"430","line":21,"column":12,"nodeType":"334","messageId":"335","endLine":21,"endColumn":14},{"ruleId":"332","severity":1,"message":"431","line":22,"column":12,"nodeType":"334","messageId":"335","endLine":22,"endColumn":17},{"ruleId":"332","severity":1,"message":"432","line":23,"column":20,"nodeType":"334","messageId":"335","endLine":23,"endColumn":29},{"ruleId":"348","severity":1,"message":"355","line":69,"column":7,"nodeType":"356","endLine":69,"endColumn":15,"suggestions":"433"},{"ruleId":"362","severity":1,"message":"363","line":85,"column":55,"nodeType":"364","endLine":85,"endColumn":61},{"ruleId":"362","severity":1,"message":"363","line":95,"column":55,"nodeType":"364","endLine":95,"endColumn":61},{"ruleId":"359","severity":1,"message":"360","line":119,"column":33,"nodeType":"361","endLine":128,"endColumn":35},{"ruleId":"359","severity":1,"message":"360","line":159,"column":37,"nodeType":"361","endLine":165,"endColumn":41},{"ruleId":"332","severity":1,"message":"369","line":2,"column":8,"nodeType":"334","messageId":"335","endLine":2,"endColumn":16},{"ruleId":"373","severity":1,"message":"409","line":101,"column":13,"nodeType":"361","endLine":101,"endColumn":52},"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","no-native-reassign",["434"],"no-negated-in-lhs",["435"],"'Link' is defined but never used.","'FaCommentsDollar' is defined but never used.","'TextField' is defined but never used.","'sleep' is defined but never used.","'categories' is assigned a value but never used.","'generateData' is assigned a value but never used.","'product' is assigned a value but never used.","'setProduct' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-redeclare","'key' is already defined.","redeclared","'obj' is already defined.","React Hook useEffect has missing dependencies: 'history' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["436"],"'url' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'times' is assigned a value but never used.","'resp' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["437"],"'ReactDOM' is defined but never used.","'Media' is defined but never used.","'MailIcon' is defined but never used.","'setid' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'address'. Either include it or remove the dependency array.",["438"],"'history' is assigned a value but never used.","'setlastsearched' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["439"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["440"],"Expected '===' and instead saw '=='.","'pastOrder' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'jwt'. Either include them or remove the dependency array.",["441"],"React Hook useEffect has missing dependencies: 'history' and 'props.location.pathname'. Either include them or remove the dependency array.",["442"],["443"],"'jwt' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'reps' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'arr' and 'props.match.params.id'. Either include them or remove the dependency array.",["444"],["445"],"React Hook useEffect has missing dependencies: 'category', 'description', 'name', 'quantity', 'sellerId', and 'sellerPrice'. Either include them or remove the dependency array.",["446"],"'i' is assigned a value but never used.","'arr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'allItems'. Either include it or remove the dependency array.",["447"],"'LinearProgress' is defined but never used.","'handleOpen' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'responce' is assigned a value but never used.",["448"],"'jwt' is defined but never used.",["449"],"Assignments to the 'userId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'AccessAlarmIcon' is defined but never used.",["450"],"'makeStyles' is defined but never used.","'fileType' is assigned a value but never used.",["451"],["452"],"React Hook useEffect has missing dependencies: 'address', 'city', 'contactNo', 'country', 'email', 'firstName', 'lastName', 'password', 'state', and 'userId'. Either include them or remove the dependency array.",["453"],["454"],"'GavelIcon' is defined but never used.","'price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'id' is assigned a value but never used.","'bidId' is assigned a value but never used.","'setUpdate' is assigned a value but never used.",["455"],"no-global-assign","no-unsafe-negation",{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"458","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"456","fix":"469"},{"desc":"470","fix":"471"},{"desc":"458","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"458","fix":"477"},{"desc":"458","fix":"478"},{"desc":"458","fix":"479"},{"desc":"480","fix":"481"},{"desc":"458","fix":"482"},{"desc":"483","fix":"484"},{"desc":"458","fix":"485"},{"desc":"480","fix":"486"},"Update the dependencies array to be: [history, props.match.params.id]",{"range":"487","text":"488"},"Update the dependencies array to be: [history]",{"range":"489","text":"490"},"Update the dependencies array to be: [address]",{"range":"491","text":"492"},"Update the dependencies array to be: [search]",{"range":"493","text":"494"},{"range":"495","text":"490"},"Update the dependencies array to be: [history, jwt]",{"range":"496","text":"497"},"Update the dependencies array to be: [history, props.location.pathname]",{"range":"498","text":"499"},{"range":"500","text":"488"},"Update the dependencies array to be: [arr, props.match.params.id]",{"range":"501","text":"502"},{"range":"503","text":"490"},"Update the dependencies array to be: [category, description, name, quantity, sellerId, sellerPrice, url]",{"range":"504","text":"505"},"Update the dependencies array to be: [allItems]",{"range":"506","text":"507"},{"range":"508","text":"490"},{"range":"509","text":"490"},{"range":"510","text":"490"},"Update the dependencies array to be: [history, props.match.params.id, update]",{"range":"511","text":"512"},{"range":"513","text":"490"},"Update the dependencies array to be: [address, city, contactNo, country, email, firstName, lastName, password, state, url, userId]",{"range":"514","text":"515"},{"range":"516","text":"490"},{"range":"517","text":"512"},[8672,8674],"[history, props.match.params.id]",[2185,2187],"[history]",[4107,4109],"[address]",[4422,4424],"[search]",[2157,2159],[3413,3415],"[history, jwt]",[5361,5363],"[history, props.location.pathname]",[8690,8692],[1380,1382],"[arr, props.match.params.id]",[1922,1924],[4034,4039],"[category, description, name, quantity, sellerId, sellerPrice, url]",[967,969],"[allItems]",[2832,2834],[2696,2698],[2125,2127],[2985,2993],"[history, props.match.params.id, update]",[2136,2138],[2236,2241],"[address, city, contactNo, country, email, firstName, lastName, password, state, url, userId]",[3644,3646],[2996,3004]]